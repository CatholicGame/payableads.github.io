// Generated by Haxe 4.2.1+bf9ff69
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var $CB = function(r,opt) {
	this.$C = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["$CB"] = $CB;
$CB.__name__ = "$CB";
$CB.prototype = {
	$D: function(s) {
		if(this.$C.global) {
			this.$C.lastIndex = 0;
		}
		this.$C.m = this.$C.exec(s);
		this.$C.s = s;
		return this.$C.m != null;
	}
	,$E: function(n) {
		if(this.$C.m != null && n >= 0 && n < this.$C.m.length) {
			return this.$C.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,$H: function() {
		if(this.$C.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.$C.m.index, len : this.$C.m[0].length};
	}
	,$I: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.$C.global) {
			this.$C.lastIndex = pos;
			this.$C.m = this.$C.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.$C.m != null;
			if(b) {
				this.$C.s = s;
			}
			return b;
		} else {
			var b = this.$D(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.$C.s = s;
				this.$C.m.index += pos;
			}
			return b;
		}
	}
	,$L: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.$I(s,offset)) {
				buf_b += $CG.$1(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.$H();
			buf_b += $CG.$1(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += $CG.$1(f(this));
			if(p.len == 0) {
				buf_b += $CG.$1(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.$C.global) {
				break;
			}
		}
		if(!this.$C.global && offset > 0 && offset < s.length) {
			buf_b += $CG.$1(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: $CB
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var $CE = function() { };
$hxClasses["$CE"] = $CE;
$CE.__name__ = "$CE";
$CE.$Q = function(it) {
	var a = [];
	var i = it.iterator();
	while(i.hasNext()) a.push(i.next());
	return a;
};
$CE.$c = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = it.iterator();
		while(_.hasNext()) {
			_.next();
			++n;
		}
	} else {
		var x = it.iterator();
		while(x.hasNext()) if(pred(x.next())) {
			++n;
		}
	}
	return n;
};
Math.__name__ = "Math";
var $CF = function() { };
$hxClasses["$CF"] = $CF;
$CF.__name__ = "$CF";
$CF.$j = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
$CF.$m = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
$CF.$o = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
$CF.$p = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
$CF.$q = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
var $CG = function() { };
$hxClasses["$CG"] = $CG;
$CG.__name__ = "$CG";
$CG.$1 = function(s) {
	return js_Boot.__string_rec(s,"");
};
$CG.$3 = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var $CH = function() {
	this.$6 = "";
};
$hxClasses["$CH"] = $CH;
$CH.__name__ = "$CH";
$CH.prototype = {
	__class__: $CH
};
var $CJ = function() { };
$hxClasses["$CJ"] = $CJ;
$CJ.__name__ = "$CJ";
$CJ.$EB = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
$CJ.$HB = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
$CJ.$IB = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
$CJ.$JB = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
$CJ.$KB = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && $CJ.$JB(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
$CJ.$LB = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && $CJ.$JB(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
$CJ.$MB = function(s) {
	return $CJ.$KB($CJ.$LB(s));
};
$CJ.$K = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type.createEnum = function(e,constr,params) {
	var f = $CF.$j(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if($CF.$p(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
var $CK = {};
$CK.toString = function(this1) {
	switch(this1) {
	case 0:
		return "Element";
	case 1:
		return "PCData";
	case 2:
		return "CData";
	case 3:
		return "Comment";
	case 4:
		return "DocType";
	case 5:
		return "ProcessingInstruction";
	case 6:
		return "Document";
	}
};
var $CL = function(nodeType) {
	this.$dB = nodeType;
	this.$hB = [];
	this.$iB = new $CcC();
};
$hxClasses["$CL"] = $CL;
$CL.__name__ = "$CL";
$CL.$vB = function(str) {
	return $C_$C.$vB(str);
};
$CL.$wB = function(name) {
	var xml = new $CL($CL.$WB);
	if(xml.$dB != $CL.$WB) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.$dB == null ? "null" : $CK.toString(xml.$dB)));
	}
	xml.$eB = name;
	return xml;
};
$CL.$xB = function(data) {
	var xml = new $CL($CL.$XB);
	if(xml.$dB == $CL.$cB || xml.$dB == $CL.$WB) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.$dB == null ? "null" : $CK.toString(xml.$dB)));
	}
	xml.$fB = data;
	return xml;
};
$CL.$yB = function(data) {
	var xml = new $CL($CL.$YB);
	if(xml.$dB == $CL.$cB || xml.$dB == $CL.$WB) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.$dB == null ? "null" : $CK.toString(xml.$dB)));
	}
	xml.$fB = data;
	return xml;
};
$CL.$zB = function(data) {
	var xml = new $CL($CL.$ZB);
	if(xml.$dB == $CL.$cB || xml.$dB == $CL.$WB) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.$dB == null ? "null" : $CK.toString(xml.$dB)));
	}
	xml.$fB = data;
	return xml;
};
$CL.$0B = function(data) {
	var xml = new $CL($CL.$aB);
	if(xml.$dB == $CL.$cB || xml.$dB == $CL.$WB) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.$dB == null ? "null" : $CK.toString(xml.$dB)));
	}
	xml.$fB = data;
	return xml;
};
$CL.$1B = function(data) {
	var xml = new $CL($CL.$bB);
	if(xml.$dB == $CL.$cB || xml.$dB == $CL.$WB) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.$dB == null ? "null" : $CK.toString(xml.$dB)));
	}
	xml.$fB = data;
	return xml;
};
$CL.$2B = function() {
	return new $CL($CL.$cB);
};
$CL.prototype = {
	$jB: function(att) {
		if(this.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.$dB == null ? "null" : $CK.toString(this.$dB)));
		}
		return this.$iB.h[att];
	}
	,$kB: function(att,value) {
		if(this.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.$dB == null ? "null" : $CK.toString(this.$dB)));
		}
		this.$iB.h[att] = value;
	}
	,$W: function(att) {
		if(this.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.$dB == null ? "null" : $CK.toString(this.$dB)));
		}
		return Object.prototype.hasOwnProperty.call(this.$iB.h,att);
	}
	,$mB: function() {
		if(this.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.$dB == null ? "null" : $CK.toString(this.$dB)));
		}
		return new $CdC(this.$iB.h);
	}
	,$nB: function() {
		if(this.$dB != $CL.$cB && this.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.$dB == null ? "null" : $CK.toString(this.$dB)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.$hB;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.$dB == $CL.$WB) {
				_g.push(child);
			}
		}
		return new $CmC(_g);
	}
	,$oB: function(name) {
		if(this.$dB != $CL.$cB && this.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.$dB == null ? "null" : $CK.toString(this.$dB)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.$hB;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.$dB == $CL.$WB) {
				if(child.$dB != $CL.$WB) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (child.$dB == null ? "null" : $CK.toString(child.$dB)));
				}
				tmp = child.$eB == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		return new $CmC(_g);
	}
	,$qB: function() {
		if(this.$dB != $CL.$cB && this.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.$dB == null ? "null" : $CK.toString(this.$dB)));
		}
		var _g = 0;
		var _g1 = this.$hB;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.$dB == $CL.$WB) {
				return child;
			}
		}
		return null;
	}
	,$rB: function(x) {
		if(this.$dB != $CL.$cB && this.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.$dB == null ? "null" : $CK.toString(this.$dB)));
		}
		if(x.$gB != null) {
			x.$gB.$sB(x);
		}
		this.$hB.push(x);
		x.$gB = this;
	}
	,$sB: function(x) {
		if(this.$dB != $CL.$cB && this.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.$dB == null ? "null" : $CK.toString(this.$dB)));
		}
		if(HxOverrides.remove(this.$hB,x)) {
			x.$gB = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return $CAD.$sV(this);
	}
	,__class__: $CL
};
var $CM = function() {
	this.$9B = new $CO();
	this.$$B = new $CO();
};
$hxClasses["$CM"] = $CM;
$CM.__name__ = "$CM";
$CM.prototype = {
	$4B: function() {
		return new $CO((this.$9B.$QC + this.$$B.$QC) / 2,(this.$9B.$RC + this.$$B.$RC) / 2);
	}
	,$GB: function(aabb) {
		var result = true;
		result = this.$9B.$QC <= aabb.$9B.$QC;
		result = result && this.$9B.$RC <= aabb.$9B.$RC;
		result = result && aabb.$$B.$QC <= this.$$B.$QC;
		result = result && aabb.$$B.$RC <= this.$$B.$RC;
		return result;
	}
	,$7B: function(other) {
		if(other.$9B.$QC - this.$$B.$QC > 0.0 || other.$9B.$RC - this.$$B.$RC > 0.0) {
			return false;
		}
		if(this.$9B.$QC - other.$$B.$QC > 0.0 || this.$9B.$RC - other.$$B.$RC > 0.0) {
			return false;
		}
		return true;
	}
	,$8B: function(aabb1,aabb2) {
		this.$9B.$QC = Math.min(aabb1.$9B.$QC,aabb2.$9B.$QC);
		this.$9B.$RC = Math.min(aabb1.$9B.$RC,aabb2.$9B.$RC);
		this.$$B.$QC = Math.max(aabb1.$$B.$QC,aabb2.$$B.$QC);
		this.$$B.$RC = Math.max(aabb1.$$B.$RC,aabb2.$$B.$RC);
	}
	,__class__: $CM
};
var $CN = function() {
	this.$_B = new $CO();
	this.$AC = new $CP();
};
$hxClasses["$CN"] = $CN;
$CN.__name__ = "$CN";
$CN.prototype = {
	$kB: function(other) {
		this.$_B.$CC(other.$_B);
		this.$AC.$kB(other.$AC);
	}
	,__class__: $CN
};
var $CO = function(x_,y_) {
	if(y_ == null) {
		y_ = 0;
	}
	if(x_ == null) {
		x_ = 0;
	}
	this.$QC = x_;
	this.$RC = y_;
};
$hxClasses["$CO"] = $CO;
$CO.__name__ = "$CO";
$CO.prototype = {
	$BC: function() {
		this.$QC = 0.0;
		this.$RC = 0.0;
	}
	,$kB: function(x_,y_) {
		if(y_ == null) {
			y_ = 0;
		}
		if(x_ == null) {
			x_ = 0;
		}
		this.$QC = x_;
		this.$RC = y_;
	}
	,$CC: function(v) {
		this.$QC = v.$QC;
		this.$RC = v.$RC;
	}
	,$DC: function() {
		return new $CO(-this.$QC,-this.$RC);
	}
	,$EC: function() {
		this.$QC = -this.$QC;
		this.$RC = -this.$RC;
	}
	,$GC: function(a) {
		this.$QC *= a;
		this.$RC *= a;
	}
	,$7: function() {
		return Math.sqrt(this.$QC * this.$QC + this.$RC * this.$RC);
	}
	,$OC: function() {
		return this.$QC * this.$QC + this.$RC * this.$RC;
	}
	,$PC: function() {
		var length = Math.sqrt(this.$QC * this.$QC + this.$RC * this.$RC);
		if(length < 2.2250738585072014e-308) {
			return 0.0;
		}
		var invLength = 1.0 / length;
		this.$QC *= invLength;
		this.$RC *= invLength;
		return length;
	}
	,__class__: $CO
};
var $CP = function() {
	this.$UC = new $CQ();
	this.$UC.$eC = this;
};
$hxClasses["$CP"] = $CP;
$CP.__name__ = "$CP";
$CP.prototype = {
	$kB: function(id) {
		this.set_key(id.$VC);
	}
	,set_key: function(value) {
		this.$VC = value;
		this.$UC.$XC = this.$VC & 255;
		this.$UC.$ZC = (this.$VC & 65280) >> 8 & 255;
		this.$UC.$bC = (this.$VC & 16711680) >> 16 & 255;
		this.$UC.$dC = (this.$VC & -16777216) >> 24 & 255;
		return this.$VC;
	}
	,__class__: $CP
	,__properties__: {set_key:"set_key"}
};
var $CQ = function() {
};
$hxClasses["$CQ"] = $CQ;
$CQ.__name__ = "$CQ";
$CQ.prototype = {
	set_referenceEdge: function(value) {
		this.$XC = value;
		this.$eC.$VC = this.$eC.$VC & -256 | this.$XC & 255;
		return value;
	}
	,set_incidentEdge: function(value) {
		this.$ZC = value;
		this.$eC.$VC = this.$eC.$VC & -65281 | this.$ZC << 8 & 65280;
		return value;
	}
	,set_incidentVertex: function(value) {
		this.$bC = value;
		this.$eC.$VC = this.$eC.$VC & -16711681 | this.$bC << 16 & 16711680;
		return value;
	}
	,set_flip: function(value) {
		this.$dC = value;
		this.$eC.$VC = this.$eC.$VC & 16777215 | this.$dC << 24 & -16777216;
		return value;
	}
	,__class__: $CQ
	,__properties__: {set_flip:"set_flip",set_incidentVertex:"set_incidentVertex",set_incidentEdge:"set_incidentEdge",set_referenceEdge:"set_referenceEdge"}
};
var $CR = function() { };
$hxClasses["$CR"] = $CR;
$CR.__name__ = "$CR";
$CR.$gC = function(vOut,vIn,normal,offset) {
	var numOut = 0;
	var cv = vIn[0];
	var vIn0 = cv.$_B;
	cv = vIn[1];
	var vIn1 = cv.$_B;
	var distance0 = normal.$QC * vIn0.$QC + normal.$RC * vIn0.$RC - offset;
	var distance1 = normal.$QC * vIn1.$QC + normal.$RC * vIn1.$RC - offset;
	if(distance0 <= 0.0) {
		numOut = 1;
		vOut[0].$kB(vIn[0]);
	}
	if(distance1 <= 0.0) {
		vOut[numOut++].$kB(vIn[1]);
	}
	if(distance0 * distance1 < 0.0) {
		var interp = distance0 / (distance0 - distance1);
		cv = vOut[numOut];
		var tVec = cv.$_B;
		tVec.$QC = vIn0.$QC + interp * (vIn1.$QC - vIn0.$QC);
		tVec.$RC = vIn0.$RC + interp * (vIn1.$RC - vIn0.$RC);
		cv = vOut[numOut];
		var cv2;
		if(distance0 > 0.0) {
			cv2 = vIn[0];
			cv.$AC = cv2.$AC;
		} else {
			cv2 = vIn[1];
			cv.$AC = cv2.$AC;
		}
		++numOut;
	}
	return numOut;
};
$CR.$hC = function(poly1,xf1,edge1,poly2,xf2) {
	var vertices1 = poly1.$OD;
	var count2 = poly2.$4F;
	var vertices2 = poly2.$OD;
	var tMat = xf1.$cE;
	var tVec = poly1.$3F[edge1];
	var normal1WorldX = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
	var normal1WorldY = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
	tMat = xf2.$cE;
	var normal1X = tMat.$3E.$QC * normal1WorldX + tMat.$3E.$RC * normal1WorldY;
	var normal1Y = tMat.$4E.$QC * normal1WorldX + tMat.$4E.$RC * normal1WorldY;
	var index = 0;
	var minDot = 1.7976931348623158e+308;
	var _g = 0;
	while(_g < count2) {
		var i = _g++;
		tVec = vertices2[i];
		var dot = tVec.$QC * normal1X + tVec.$RC * normal1Y;
		if(dot < minDot) {
			minDot = dot;
			index = i;
		}
	}
	tVec = vertices1[edge1];
	tMat = xf1.$cE;
	var v1X = xf1.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
	var v1Y = xf1.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
	tVec = vertices2[index];
	tMat = xf2.$cE;
	var v2X = xf2.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
	var v2Y = xf2.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
	v2X -= v1X;
	v2Y -= v1Y;
	return v2X * normal1WorldX + v2Y * normal1WorldY;
};
$CR.$iC = function(edgeIndex,poly1,xf1,poly2,xf2) {
	var count1 = poly1.$4F;
	var normals1 = poly1.$3F;
	var tMat = xf2.$cE;
	var tVec = poly2.$2F;
	var dX = xf2.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
	var dY = xf2.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
	tMat = xf1.$cE;
	tVec = poly1.$2F;
	dX -= xf1.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
	dY -= xf1.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
	var dLocal1X = dX * xf1.$cE.$3E.$QC + dY * xf1.$cE.$3E.$RC;
	var dLocal1Y = dX * xf1.$cE.$4E.$QC + dY * xf1.$cE.$4E.$RC;
	var edge = 0;
	var maxDot = -1.79769313486231571e+308;
	var _g = 0;
	while(_g < count1) {
		var i = _g++;
		tVec = normals1[i];
		var dot = tVec.$QC * dLocal1X + tVec.$RC * dLocal1Y;
		if(dot > maxDot) {
			maxDot = dot;
			edge = i;
		}
	}
	var s = $CR.$hC(poly1,xf1,edge,poly2,xf2);
	var prevEdge = edge - 1 >= 0 ? edge - 1 : count1 - 1;
	var sPrev = $CR.$hC(poly1,xf1,prevEdge,poly2,xf2);
	var nextEdge = edge + 1 < count1 ? edge + 1 : 0;
	var sNext = $CR.$hC(poly1,xf1,nextEdge,poly2,xf2);
	var bestEdge;
	var bestSeparation;
	var increment;
	if(sPrev > s && sPrev > sNext) {
		increment = -1;
		bestEdge = prevEdge;
		bestSeparation = sPrev;
	} else if(sNext > s) {
		increment = 1;
		bestEdge = nextEdge;
		bestSeparation = sNext;
	} else {
		edgeIndex[0] = edge;
		return s;
	}
	while(true) {
		if(increment == -1) {
			edge = bestEdge - 1 >= 0 ? bestEdge - 1 : count1 - 1;
		} else {
			edge = bestEdge + 1 < count1 ? bestEdge + 1 : 0;
		}
		s = $CR.$hC(poly1,xf1,edge,poly2,xf2);
		if(s > bestSeparation) {
			bestEdge = edge;
			bestSeparation = s;
		} else {
			break;
		}
	}
	edgeIndex[0] = bestEdge;
	return bestSeparation;
};
$CR.$jC = function(c,poly1,xf1,edge1,poly2,xf2) {
	var count2 = poly2.$4F;
	var vertices2 = poly2.$OD;
	var normals2 = poly2.$3F;
	var tMat = xf1.$cE;
	var tVec = poly1.$3F[edge1];
	var normal1X = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
	var normal1Y = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
	tMat = xf2.$cE;
	var tX = tMat.$3E.$QC * normal1X + tMat.$3E.$RC * normal1Y;
	normal1Y = tMat.$4E.$QC * normal1X + tMat.$4E.$RC * normal1Y;
	normal1X = tX;
	var index = 0;
	var minDot = 1.7976931348623158e+308;
	var _g = 0;
	while(_g < count2) {
		var i = _g++;
		tVec = normals2[i];
		var dot = tX * tVec.$QC + normal1Y * tVec.$RC;
		if(dot < minDot) {
			minDot = dot;
			index = i;
		}
	}
	var i1 = index;
	var i2 = i1 + 1 < count2 ? i1 + 1 : 0;
	var tClip = c[0];
	tVec = vertices2[i1];
	tMat = xf2.$cE;
	tClip.$_B.$QC = xf2.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
	tClip.$_B.$RC = xf2.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
	tClip.$AC.$UC.set_referenceEdge(edge1);
	tClip.$AC.$UC.set_incidentEdge(i1);
	tClip.$AC.$UC.set_incidentVertex(0);
	tClip = c[1];
	tVec = vertices2[i2];
	tMat = xf2.$cE;
	tClip.$_B.$QC = xf2.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
	tClip.$_B.$RC = xf2.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
	tClip.$AC.$UC.set_referenceEdge(edge1);
	tClip.$AC.$UC.set_incidentEdge(i2);
	tClip.$AC.$UC.set_incidentVertex(1);
};
$CR.$kC = function() {
	var r = [];
	r[0] = new $CN();
	r[1] = new $CN();
	return r;
};
$CR.$zC = function(manifold,polyA,xfA,polyB,xfB) {
	var cv;
	manifold.$SE = 0;
	var totalRadius = polyA.$qD + polyB.$qD;
	var edgeA = 0;
	$CR.$oC[0] = 0;
	var separationA = $CR.$iC($CR.$oC,polyA,xfA,polyB,xfB);
	edgeA = $CR.$oC[0];
	if(separationA > totalRadius) {
		return;
	}
	var edgeB = 0;
	$CR.$pC[0] = 0;
	var separationB = $CR.$iC($CR.$pC,polyB,xfB,polyA,xfA);
	edgeB = $CR.$pC[0];
	if(separationB > totalRadius) {
		return;
	}
	var poly1;
	var poly2;
	var xf1;
	var xf2;
	var edge1;
	var flip;
	if(separationB > 0.98 * separationA + 0.001) {
		poly1 = polyB;
		poly2 = polyA;
		xf1 = xfB;
		xf2 = xfA;
		edge1 = edgeB;
		manifold.$RE = 2;
		flip = 1;
	} else {
		poly1 = polyA;
		poly2 = polyB;
		xf1 = xfA;
		xf2 = xfB;
		edge1 = edgeA;
		manifold.$RE = 1;
		flip = 0;
	}
	var incidentEdge = $CR.$lC;
	$CR.$jC(incidentEdge,poly1,xf1,edge1,poly2,xf2);
	var vertices1 = poly1.$OD;
	var local_v11 = vertices1[edge1];
	var local_v12;
	if(edge1 + 1 < poly1.$4F) {
		local_v12 = vertices1[edge1 + 1];
	} else {
		local_v12 = vertices1[0];
	}
	var localTangent = $CR.$qC;
	localTangent.$kB(local_v12.$QC - local_v11.$QC,local_v12.$RC - local_v11.$RC);
	localTangent.$PC();
	var localNormal = $CR.$rC;
	localNormal.$QC = localTangent.$RC;
	localNormal.$RC = -localTangent.$QC;
	var planePoint = $CR.$sC;
	planePoint.$kB(0.5 * (local_v11.$QC + local_v12.$QC),0.5 * (local_v11.$RC + local_v12.$RC));
	var tangent = $CR.$uC;
	var tMat = xf1.$cE;
	tangent.$QC = tMat.$3E.$QC * localTangent.$QC + tMat.$4E.$QC * localTangent.$RC;
	tangent.$RC = tMat.$3E.$RC * localTangent.$QC + tMat.$4E.$RC * localTangent.$RC;
	var tangent2 = $CR.$vC;
	tangent2.$QC = -tangent.$QC;
	tangent2.$RC = -tangent.$RC;
	var normal = $CR.$tC;
	normal.$QC = tangent.$RC;
	normal.$RC = -tangent.$QC;
	var v11 = $CR.$wC;
	var v12 = $CR.$xC;
	v11.$QC = xf1.$4C.$QC + (tMat.$3E.$QC * local_v11.$QC + tMat.$4E.$QC * local_v11.$RC);
	v11.$RC = xf1.$4C.$RC + (tMat.$3E.$RC * local_v11.$QC + tMat.$4E.$RC * local_v11.$RC);
	v12.$QC = xf1.$4C.$QC + (tMat.$3E.$QC * local_v12.$QC + tMat.$4E.$QC * local_v12.$RC);
	v12.$RC = xf1.$4C.$RC + (tMat.$3E.$RC * local_v12.$QC + tMat.$4E.$RC * local_v12.$RC);
	var frontOffset = normal.$QC * v11.$QC + normal.$RC * v11.$RC;
	var sideOffset2 = tangent.$QC * v12.$QC + tangent.$RC * v12.$RC + totalRadius;
	var clipPoints1 = $CR.$mC;
	var clipPoints2 = $CR.$nC;
	var np = $CR.$gC(clipPoints1,incidentEdge,tangent2,-tangent.$QC * v11.$QC - tangent.$RC * v11.$RC + totalRadius);
	if(np < 2) {
		return;
	}
	np = $CR.$gC(clipPoints2,clipPoints1,tangent,sideOffset2);
	if(np < 2) {
		return;
	}
	manifold.$PE.$CC(localNormal);
	manifold.$QE.$CC(planePoint);
	var pointCount = 0;
	cv = clipPoints2[0];
	if(normal.$QC * cv.$_B.$QC + normal.$RC * cv.$_B.$RC - frontOffset <= totalRadius) {
		var cp = manifold.$OE[0];
		tMat = xf2.$cE;
		var tX = cv.$_B.$QC - xf2.$4C.$QC;
		var tY = cv.$_B.$RC - xf2.$4C.$RC;
		cp.$QE.$QC = tX * tMat.$3E.$QC + tY * tMat.$3E.$RC;
		cp.$QE.$RC = tX * tMat.$4E.$QC + tY * tMat.$4E.$RC;
		cp.$YE.$kB(cv.$AC);
		cp.$YE.$UC.set_flip(flip);
		pointCount = 1;
	}
	cv = clipPoints2[1];
	if(normal.$QC * cv.$_B.$QC + normal.$RC * cv.$_B.$RC - frontOffset <= totalRadius) {
		var cp = manifold.$OE[pointCount];
		tMat = xf2.$cE;
		var tX = cv.$_B.$QC - xf2.$4C.$QC;
		var tY = cv.$_B.$RC - xf2.$4C.$RC;
		cp.$QE.$QC = tX * tMat.$3E.$QC + tY * tMat.$3E.$RC;
		cp.$QE.$RC = tX * tMat.$4E.$QC + tY * tMat.$4E.$RC;
		cp.$YE.$kB(cv.$AC);
		cp.$YE.$UC.set_flip(flip);
		++pointCount;
	}
	manifold.$SE = pointCount;
};
$CR.$0C = function(manifold,circle1,xf1,circle2,xf2) {
	manifold.$SE = 0;
	var tMat = xf1.$cE;
	var tVec = circle1.$QF;
	var p1X = xf1.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
	var p1Y = xf1.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
	tMat = xf2.$cE;
	tVec = circle2.$QF;
	var dX = xf2.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC) - p1X;
	var dY = xf2.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC) - p1Y;
	var radius = circle1.$qD + circle2.$qD;
	if(dX * dX + dY * dY > radius * radius) {
		return;
	}
	manifold.$RE = 0;
	manifold.$QE.$CC(circle1.$QF);
	manifold.$PE.$BC();
	manifold.$SE = 1;
	manifold.$OE[0].$QE.$CC(circle2.$QF);
	manifold.$OE[0].$YE.set_key(0);
};
$CR.$1C = function(manifold,polygon,xf1,circle,xf2) {
	manifold.$SE = 0;
	var tMat = xf2.$cE;
	var tVec = circle.$QF;
	var dX = xf2.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC) - xf1.$4C.$QC;
	var dY = xf2.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC) - xf1.$4C.$RC;
	tMat = xf1.$cE;
	var cLocalX = dX * tMat.$3E.$QC + dY * tMat.$3E.$RC;
	var cLocalY = dX * tMat.$4E.$QC + dY * tMat.$4E.$RC;
	var normalIndex = 0;
	var separation = -1.79769313486231571e+308;
	var radius = polygon.$qD + circle.$qD;
	var vertexCount = polygon.$4F;
	var vertices = polygon.$OD;
	var normals = polygon.$3F;
	var _g = 0;
	while(_g < vertexCount) {
		var i = _g++;
		tVec = vertices[i];
		dX = cLocalX - tVec.$QC;
		dY = cLocalY - tVec.$RC;
		tVec = normals[i];
		var s = tVec.$QC * dX + tVec.$RC * dY;
		if(s > radius) {
			return;
		}
		if(s > separation) {
			separation = s;
			normalIndex = i;
		}
	}
	var vertIndex1 = normalIndex;
	var v1 = vertices[vertIndex1];
	var v2 = vertices[vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0];
	if(separation < 2.2250738585072014e-308) {
		manifold.$SE = 1;
		manifold.$RE = 1;
		manifold.$PE.$CC(normals[normalIndex]);
		manifold.$QE.$QC = 0.5 * (v1.$QC + v2.$QC);
		manifold.$QE.$RC = 0.5 * (v1.$RC + v2.$RC);
		manifold.$OE[0].$QE.$CC(circle.$QF);
		manifold.$OE[0].$YE.set_key(0);
		return;
	}
	var u2 = (cLocalX - v2.$QC) * (v1.$QC - v2.$QC) + (cLocalY - v2.$RC) * (v1.$RC - v2.$RC);
	if((cLocalX - v1.$QC) * (v2.$QC - v1.$QC) + (cLocalY - v1.$RC) * (v2.$RC - v1.$RC) <= 0.0) {
		if((cLocalX - v1.$QC) * (cLocalX - v1.$QC) + (cLocalY - v1.$RC) * (cLocalY - v1.$RC) > radius * radius) {
			return;
		}
		manifold.$SE = 1;
		manifold.$RE = 1;
		manifold.$PE.$QC = cLocalX - v1.$QC;
		manifold.$PE.$RC = cLocalY - v1.$RC;
		manifold.$PE.$PC();
		manifold.$QE.$CC(v1);
		manifold.$OE[0].$QE.$CC(circle.$QF);
		manifold.$OE[0].$YE.set_key(0);
	} else if(u2 <= 0) {
		if((cLocalX - v2.$QC) * (cLocalX - v2.$QC) + (cLocalY - v2.$RC) * (cLocalY - v2.$RC) > radius * radius) {
			return;
		}
		manifold.$SE = 1;
		manifold.$RE = 1;
		manifold.$PE.$QC = cLocalX - v2.$QC;
		manifold.$PE.$RC = cLocalY - v2.$RC;
		manifold.$PE.$PC();
		manifold.$QE.$CC(v2);
		manifold.$OE[0].$QE.$CC(circle.$QF);
		manifold.$OE[0].$YE.set_key(0);
	} else {
		var faceCenterX = 0.5 * (v1.$QC + v2.$QC);
		var faceCenterY = 0.5 * (v1.$RC + v2.$RC);
		separation = (cLocalX - faceCenterX) * normals[vertIndex1].$QC + (cLocalY - faceCenterY) * normals[vertIndex1].$RC;
		if(separation > radius) {
			return;
		}
		manifold.$SE = 1;
		manifold.$RE = 1;
		manifold.$PE.$QC = normals[vertIndex1].$QC;
		manifold.$PE.$RC = normals[vertIndex1].$RC;
		manifold.$PE.$PC();
		manifold.$QE.$kB(faceCenterX,faceCenterY);
		manifold.$OE[0].$QE.$CC(circle.$QF);
		manifold.$OE[0].$YE.set_key(0);
	}
};
var $CT = function() {
	this.$LD = new $CU();
	this.$MD = new $CU();
	this.$ND = new $CU();
	this.$OD = [];
	this.$OD[0] = this.$LD;
	this.$OD[1] = this.$MD;
	this.$OD[2] = this.$ND;
};
$hxClasses["$CT"] = $CT;
$CT.__name__ = "$CT";
$CT.prototype = {
	$$C: function(cache,proxyA,transformA,proxyB,transformB) {
		var wALocal;
		var wBLocal;
		this.$PD = cache.$c;
		var vertices = this.$OD;
		var v;
		var _g = 0;
		var _g1 = this.$PD;
		while(_g < _g1) {
			var i = _g++;
			v = vertices[i];
			v.$UD = cache.$UD[i];
			v.$VD = cache.$VD[i];
			wALocal = proxyA.$OD[v.$UD];
			wBLocal = proxyB.$OD[v.$VD];
			v.$QD = $Cz.$hG(transformA,wALocal);
			v.$RD = $Cz.$hG(transformB,wBLocal);
			v.$SD = $Cz.$kG(v.$RD,v.$QD);
			v.$TD = 0;
		}
		if(this.$PD > 1) {
			var metric1 = cache.$sE;
			var metric2 = this.$DD();
			if(metric2 < .5 * metric1 || 2.0 * metric1 < metric2 || metric2 < 2.2250738585072014e-308) {
				this.$PD = 0;
			}
		}
		if(this.$PD == 0) {
			v = vertices[0];
			v.$UD = 0;
			v.$VD = 0;
			wALocal = proxyA.$OD[0];
			wBLocal = proxyB.$OD[0];
			v.$QD = $Cz.$hG(transformA,wALocal);
			v.$RD = $Cz.$hG(transformB,wBLocal);
			v.$SD = $Cz.$kG(v.$RD,v.$QD);
			this.$PD = 1;
		}
	}
	,$_C: function(cache) {
		cache.$sE = this.$DD();
		cache.$c = this.$PD;
		var vertices = this.$OD;
		var _g = 0;
		var _g1 = this.$PD;
		while(_g < _g1) {
			var i = _g++;
			cache.$UD[i] = vertices[i].$UD;
			cache.$VD[i] = vertices[i].$VD;
		}
	}
	,$AD: function() {
		switch(this.$PD) {
		case 1:
			return this.$LD.$SD.$DC();
		case 2:
			var e12 = $Cz.$kG(this.$MD.$SD,this.$LD.$SD);
			if($Cz.$eG(e12,this.$LD.$SD.$DC()) > 0.0) {
				return $Cz.$KC(1.0,e12);
			} else {
				return $Cz.$JC(e12,1.0);
			}
			break;
		default:
			return new $CO();
		}
	}
	,$BD: function() {
		switch(this.$PD) {
		case 0:
			return new $CO();
		case 1:
			return this.$LD.$SD;
		case 2:
			return new $CO(this.$LD.$TD * this.$LD.$SD.$QC + this.$MD.$TD * this.$MD.$SD.$QC,this.$LD.$TD * this.$LD.$SD.$RC + this.$MD.$TD * this.$MD.$SD.$RC);
		default:
			return new $CO();
		}
	}
	,$CD: function(pA,pB) {
		switch(this.$PD) {
		case 0:
			break;
		case 1:
			pA.$CC(this.$LD.$QD);
			pB.$CC(this.$LD.$RD);
			break;
		case 2:
			pA.$QC = this.$LD.$TD * this.$LD.$QD.$QC + this.$MD.$TD * this.$MD.$QD.$QC;
			pA.$RC = this.$LD.$TD * this.$LD.$QD.$RC + this.$MD.$TD * this.$MD.$QD.$RC;
			pB.$QC = this.$LD.$TD * this.$LD.$RD.$QC + this.$MD.$TD * this.$MD.$RD.$QC;
			pB.$RC = this.$LD.$TD * this.$LD.$RD.$RC + this.$MD.$TD * this.$MD.$RD.$RC;
			break;
		case 3:
			pB.$QC = pA.$QC = this.$LD.$TD * this.$LD.$QD.$QC + this.$MD.$TD * this.$MD.$QD.$QC + this.$ND.$TD * this.$ND.$QD.$QC;
			pB.$RC = pA.$RC = this.$LD.$TD * this.$LD.$QD.$RC + this.$MD.$TD * this.$MD.$QD.$RC + this.$ND.$TD * this.$ND.$QD.$RC;
			break;
		default:
		}
	}
	,$DD: function() {
		switch(this.$PD) {
		case 0:
			return 0.0;
		case 1:
			return 0.0;
		case 2:
			return $Cz.$kG(this.$LD.$SD,this.$MD.$SD).$7();
		case 3:
			return $Cz.$eG($Cz.$kG(this.$MD.$SD,this.$LD.$SD),$Cz.$kG(this.$ND.$SD,this.$LD.$SD));
		default:
			return 0.0;
		}
	}
	,$ED: function() {
		var w1 = this.$LD.$SD;
		var w2 = this.$MD.$SD;
		var e12 = $Cz.$kG(w2,w1);
		var d12_2 = -(w1.$QC * e12.$QC + w1.$RC * e12.$RC);
		if(d12_2 <= 0.0) {
			this.$LD.$TD = 1.0;
			this.$PD = 1;
			return;
		}
		var d12_1 = w2.$QC * e12.$QC + w2.$RC * e12.$RC;
		if(d12_1 <= 0.0) {
			this.$MD.$TD = 1.0;
			this.$PD = 1;
			this.$LD.$kB(this.$MD);
			return;
		}
		var inv_d12 = 1.0 / (d12_1 + d12_2);
		this.$LD.$TD = d12_1 * inv_d12;
		this.$MD.$TD = d12_2 * inv_d12;
		this.$PD = 2;
	}
	,$FD: function() {
		var w1 = this.$LD.$SD;
		var w2 = this.$MD.$SD;
		var w3 = this.$ND.$SD;
		var e12 = $Cz.$kG(w2,w1);
		var w2e12 = $Cz.$dG(w2,e12);
		var d12_2 = -$Cz.$dG(w1,e12);
		var e13 = $Cz.$kG(w3,w1);
		var w3e13 = $Cz.$dG(w3,e13);
		var d13_2 = -$Cz.$dG(w1,e13);
		var e23 = $Cz.$kG(w3,w2);
		var w3e23 = $Cz.$dG(w3,e23);
		var d23_2 = -$Cz.$dG(w2,e23);
		var n123 = $Cz.$eG(e12,e13);
		var d123_1 = n123 * $Cz.$eG(w2,w3);
		var d123_2 = n123 * $Cz.$eG(w3,w1);
		var d123_3 = n123 * $Cz.$eG(w1,w2);
		if(d12_2 <= 0.0 && d13_2 <= 0.0) {
			this.$LD.$TD = 1.0;
			this.$PD = 1;
			return;
		}
		if(w2e12 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {
			var inv_d12 = 1.0 / (w2e12 + d12_2);
			this.$LD.$TD = w2e12 * inv_d12;
			this.$MD.$TD = d12_2 * inv_d12;
			this.$PD = 2;
			return;
		}
		if(w3e13 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {
			var inv_d13 = 1.0 / (w3e13 + d13_2);
			this.$LD.$TD = w3e13 * inv_d13;
			this.$ND.$TD = d13_2 * inv_d13;
			this.$PD = 2;
			this.$MD.$kB(this.$ND);
			return;
		}
		if(w2e12 <= 0.0 && d23_2 <= 0.0) {
			this.$MD.$TD = 1.0;
			this.$PD = 1;
			this.$LD.$kB(this.$MD);
			return;
		}
		if(w3e13 <= 0.0 && w3e23 <= 0.0) {
			this.$ND.$TD = 1.0;
			this.$PD = 1;
			this.$LD.$kB(this.$ND);
			return;
		}
		if(w3e23 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {
			var inv_d23 = 1.0 / (w3e23 + d23_2);
			this.$MD.$TD = w3e23 * inv_d23;
			this.$ND.$TD = d23_2 * inv_d23;
			this.$PD = 2;
			this.$LD.$kB(this.$ND);
			return;
		}
		var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);
		this.$LD.$TD = d123_1 * inv_d123;
		this.$MD.$TD = d123_2 * inv_d123;
		this.$ND.$TD = d123_3 * inv_d123;
		this.$PD = 3;
	}
	,__class__: $CT
};
var $CU = function() {
};
$hxClasses["$CU"] = $CU;
$CU.__name__ = "$CU";
$CU.prototype = {
	$kB: function(other) {
		this.$QD.$CC(other.$QD);
		this.$RD.$CC(other.$RD);
		this.$SD.$CC(other.$SD);
		this.$TD = other.$TD;
		this.$UD = other.$UD;
		this.$VD = other.$VD;
	}
	,__class__: $CU
};
var $CV = function() { };
$hxClasses["$CV"] = $CV;
$CV.__name__ = "$CV";
$CV.$cD = function(output,cache,input) {
	++$CV.$WD;
	var proxyA = input.$dD;
	var proxyB = input.$eD;
	var transformA = input.$fD;
	var transformB = input.$gD;
	var simplex = $CV.$ZD;
	simplex.$$C(cache,proxyA,transformA,proxyB,transformB);
	var vertices = simplex.$OD;
	var saveA = $CV.$aD;
	var saveB = $CV.$bD;
	var saveCount = 0;
	var distanceSqr1 = simplex.$BD().$OC();
	var distanceSqr2 = distanceSqr1;
	var p;
	var iter = 0;
	while(iter < 20) {
		saveCount = simplex.$PD;
		var _g = 0;
		var _g1 = saveCount;
		while(_g < _g1) {
			var i = _g++;
			saveA[i] = vertices[i].$UD;
			saveB[i] = vertices[i].$VD;
		}
		switch(simplex.$PD) {
		case 1:
			break;
		case 2:
			simplex.$ED();
			break;
		case 3:
			simplex.$FD();
			break;
		default:
		}
		if(simplex.$PD == 3) {
			break;
		}
		p = simplex.$BD();
		distanceSqr2 = p.$OC();
		distanceSqr1 = distanceSqr2;
		var d = simplex.$AD();
		if(d.$OC() < 0.) {
			break;
		}
		var vertex = vertices[simplex.$PD];
		vertex.$UD = proxyA.$lD($Cz.$gG(transformA.$cE,d.$DC()));
		vertex.$QD = $Cz.$hG(transformA,proxyA.$OD[vertex.$UD]);
		vertex.$VD = proxyB.$lD($Cz.$gG(transformB.$cE,d));
		vertex.$RD = $Cz.$hG(transformB,proxyB.$OD[vertex.$VD]);
		vertex.$SD = $Cz.$kG(vertex.$RD,vertex.$QD);
		++iter;
		++$CV.$XD;
		var duplicate = false;
		var _g2 = 0;
		var _g3 = saveCount;
		while(_g2 < _g3) {
			var i1 = _g2++;
			if(vertex.$UD == saveA[i1] && vertex.$VD == saveB[i1]) {
				duplicate = true;
				break;
			}
		}
		if(duplicate) {
			break;
		}
		++simplex.$PD;
	}
	var a = $CV.$YD;
	$CV.$YD = a > iter ? a : iter;
	simplex.$CD(output.$iD,output.$jD);
	output.$cD = $Cz.$kG(output.$iD,output.$jD).$7();
	output.$kD = iter;
	simplex.$_C(cache);
	if(input.$hD) {
		var rA = proxyA.$qD;
		var rB = proxyB.$qD;
		if(output.$cD > rA + rB && output.$cD > 2.2250738585072014e-308) {
			output.$cD -= rA + rB;
			var normal = $Cz.$kG(output.$jD,output.$iD);
			normal.$PC();
			output.$iD.$QC += rA * normal.$QC;
			output.$iD.$RC += rA * normal.$RC;
			output.$jD.$QC -= rB * normal.$QC;
			output.$jD.$RC -= rB * normal.$RC;
		} else {
			p = new $CO();
			p.$QC = .5 * (output.$iD.$QC + output.$jD.$QC);
			p.$RC = .5 * (output.$iD.$RC + output.$jD.$RC);
			output.$iD.$QC = output.$jD.$QC = p.$QC;
			output.$iD.$RC = output.$jD.$RC = p.$RC;
			output.$cD = 0.0;
		}
	}
};
var $CW = function() {
};
$hxClasses["$CW"] = $CW;
$CW.__name__ = "$CW";
$CW.prototype = {
	__class__: $CW
};
var $CX = function() {
	this.$iD = new $CO();
	this.$jD = new $CO();
};
$hxClasses["$CX"] = $CX;
$CX.__name__ = "$CX";
$CX.prototype = {
	__class__: $CX
};
var $CY = function() {
	this.$OD = [];
};
$hxClasses["$CY"] = $CY;
$CY.__name__ = "$CY";
$CY.prototype = {
	$kB: function(shape) {
		switch(shape.$RE) {
		case 0:
			var circle = shape;
			this.$OD = [circle.$QF];
			this.$PD = 1;
			this.$qD = circle.$qD;
			break;
		case 1:
			var polygon = shape;
			this.$OD = polygon.$OD;
			this.$PD = polygon.$4F;
			this.$qD = polygon.$qD;
			break;
		default:
		}
	}
	,$lD: function(d) {
		var bestIndex = 0;
		var bestValue = this.$OD[0].$QC * d.$QC + this.$OD[0].$RC * d.$RC;
		var _g = 1;
		var _g1 = this.$PD;
		while(_g < _g1) {
			var i = _g++;
			var value = this.$OD[i].$QC * d.$QC + this.$OD[i].$RC * d.$RC;
			if(value > bestValue) {
				bestIndex = i;
				bestValue = value;
			}
		}
		return bestIndex;
	}
	,$mD: function(d) {
		var bestIndex = 0;
		var bestValue = this.$OD[0].$QC * d.$QC + this.$OD[0].$RC * d.$RC;
		var _g = 1;
		var _g1 = this.$PD;
		while(_g < _g1) {
			var i = _g++;
			var value = this.$OD[i].$QC * d.$QC + this.$OD[i].$RC * d.$RC;
			if(value > bestValue) {
				bestIndex = i;
				bestValue = value;
			}
		}
		return this.$OD[bestIndex];
	}
	,__class__: $CY
};
var $CZ = function() {
	this.$2D = null;
	this.$3D = null;
	this.$4D = 0;
	this.$5D = 0;
};
$hxClasses["$CZ"] = $CZ;
$CZ.__name__ = "$CZ";
$CZ.prototype = {
	$sD: function(proxy) {
		this.$1D(proxy);
		this.$zD(proxy);
	}
	,$tD: function(proxy,aabb,displacement) {
		if(proxy.$EE.$GB(aabb)) {
			return false;
		}
		this.$1D(proxy);
		var extendX = 0.1 + 2.0 * (displacement.$QC > 0 ? displacement.$QC : -displacement.$QC);
		var extendY = 0.1 + 2.0 * (displacement.$RC > 0 ? displacement.$RC : -displacement.$RC);
		proxy.$EE.$9B.$QC = aabb.$9B.$QC - extendX;
		proxy.$EE.$9B.$RC = aabb.$9B.$RC - extendY;
		proxy.$EE.$$B.$QC = aabb.$$B.$QC + extendX;
		proxy.$EE.$$B.$RC = aabb.$$B.$RC + extendY;
		this.$0D(proxy);
		return true;
	}
	,$vD: function(proxy) {
		return proxy.$EE;
	}
	,$wD: function(proxy) {
		return proxy.$DE;
	}
	,$xD: function(callbackMethod,aabb) {
		if(this.$2D == null) {
			return;
		}
		var stack = [];
		var count = 0;
		count = 1;
		stack[0] = this.$2D;
		while(count > 0) {
			var node = stack[--count];
			if(node.$EE.$7B(aabb)) {
				if(node.$FE == null) {
					if(!callbackMethod(node)) {
						return;
					}
				} else {
					stack[count++] = node.$FE;
					stack[count++] = node.$GE;
				}
			}
		}
	}
	,$yD: function() {
		if(this.$3D != null) {
			var node = this.$3D;
			this.$3D = node.$gB;
			node.$gB = null;
			node.$FE = null;
			node.$GE = null;
			return node;
		}
		return new $Cc();
	}
	,$zD: function(node) {
		node.$gB = this.$3D;
		this.$3D = node;
	}
	,$0D: function(leaf) {
		++this.$5D;
		if(this.$2D == null) {
			this.$2D = leaf;
			this.$2D.$gB = null;
			return;
		}
		var center = leaf.$EE.$4B();
		var sibling = this.$2D;
		if(sibling.$FE == null == false) {
			while(true) {
				var child1 = sibling.$FE;
				var child2 = sibling.$GE;
				if(Math.abs((child1.$EE.$9B.$QC + child1.$EE.$$B.$QC) / 2 - center.$QC) + Math.abs((child1.$EE.$9B.$RC + child1.$EE.$$B.$RC) / 2 - center.$RC) < Math.abs((child2.$EE.$9B.$QC + child2.$EE.$$B.$QC) / 2 - center.$QC) + Math.abs((child2.$EE.$9B.$RC + child2.$EE.$$B.$RC) / 2 - center.$RC)) {
					sibling = child1;
				} else {
					sibling = child2;
				}
				if(!(sibling.$FE == null == false)) {
					break;
				}
			}
		}
		var node1 = sibling.$gB;
		var node2 = this.$yD();
		node2.$gB = node1;
		node2.$DE = null;
		node2.$EE.$8B(leaf.$EE,sibling.$EE);
		if(node1 != null) {
			if(sibling.$gB.$FE == sibling) {
				node1.$FE = node2;
			} else {
				node1.$GE = node2;
			}
			node2.$FE = sibling;
			node2.$GE = leaf;
			sibling.$gB = node2;
			leaf.$gB = node2;
			while(!node1.$EE.$GB(node2.$EE)) {
				node1.$EE.$8B(node1.$FE.$EE,node1.$GE.$EE);
				node2 = node1;
				node1 = node1.$gB;
				if(!(node1 != null)) {
					break;
				}
			}
		} else {
			node2.$FE = sibling;
			node2.$GE = leaf;
			sibling.$gB = node2;
			leaf.$gB = node2;
			this.$2D = node2;
		}
	}
	,$1D: function(leaf) {
		if(leaf == this.$2D) {
			this.$2D = null;
			return;
		}
		var node2 = leaf.$gB;
		var node1 = node2.$gB;
		var sibling;
		if(node2.$FE == leaf) {
			sibling = node2.$GE;
		} else {
			sibling = node2.$FE;
		}
		if(node1 != null) {
			if(node1.$FE == node2) {
				node1.$FE = sibling;
			} else {
				node1.$GE = sibling;
			}
			sibling.$gB = node1;
			this.$zD(node2);
			while(node1 != null) {
				var oldAABB = node1.$EE;
				node1.$EE = new $CM();
				node1.$EE.$8B(node1.$FE.$EE,node1.$GE.$EE);
				if(oldAABB.$GB(node1.$EE)) {
					break;
				}
				node1 = node1.$gB;
			}
		} else {
			this.$2D = sibling;
			sibling.$gB = null;
			this.$zD(node2);
		}
	}
	,__class__: $CZ
};
var $Ca = function() { };
$hxClasses["$Ca"] = $Ca;
$Ca.__name__ = "$Ca";
$Ca.__isInterface__ = true;
$Ca.prototype = {
	__class__: $Ca
};
var $Cb = function() {
	this.$9D = new $CZ();
	this.$_D = [];
	this.$AE = [];
	this.$BE = 0;
};
$hxClasses["$Cb"] = $Cb;
$Cb.__name__ = "$Cb";
$Cb.__interfaces__ = [$Ca];
$Cb.prototype = {
	destroyProxy: function(proxy) {
		this.$7D(proxy);
		--this.$$D;
		this.$9D.$sD(proxy);
	}
	,moveProxy: function(proxy,aabb,displacement) {
		if(this.$9D.$tD(proxy,aabb,displacement)) {
			this.$6D(proxy);
		}
	}
	,testOverlap: function(proxyA,proxyB) {
		return this.$9D.$vD(proxyA).$7B(this.$9D.$vD(proxyB));
	}
	,updatePairs: function(callbackMethod) {
		var _gthis = this;
		this.$BE = 0;
		var _g = 0;
		var _g1 = this.$_D;
		while(_g < _g1.length) {
			var queryProxy = [_g1[_g]];
			++_g;
			var queryCallback = (function(queryProxy) {
				return function(proxy) {
					if(proxy == queryProxy[0]) {
						return true;
					}
					if(_gthis.$BE == _gthis.$AE.length) {
						_gthis.$AE[_gthis.$BE] = new $Cd();
					}
					var pair = _gthis.$AE[_gthis.$BE];
					if(proxy.$AC < queryProxy[0].$AC) {
						pair.$dD = proxy;
						pair.$eD = queryProxy[0];
					} else {
						pair.$dD = queryProxy[0];
						pair.$eD = proxy;
					}
					++_gthis.$BE;
					return true;
				};
			})(queryProxy);
			var fatAABB = this.$9D.$vD(queryProxy[0]);
			this.$9D.$xD(queryCallback,fatAABB);
		}
		this.$_D = [];
		var pairing = true;
		var i = 0;
		while(pairing) if(i >= this.$BE) {
			pairing = false;
		} else {
			var primaryPair = this.$AE[i];
			callbackMethod(this.$9D.$wD(primaryPair.$dD),this.$9D.$wD(primaryPair.$eD));
			++i;
			while(i < this.$BE) {
				var pair = this.$AE[i];
				if(pair.$dD != primaryPair.$dD || pair.$eD != primaryPair.$eD) {
					break;
				}
				++i;
			}
		}
	}
	,$6D: function(proxy) {
		this.$_D[this.$_D.length] = proxy;
	}
	,$7D: function(proxy) {
		HxOverrides.remove(this.$_D,proxy);
	}
	,__class__: $Cb
};
var $Cc = function() {
	this.$EE = new $CM();
	this.$AC = $Cc.$HE++;
};
$hxClasses["$Cc"] = $Cc;
$Cc.__name__ = "$Cc";
$Cc.prototype = {
	__class__: $Cc
};
var $Cd = function() {
};
$hxClasses["$Cd"] = $Cd;
$Cd.__name__ = "$Cd";
$Cd.prototype = {
	__class__: $Cd
};
var $Ce = function() {
	this.$SE = 0;
	this.$OE = [];
	this.$OE[0] = new $Cf();
	this.$OE[1] = new $Cf();
	this.$PE = new $CO();
	this.$QE = new $CO();
};
$hxClasses["$Ce"] = $Ce;
$Ce.__name__ = "$Ce";
$Ce.prototype = {
	__class__: $Ce
};
var $Cf = function() {
	this.$QE = new $CO();
	this.$YE = new $CP();
	this.$IE();
};
$hxClasses["$Cf"] = $Cf;
$Cf.__name__ = "$Cf";
$Cf.prototype = {
	$IE: function() {
		this.$QE.$BC();
		this.$WE = 0.0;
		this.$XE = 0.0;
		this.$YE.set_key(0);
	}
	,__class__: $Cf
};
var $Ck = function() {
	this.$QE = new $CO();
	this.$qE = new $CO();
};
$hxClasses["$Ck"] = $Ck;
$Ck.__name__ = "$Ck";
$Ck.prototype = {
	$jE: function(cache,proxyA,transformA,proxyB,transformB) {
		this.$oE = proxyA;
		this.$pE = proxyB;
		var localPointA = new $CO();
		var localPointA1;
		var localPointA2;
		var localPointB = new $CO();
		var localPointB1;
		var localPointB2;
		var pointAX;
		var pointAY;
		var pointBX;
		var pointBY;
		var normalX;
		var normalY;
		var tMat;
		var tVec;
		var s;
		if(cache.$c == 1) {
			this.$RE = 0;
			localPointA = this.$oE.$OD[cache.$UD[0]];
			localPointB = this.$pE.$OD[cache.$VD[0]];
			tVec = localPointA;
			tMat = transformA.$cE;
			pointAX = transformA.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			pointAY = transformA.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			tVec = localPointB;
			tMat = transformB.$cE;
			pointBX = transformB.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			pointBY = transformB.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			this.$qE.$QC = pointBX - pointAX;
			this.$qE.$RC = pointBY - pointAY;
			this.$qE.$PC();
		} else if(cache.$VD[0] == cache.$VD[1]) {
			this.$RE = 1;
			localPointA1 = this.$oE.$OD[cache.$UD[0]];
			localPointA2 = this.$oE.$OD[cache.$UD[1]];
			localPointB = this.$pE.$OD[cache.$VD[0]];
			this.$QE.$QC = 0.5 * (localPointA1.$QC + localPointA2.$QC);
			this.$QE.$RC = 0.5 * (localPointA1.$RC + localPointA2.$RC);
			this.$qE = $Cz.$JC($Cz.$kG(localPointA2,localPointA1),1.0);
			this.$qE.$PC();
			tVec = this.$qE;
			tMat = transformA.$cE;
			normalX = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
			normalY = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
			tVec = this.$QE;
			tMat = transformA.$cE;
			pointAX = transformA.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			pointAY = transformA.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			tVec = localPointB;
			tMat = transformB.$cE;
			pointBX = transformB.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			pointBY = transformB.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			s = (pointBX - pointAX) * normalX + (pointBY - pointAY) * normalY;
			if(s < 0.0) {
				this.$qE.$EC();
			}
		} else if(cache.$UD[0] == cache.$UD[0]) {
			this.$RE = 2;
			localPointB1 = this.$pE.$OD[cache.$VD[0]];
			localPointB2 = this.$pE.$OD[cache.$VD[1]];
			localPointA = this.$oE.$OD[cache.$UD[0]];
			this.$QE.$QC = 0.5 * (localPointB1.$QC + localPointB2.$QC);
			this.$QE.$RC = 0.5 * (localPointB1.$RC + localPointB2.$RC);
			this.$qE = $Cz.$JC($Cz.$kG(localPointB2,localPointB1),1.0);
			this.$qE.$PC();
			tVec = this.$qE;
			tMat = transformB.$cE;
			normalX = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
			normalY = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
			tVec = this.$QE;
			tMat = transformB.$cE;
			pointBX = transformB.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			pointBY = transformB.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			tVec = localPointA;
			tMat = transformA.$cE;
			pointAX = transformA.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			pointAY = transformA.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			s = (pointAX - pointBX) * normalX + (pointAY - pointBY) * normalY;
			if(s < 0.0) {
				this.$qE.$EC();
			}
		} else {
			localPointA1 = this.$oE.$OD[cache.$UD[0]];
			localPointA2 = this.$oE.$OD[cache.$UD[1]];
			localPointB1 = this.$pE.$OD[cache.$VD[0]];
			localPointB2 = this.$pE.$OD[cache.$VD[1]];
			$Cz.$hG(transformA,localPointA);
			var dA = $Cz.$fG(transformA.$cE,$Cz.$kG(localPointA2,localPointA1));
			$Cz.$hG(transformB,localPointB);
			var dB = $Cz.$fG(transformB.$cE,$Cz.$kG(localPointB2,localPointB1));
			var a = dA.$QC * dA.$QC + dA.$RC * dA.$RC;
			var e = dB.$QC * dB.$QC + dB.$RC * dB.$RC;
			var r = $Cz.$kG(dB,dA);
			var c = dA.$QC * r.$QC + dA.$RC * r.$RC;
			var f = dB.$QC * r.$QC + dB.$RC * r.$RC;
			var b = dA.$QC * dB.$QC + dA.$RC * dB.$RC;
			var denom = a * e - b * b;
			s = 0.0;
			if(denom != 0.0) {
				s = $Cz.$sG((b * f - c * e) / denom,0.0,1.0);
			}
			var t = (b * s + f) / e;
			if(t < 0.0) {
				t = 0.0;
				s = $Cz.$sG((b - c) / a,0.0,1.0);
			}
			localPointA = new $CO();
			localPointA.$QC = localPointA1.$QC + s * (localPointA2.$QC - localPointA1.$QC);
			localPointA.$RC = localPointA1.$RC + s * (localPointA2.$RC - localPointA1.$RC);
			localPointB = new $CO();
			localPointB.$QC = localPointB1.$QC + s * (localPointB2.$QC - localPointB1.$QC);
			localPointB.$RC = localPointB1.$RC + s * (localPointB2.$RC - localPointB1.$RC);
			if(s == 0.0 || s == 1.0) {
				this.$RE = 2;
				this.$qE = $Cz.$JC($Cz.$kG(localPointB2,localPointB1),1.0);
				this.$qE.$PC();
				this.$QE = localPointB;
				tVec = this.$qE;
				tMat = transformB.$cE;
				normalX = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
				normalY = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
				tVec = this.$QE;
				tMat = transformB.$cE;
				pointBX = transformB.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
				pointBY = transformB.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
				tVec = localPointA;
				tMat = transformA.$cE;
				pointAX = transformA.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
				pointAY = transformA.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
				if(s < 0.0) {
					this.$qE.$EC();
				}
			} else {
				this.$RE = 1;
				this.$qE = $Cz.$JC($Cz.$kG(localPointA2,localPointA1),1.0);
				this.$QE = localPointA;
				tVec = this.$qE;
				tMat = transformA.$cE;
				normalX = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
				normalY = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
				tVec = this.$QE;
				tMat = transformA.$cE;
				pointAX = transformA.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
				pointAY = transformA.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
				tVec = localPointB;
				tMat = transformB.$cE;
				pointBX = transformB.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
				pointBY = transformB.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
				if(s < 0.0) {
					this.$qE.$EC();
				}
			}
		}
	}
	,$kE: function(transformA,transformB) {
		var axisA;
		var axisB;
		var localPointA;
		var localPointB;
		var pointA;
		var pointB;
		var seperation;
		var normal;
		switch(this.$RE) {
		case 0:
			axisA = $Cz.$gG(transformA.$cE,this.$qE);
			axisB = $Cz.$gG(transformB.$cE,this.$qE.$DC());
			localPointA = this.$oE.$mD(axisA);
			localPointB = this.$pE.$mD(axisB);
			pointA = $Cz.$hG(transformA,localPointA);
			pointB = $Cz.$hG(transformB,localPointB);
			seperation = (pointB.$QC - pointA.$QC) * this.$qE.$QC + (pointB.$RC - pointA.$RC) * this.$qE.$RC;
			return seperation;
		case 1:
			normal = $Cz.$fG(transformA.$cE,this.$qE);
			pointA = $Cz.$hG(transformA,this.$QE);
			axisB = $Cz.$gG(transformB.$cE,normal.$DC());
			localPointB = this.$pE.$mD(axisB);
			pointB = $Cz.$hG(transformB,localPointB);
			seperation = (pointB.$QC - pointA.$QC) * normal.$QC + (pointB.$RC - pointA.$RC) * normal.$RC;
			return seperation;
		case 2:
			normal = $Cz.$fG(transformB.$cE,this.$qE);
			pointB = $Cz.$hG(transformB,this.$QE);
			axisA = $Cz.$gG(transformA.$cE,normal.$DC());
			localPointA = this.$oE.$mD(axisA);
			pointA = $Cz.$hG(transformA,localPointA);
			seperation = (pointA.$QC - pointB.$QC) * normal.$QC + (pointA.$RC - pointB.$RC) * normal.$RC;
			return seperation;
		}
	}
	,__class__: $Ck
};
var $Cm = function() {
	this.$UD = [];
	this.$VD = [];
};
$hxClasses["$Cm"] = $Cm;
$Cm.__name__ = "$Cm";
$Cm.prototype = {
	__class__: $Cm
};
var $Cn = function() {
	this.$dD = new $CY();
	this.$eD = new $CY();
	this.$tE = new $C1();
	this.$uE = new $C1();
};
$hxClasses["$Cn"] = $Cn;
$Cn.__name__ = "$Cn";
$Cn.prototype = {
	__class__: $Cn
};
var $Co = function(pos,r) {
	this.$4C = new $CO();
	this.$cE = new $Cp();
	if(pos != null) {
		this.$4C.$CC(pos);
		this.$cE.$zE(r);
	}
};
$hxClasses["$Co"] = $Co;
$Co.__name__ = "$Co";
$Co.prototype = {
	__class__: $Co
};
var $Cp = function() {
	this.$3E = new $CO(1,0);
	this.$4E = new $CO(0,1);
};
$hxClasses["$Cp"] = $Cp;
$Cp.__name__ = "$Cp";
$Cp.prototype = {
	$kB: function(angle) {
		var c = Math.cos(angle);
		var s = Math.sin(angle);
		this.$3E.$QC = c;
		this.$4E.$QC = -s;
		this.$3E.$RC = s;
		this.$4E.$RC = c;
	}
	,$zE: function(m) {
		this.$3E.$CC(m.$3E);
		this.$4E.$CC(m.$4E);
	}
	,$1E: function(out) {
		var a = this.$3E.$QC;
		var b = this.$4E.$QC;
		var c = this.$3E.$RC;
		var d = this.$4E.$RC;
		var det = a * d - b * c;
		if(det != 0.0) {
			det = 1.0 / det;
		}
		out.$3E.$QC = det * d;
		out.$4E.$QC = -det * b;
		out.$3E.$RC = -det * c;
		out.$4E.$RC = det * a;
		return out;
	}
	,__class__: $Cp
};
var $Cq = function() { };
$hxClasses["$Cq"] = $Cq;
$Cq.__name__ = "$Cq";
$Cq.$GF = function(input) {
	++$Cq.$7E;
	var proxyA = input.$dD;
	var proxyB = input.$eD;
	var sweepA = input.$tE;
	var sweepB = input.$uE;
	var radius = proxyA.$qD + proxyB.$qD;
	var tolerance = input.$vE;
	var alpha = 0.0;
	var iter = 0;
	var target = 0.0;
	$Cq.$AF.$c = 0;
	$Cq.$BF.$hD = false;
	while(true) {
		sweepA.$7G($Cq.$CF,alpha);
		sweepB.$7G($Cq.$DF,alpha);
		$Cq.$BF.$dD = proxyA;
		$Cq.$BF.$eD = proxyB;
		$Cq.$BF.$fD = $Cq.$CF;
		$Cq.$BF.$gD = $Cq.$DF;
		$CV.$cD($Cq.$FF,$Cq.$AF,$Cq.$BF);
		if($Cq.$FF.$cD <= 0.0) {
			alpha = 1.0;
			break;
		}
		$Cq.$EF.$jE($Cq.$AF,proxyA,$Cq.$CF,proxyB,$Cq.$DF);
		var separation = $Cq.$EF.$kE($Cq.$CF,$Cq.$DF);
		if(separation <= 0.0) {
			alpha = 1.0;
			break;
		}
		if(iter == 0) {
			if(separation > radius) {
				var a = radius - tolerance;
				var b = 0.75 * radius;
				target = a > b ? a : b;
			} else {
				var a1 = separation - tolerance;
				var b1 = 0.02 * radius;
				target = a1 > b1 ? a1 : b1;
			}
		}
		if(separation - target < 0.5 * tolerance) {
			if(iter == 0) {
				alpha = 1.0;
				break;
			}
			break;
		}
		var newAlpha = alpha;
		var x1 = alpha;
		var x2 = 1.0;
		var f1 = separation;
		sweepA.$7G($Cq.$CF,1.0);
		sweepB.$7G($Cq.$DF,1.0);
		var f2 = $Cq.$EF.$kE($Cq.$CF,$Cq.$DF);
		if(f2 >= target) {
			alpha = 1.0;
			break;
		}
		var rootIterCount = 0;
		while(true) {
			var x;
			if((rootIterCount & 1) != 0) {
				x = x1 + (target - f1) * (x2 - x1) / (f2 - f1);
			} else {
				x = 0.5 * (x1 + x2);
			}
			sweepA.$7G($Cq.$CF,x);
			sweepB.$7G($Cq.$DF,x);
			var f = $Cq.$EF.$kE($Cq.$CF,$Cq.$DF);
			if($Cz.$NC(f - target) < 0.025 * tolerance) {
				newAlpha = x;
				break;
			}
			if(f > target) {
				x1 = x;
				f1 = f;
			} else {
				x2 = x;
				f2 = f;
			}
			++rootIterCount;
			++$Cq.$$E;
			if(rootIterCount == 50) {
				break;
			}
		}
		var a2 = $Cq.$_E;
		$Cq.$_E = a2 > rootIterCount ? a2 : rootIterCount;
		if(newAlpha < alpha) {
			break;
		}
		alpha = newAlpha;
		++iter;
		++$Cq.$8E;
		if(iter == 1000) {
			break;
		}
	}
	var a = $Cq.$9E;
	$Cq.$9E = a > iter ? a : iter;
	return alpha;
};
var $Cr = function() {
	this.$IF = new $CO();
	this.$OE = [];
	this.$OE[0] = new $CO();
	this.$OE[1] = new $CO();
};
$hxClasses["$Cr"] = $Cr;
$Cr.__name__ = "$Cr";
$Cr.prototype = {
	$jE: function(manifold,xfA,radiusA,xfB,radiusB) {
		if(manifold.$SE == 0) {
			return;
		}
		var tVec;
		var tMat;
		var normalX;
		var normalY;
		var planePointX;
		var planePointY;
		var clipPointX;
		var clipPointY;
		switch(manifold.$RE) {
		case 0:
			tMat = xfA.$cE;
			tVec = manifold.$QE;
			var pointAX = xfA.$4C.$QC + tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
			var pointAY = xfA.$4C.$RC + tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
			tMat = xfB.$cE;
			tVec = manifold.$OE[0].$QE;
			var pointBX = xfB.$4C.$QC + tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
			var pointBY = xfB.$4C.$RC + tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
			var dX = pointBX - pointAX;
			var dY = pointBY - pointAY;
			var d2 = dX * dX + dY * dY;
			if(d2 > 0.) {
				var d = Math.sqrt(d2);
				this.$IF.$QC = dX / d;
				this.$IF.$RC = dY / d;
			} else {
				this.$IF.$QC = 1;
				this.$IF.$RC = 0;
			}
			this.$OE[0].$QC = 0.5 * (pointAX + radiusA * this.$IF.$QC + (pointBX - radiusB * this.$IF.$QC));
			this.$OE[0].$RC = 0.5 * (pointAY + radiusA * this.$IF.$RC + (pointBY - radiusB * this.$IF.$RC));
			break;
		case 1:
			tMat = xfA.$cE;
			tVec = manifold.$PE;
			normalX = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
			normalY = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
			tMat = xfA.$cE;
			tVec = manifold.$QE;
			planePointX = xfA.$4C.$QC + tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
			planePointY = xfA.$4C.$RC + tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
			this.$IF.$QC = normalX;
			this.$IF.$RC = normalY;
			var _g = 0;
			var _g1 = manifold.$SE;
			while(_g < _g1) {
				var i = _g++;
				tMat = xfB.$cE;
				tVec = manifold.$OE[i].$QE;
				clipPointX = xfB.$4C.$QC + tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
				clipPointY = xfB.$4C.$RC + tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
				this.$OE[i].$QC = clipPointX + 0.5 * (radiusA - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusB) * normalX;
				this.$OE[i].$RC = clipPointY + 0.5 * (radiusA - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusB) * normalY;
			}
			break;
		case 2:
			tMat = xfB.$cE;
			tVec = manifold.$PE;
			normalX = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
			normalY = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
			tMat = xfB.$cE;
			tVec = manifold.$QE;
			planePointX = xfB.$4C.$QC + tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
			planePointY = xfB.$4C.$RC + tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
			this.$IF.$QC = -normalX;
			this.$IF.$RC = -normalY;
			var _g = 0;
			var _g1 = manifold.$SE;
			while(_g < _g1) {
				var i = _g++;
				tMat = xfA.$cE;
				tVec = manifold.$OE[i].$QE;
				clipPointX = xfA.$4C.$QC + tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
				clipPointY = xfA.$4C.$RC + tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
				this.$OE[i].$QC = clipPointX + 0.5 * (radiusB - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusA) * normalX;
				this.$OE[i].$RC = clipPointY + 0.5 * (radiusB - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusA) * normalY;
			}
			break;
		}
	}
	,__class__: $Cr
};
var $Cs = function() {
	this.$RE = -1;
	this.$qD = 0.005;
};
$hxClasses["$Cs"] = $Cs;
$Cs.__name__ = "$Cs";
$Cs.$7B = function(shape1,transform1,shape2,transform2) {
	var input = new $CW();
	input.$dD = new $CY();
	input.$dD.$kB(shape1);
	input.$eD = new $CY();
	input.$eD.$kB(shape2);
	input.$fD = transform1;
	input.$gD = transform2;
	input.$hD = true;
	var simplexCache = new $Cm();
	simplexCache.$c = 0;
	var output = new $CX();
	$CV.$cD(output,simplexCache,input);
	return output.$cD < 2.22507385850720138e-307;
};
$Cs.prototype = {
	$KF: function(aabb,xf) {
	}
	,__class__: $Cs
};
var $Ct = function(radius) {
	if(radius == null) {
		radius = 0;
	}
	$Cs.call(this);
	this.$QF = new $CO();
	this.$RE = 0;
	this.$qD = radius;
};
$hxClasses["$Ct"] = $Ct;
$Ct.__name__ = "$Ct";
$Ct.__super__ = $Cs;
$Ct.prototype = $extend($Cs.prototype,{
	$KF: function(aabb,transform) {
		var tMat = transform.$cE;
		var pX = transform.$4C.$QC + (tMat.$3E.$QC * this.$QF.$QC + tMat.$4E.$QC * this.$QF.$RC);
		var pY = transform.$4C.$RC + (tMat.$3E.$RC * this.$QF.$QC + tMat.$4E.$RC * this.$QF.$RC);
		aabb.$9B.$kB(pX - this.$qD,pY - this.$qD);
		aabb.$$B.$kB(pX + this.$qD,pY + this.$qD);
	}
	,__class__: $Ct
});
var $Cu = function(v1,v2) {
	$Cs.call(this);
	this.$fF = new $CO();
	this.$LD = new $CO();
	this.$MD = new $CO();
	this.$jF = new $CO();
	this.$kF = new $CO();
	this.$IF = new $CO();
	this.$mF = new $CO();
	this.$nF = new $CO();
	this.$oF = new $CO();
	this.$RE = 2;
	this.$sF = null;
	this.$rF = null;
	this.$LD = v1;
	this.$MD = v2;
	this.$mF.$kB(this.$MD.$QC - this.$LD.$QC,this.$MD.$RC - this.$LD.$RC);
	this.$lF = this.$mF.$PC();
	this.$IF.$kB(this.$mF.$RC,-this.$mF.$QC);
	this.$jF.$kB(-0.04 * (this.$IF.$QC - this.$mF.$QC) + this.$LD.$QC,-0.04 * (this.$IF.$RC - this.$mF.$RC) + this.$LD.$RC);
	this.$kF.$kB(-0.04 * (this.$IF.$QC + this.$mF.$QC) + this.$MD.$QC,-0.04 * (this.$IF.$RC + this.$mF.$RC) + this.$MD.$RC);
	this.$nF = this.$IF;
	this.$oF.$kB(-this.$IF.$QC,-this.$IF.$RC);
};
$hxClasses["$Cu"] = $Cu;
$Cu.__name__ = "$Cu";
$Cu.__super__ = $Cs;
$Cu.prototype = $extend($Cs.prototype,{
	$KF: function(aabb,transform) {
		var tMat = transform.$cE;
		var v1X = transform.$4C.$QC + (tMat.$3E.$QC * this.$LD.$QC + tMat.$4E.$QC * this.$LD.$RC);
		var v1Y = transform.$4C.$RC + (tMat.$3E.$RC * this.$LD.$QC + tMat.$4E.$RC * this.$LD.$RC);
		var v2X = transform.$4C.$QC + (tMat.$3E.$QC * this.$MD.$QC + tMat.$4E.$QC * this.$MD.$RC);
		var v2Y = transform.$4C.$RC + (tMat.$3E.$RC * this.$MD.$QC + tMat.$4E.$RC * this.$MD.$RC);
		if(v1X < v2X) {
			aabb.$9B.$QC = v1X;
			aabb.$$B.$QC = v2X;
		} else {
			aabb.$9B.$QC = v2X;
			aabb.$$B.$QC = v1X;
		}
		if(v1Y < v2Y) {
			aabb.$9B.$RC = v1Y;
			aabb.$$B.$RC = v2Y;
		} else {
			aabb.$9B.$RC = v2Y;
			aabb.$$B.$RC = v1Y;
		}
	}
	,__class__: $Cu
});
var $Cw = function() {
	$Cs.call(this);
	this.$RE = 1;
	this.$2F = new $CO();
	this.$OD = [];
	this.$3F = [];
};
$hxClasses["$Cw"] = $Cw;
$Cw.__name__ = "$Cw";
$Cw.__super__ = $Cs;
$Cw.prototype = $extend($Cs.prototype,{
	$KF: function(aabb,xf) {
		var tMat = xf.$cE;
		var tVec = this.$OD[0];
		var lowerX = xf.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
		var lowerY = xf.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
		var upperX = lowerX;
		var upperY = lowerY;
		var _g = 1;
		var _g1 = this.$4F;
		while(_g < _g1) {
			tVec = this.$OD[_g++];
			var vX = xf.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			var vY = xf.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			if(!(lowerX < vX)) {
				lowerX = vX;
			}
			if(!(lowerY < vY)) {
				lowerY = vY;
			}
			if(!(upperX > vX)) {
				upperX = vX;
			}
			if(!(upperY > vY)) {
				upperY = vY;
			}
		}
		aabb.$9B.$QC = lowerX - this.$qD;
		aabb.$9B.$RC = lowerY - this.$qD;
		aabb.$$B.$QC = upperX + this.$qD;
		aabb.$$B.$RC = upperY + this.$qD;
	}
	,__class__: $Cw
});
var $Cy = function() { };
$hxClasses["$Cy"] = $Cy;
$Cy.__name__ = "$Cy";
$Cy.$YG = function(friction1,friction2) {
	return Math.sqrt(friction1 * friction2);
};
$Cy.$ZG = function(restitution1,restitution2) {
	if(restitution1 > restitution2) {
		return restitution1;
	} else {
		return restitution2;
	}
};
var $Cz = function() { };
$hxClasses["$Cz"] = $Cz;
$Cz.__name__ = "$Cz";
$Cz.$dG = function(a,b) {
	return a.$QC * b.$QC + a.$RC * b.$RC;
};
$Cz.$eG = function(a,b) {
	return a.$QC * b.$RC - a.$RC * b.$QC;
};
$Cz.$JC = function(a,s) {
	return new $CO(s * a.$RC,-s * a.$QC);
};
$Cz.$KC = function(s,a) {
	return new $CO(-s * a.$RC,s * a.$QC);
};
$Cz.$fG = function(A,v) {
	return new $CO(A.$3E.$QC * v.$QC + A.$4E.$QC * v.$RC,A.$3E.$RC * v.$QC + A.$4E.$RC * v.$RC);
};
$Cz.$gG = function(A,v) {
	return new $CO($Cz.$dG(v,A.$3E),$Cz.$dG(v,A.$4E));
};
$Cz.$hG = function(T,v) {
	var a = $Cz.$fG(T.$cE,v);
	a.$QC += T.$4C.$QC;
	a.$RC += T.$4C.$RC;
	return a;
};
$Cz.$kG = function(a,b) {
	return new $CO(a.$QC - b.$QC,a.$RC - b.$RC);
};
$Cz.$NC = function(a) {
	if(a > 0.0) {
		return a;
	} else {
		return -a;
	}
};
$Cz.$sG = function(a,low,high) {
	if(a < low) {
		return low;
	} else if(a > high) {
		return high;
	} else {
		return a;
	}
};
var $C1 = function() {
	this.$9G = new $CO();
	this.$$G = new $CO();
	this.$_G = new $CO();
};
$hxClasses["$C1"] = $C1;
$C1.__name__ = "$C1";
$C1.prototype = {
	$kB: function(other) {
		this.$9G.$CC(other.$9G);
		this.$$G.$CC(other.$$G);
		this.$_G.$CC(other.$_G);
		this.$AH = other.$AH;
		this.$TD = other.$TD;
		this.$BH = other.$BH;
	}
	,$7G: function(xf,alpha) {
		xf.$4C.$QC = (1.0 - alpha) * this.$$G.$QC + alpha * this.$_G.$QC;
		xf.$4C.$RC = (1.0 - alpha) * this.$$G.$RC + alpha * this.$_G.$RC;
		xf.$cE.$kB((1.0 - alpha) * this.$AH + alpha * this.$TD);
		var tMat = xf.$cE;
		xf.$4C.$QC -= tMat.$3E.$QC * this.$9G.$QC + tMat.$4E.$QC * this.$9G.$RC;
		xf.$4C.$RC -= tMat.$3E.$RC * this.$9G.$QC + tMat.$4E.$RC * this.$9G.$RC;
	}
	,$8G: function(t) {
		if(this.$BH < t && 1.0 - this.$BH > 2.2250738585072014e-308) {
			var alpha = (t - this.$BH) / (1.0 - this.$BH);
			this.$$G.$QC = (1.0 - alpha) * this.$$G.$QC + alpha * this.$_G.$QC;
			this.$$G.$RC = (1.0 - alpha) * this.$$G.$RC + alpha * this.$_G.$RC;
			this.$AH = (1.0 - alpha) * this.$AH + alpha * this.$TD;
			this.$BH = t;
		}
	}
	,__class__: $C1
};
var $C3 = function(bd,world) {
	this.$ZI = null;
	this.$AI = new $Co();
	this.$BI = new $C1();
	this.$CI = new $CO();
	this.$EI = new $CO();
	this.$$H = 0;
	if(bd.$qI) {
		this.$$H |= 8;
	}
	if(bd.$pI) {
		this.$$H |= 16;
	}
	if(bd.$nI) {
		this.$$H |= 4;
	}
	if(bd.$oI) {
		this.$$H |= 2;
	}
	if(bd.$rI) {
		this.$$H |= 32;
	}
	this.$GI = world;
	this.$AI.$4C.$CC(bd.$4C);
	this.$AI.$cE.$kB(bd.$iI);
	this.$BI.$9G.$BC();
	this.$BI.$BH = 1.0;
	this.$BI.$AH = this.$BI.$TD = bd.$iI;
	var tMat = this.$AI.$cE;
	var tVec = this.$BI.$9G;
	this.$BI.$_G.$QC = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
	this.$BI.$_G.$RC = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
	this.$BI.$_G.$QC += this.$AI.$4C.$QC;
	this.$BI.$_G.$RC += this.$AI.$4C.$RC;
	this.$BI.$$G.$CC(this.$BI.$_G);
	this.$NI = null;
	this.$LI = null;
	this.$OI = null;
	this.$MI = 0;
	this.$HI = null;
	this.$II = null;
	this.$CI.$CC(bd.$jI);
	this.$DI = bd.$kI;
	this.$VI = bd.$lI;
	this.$WI = bd.$mI;
	this.$EI.$kB(0.0,0.0);
	this.$FI = 0.0;
	this.$XI = 0.0;
	this.$RE = bd.$hI;
	if(this.$RE == 2) {
		this.$PI = 1.0;
		this.$QI = 1.0;
	} else {
		this.$PI = 0.0;
		this.$QI = 0.0;
	}
	this.$RI = 0.0;
	this.$SI = 0.0;
	this.$TI = bd.$sI;
	this.$UI = bd.$tI;
	this.$YI = bd.$DE;
	this.$JI = null;
	this.$KI = 0;
};
$hxClasses["$C3"] = $C3;
$C3.__name__ = "$C3";
$C3.prototype = {
	$HH: function(position,angle) {
		if((this.$GI.$$H & 2) != 0 == true) {
			return;
		}
		this.$AI.$cE.$kB(angle);
		this.$AI.$4C.$CC(position);
		var tMat = this.$AI.$cE;
		var tVec = this.$BI.$9G;
		this.$BI.$_G.$QC = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
		this.$BI.$_G.$RC = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
		this.$BI.$_G.$QC += this.$AI.$4C.$QC;
		this.$BI.$_G.$RC += this.$AI.$4C.$RC;
		this.$BI.$$G.$CC(this.$BI.$_G);
		this.$BI.$AH = this.$BI.$TD = angle;
		var broadPhase = this.$GI.$eK.$$I;
		var f = this.$JI;
		while(f != null) {
			f.$YJ(broadPhase,this.$AI,this.$AI);
			f = f.$II;
		}
		this.$GI.$eK.$7I();
	}
	,$pH: function(flag) {
		if(flag) {
			this.$$H |= 2;
			this.$XI = 0.0;
		} else {
			this.$$H &= -3;
			this.$XI = 0.0;
			this.$CI.$BC();
			this.$DI = 0.0;
			this.$EI.$BC();
			this.$FI = 0.0;
		}
	}
	,$7H: function() {
		var xf1 = $C3.$aI;
		xf1.$cE.$kB(this.$BI.$AH);
		var tMat = xf1.$cE;
		var tVec = this.$BI.$9G;
		xf1.$4C.$QC = this.$BI.$$G.$QC - (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
		xf1.$4C.$RC = this.$BI.$$G.$RC - (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
		var broadPhase = this.$GI.$eK.$$I;
		var f = this.$JI;
		while(f != null) {
			f.$YJ(broadPhase,xf1,this.$AI);
			f = f.$II;
		}
	}
	,$8H: function() {
		this.$AI.$cE.$kB(this.$BI.$TD);
		var tMat = this.$AI.$cE;
		var tVec = this.$BI.$9G;
		this.$AI.$4C.$QC = this.$BI.$_G.$QC - (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
		this.$AI.$4C.$RC = this.$BI.$_G.$RC - (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
	}
	,$9H: function(other) {
		if(this.$RE != 2 && other.$RE != 2) {
			return false;
		}
		var jn = this.$NI;
		while(jn != null) {
			if(jn.$aL == other) {
				if(jn.$FN.$GM == false) {
					return false;
				}
			}
			jn = jn.next;
		}
		return true;
	}
	,$8G: function(t) {
		this.$BI.$8G(t);
		this.$BI.$_G.$CC(this.$BI.$$G);
		this.$BI.$TD = this.$BI.$AH;
		this.$8H();
	}
	,__class__: $C3
};
var $C4 = function() {
	this.$4C = new $CO();
	this.$jI = new $CO();
	this.$DE = null;
	this.$iI = 0.0;
	this.$kI = 0.0;
	this.$lI = 0.0;
	this.$mI = 0.0;
	this.$nI = true;
	this.$oI = true;
	this.$pI = false;
	this.$qI = false;
	this.$hI = 0;
	this.$rI = true;
	this.$sI = 1.0;
	this.$tI = 1.0;
};
$hxClasses["$C4"] = $C4;
$C4.__name__ = "$C4";
$C4.prototype = {
	__class__: $C4
};
var $C6 = function() {
};
$hxClasses["$C6"] = $C6;
$C6.__name__ = "$C6";
$C6.prototype = {
	$9H: function(fixtureA,fixtureB) {
		var filter1 = fixtureA.$hJ;
		var filter2 = fixtureB.$hJ;
		if(filter1.$JJ == filter2.$JJ && filter1.$JJ != 0) {
			return filter1.$JJ > 0;
		}
		return (filter1.$IJ & filter2.$HJ) != 0 && (filter1.$HJ & filter2.$IJ) != 0;
	}
	,__class__: $C6
};
var $C7 = function() {
	this.$zI = [];
	this.$0I = [];
};
$hxClasses["$C7"] = $C7;
$C7.__name__ = "$C7";
$C7.prototype = {
	__class__: $C7
};
var $C8 = function() {
};
$hxClasses["$C8"] = $C8;
$C8.__name__ = "$C8";
$C8.prototype = {
	$1I: function(contact) {
	}
	,$2I: function(contact) {
	}
	,$3I: function(contact,oldManifold) {
	}
	,$4I: function(contact,impulse) {
	}
	,__class__: $C8
};
var $C9 = function() {
	this.$GI = null;
	this.$_I = 0;
	this.$AJ = $C6.$yI;
	this.$BJ = $C8.$5I;
	this.$CJ = new $CKB(this.$DJ);
	this.$$I = new $Cb();
};
$hxClasses["$C9"] = $C9;
$C9.__name__ = "$C9";
$C9.prototype = {
	$6I: function(proxyUserDataA,proxyUserDataB) {
		var fixtureA = proxyUserDataA;
		var fixtureB = proxyUserDataB;
		var bodyA = fixtureA.$cJ;
		var bodyB = fixtureB.$cJ;
		if(bodyA == bodyB) {
			return;
		}
		var edge = bodyB.$OI;
		while(edge != null) {
			if(edge.$aL == bodyA) {
				var fA = edge.$bL.$9K;
				var fB = edge.$bL.$$K;
				if(fA == fixtureA && fB == fixtureB) {
					return;
				}
				if(fA == fixtureB && fB == fixtureA) {
					return;
				}
			}
			edge = edge.next;
		}
		if(bodyB.$9H(bodyA) == false) {
			return;
		}
		if(this.$AJ.$9H(fixtureA,fixtureB) == false) {
			return;
		}
		var c = this.$CJ.$XJ(fixtureA,fixtureB);
		fixtureA = c.$9K;
		fixtureB = c.$$K;
		bodyA = fixtureA.$cJ;
		bodyB = fixtureB.$cJ;
		c.$HI = null;
		c.$II = this.$GI.$OI;
		if(this.$GI.$OI != null) {
			this.$GI.$OI.$HI = c;
		}
		this.$GI.$OI = c;
		c.$7K.$bL = c;
		c.$7K.$aL = bodyB;
		c.$7K.$cL = null;
		c.$7K.next = bodyA.$OI;
		if(bodyA.$OI != null) {
			bodyA.$OI.$cL = c.$7K;
		}
		bodyA.$OI = c.$7K;
		c.$8K.$bL = c;
		c.$8K.$aL = bodyA;
		c.$8K.$cL = null;
		c.$8K.next = bodyB.$OI;
		if(bodyB.$OI != null) {
			bodyB.$OI.$cL = c.$8K;
		}
		bodyB.$OI = c.$8K;
		++this.$GI.$_I;
	}
	,$7I: function() {
		this.$$I.updatePairs($bind(this,this.$6I));
	}
	,$8I: function(c) {
		var bodyA = c.$9K.$cJ;
		var bodyB = c.$$K.$cJ;
		if((c.$$H & 16) != 0) {
			this.$BJ.$2I(c);
		}
		if(c.$HI != null) {
			c.$HI.$II = c.$II;
		}
		if(c.$II != null) {
			c.$II.$HI = c.$HI;
		}
		if(c == this.$GI.$OI) {
			this.$GI.$OI = c.$II;
		}
		if(c.$7K.$cL != null) {
			c.$7K.$cL.next = c.$7K.next;
		}
		if(c.$7K.next != null) {
			c.$7K.next.$cL = c.$7K.$cL;
		}
		if(c.$7K == bodyA.$OI) {
			bodyA.$OI = c.$7K.next;
		}
		if(c.$8K.$cL != null) {
			c.$8K.$cL.next = c.$8K.next;
		}
		if(c.$8K.next != null) {
			c.$8K.next.$cL = c.$8K.$cL;
		}
		if(c.$8K == bodyB.$OI) {
			bodyB.$OI = c.$8K.next;
		}
		this.$CJ.$8I(c);
		--this.$_I;
	}
	,$9I: function() {
		var c = this.$GI.$OI;
		while(c != null) {
			var fixtureA = c.$9K;
			var fixtureB = c.$$K;
			var bodyA = fixtureA.$cJ;
			var bodyB = fixtureB.$cJ;
			if((bodyA.$$H & 2) != 0 == false && (bodyB.$$H & 2) != 0 == false) {
				c = c.$II;
				continue;
			}
			if((c.$$H & 64) != 0) {
				if(bodyB.$9H(bodyA) == false) {
					var cNuke = c;
					c = cNuke.$II;
					this.$8I(cNuke);
					continue;
				}
				if(this.$AJ.$9H(fixtureA,fixtureB) == false) {
					var cNuke1 = c;
					c = cNuke1.$II;
					this.$8I(cNuke1);
					continue;
				}
				c.$$H &= -65;
			}
			if(this.$$I.testOverlap(fixtureA.$gJ,fixtureB.$gJ) == false) {
				var cNuke2 = c;
				c = cNuke2.$II;
				this.$8I(cNuke2);
				continue;
			}
			c.$5K(this.$BJ);
			c = c.$II;
		}
	}
	,__class__: $C9
};
var $C$ = function() { };
$hxClasses["$C$"] = $C$;
$C$.__name__ = "$C$";
$C$.prototype = {
	$FJ: function(joint) {
	}
	,$GJ: function(fixture) {
	}
	,__class__: $C$
};
var $C_$ = function() {
	this.$HJ = 1;
	this.$IJ = 65535;
	this.$JJ = 0;
};
$hxClasses["$C_"] = $C_$;
$C_$.__name__ = "$C_";
$C_$.prototype = {
	__class__: $C_$
};
var $CAB = function() {
	this.$hJ = new $C_$();
	this.$aJ = new $CM();
	this.$YI = null;
	this.$cJ = null;
	this.$II = null;
	this.$dJ = null;
	this.$bJ = 0.0;
	this.$eJ = 0.0;
	this.$fJ = 0.0;
};
$hxClasses["$CAB"] = $CAB;
$CAB.__name__ = "$CAB";
$CAB.prototype = {
	$8I: function() {
		this.$dJ = null;
	}
	,$sD: function(broadPhase) {
		if(this.$gJ == null) {
			return;
		}
		broadPhase.destroyProxy(this.$gJ);
		this.$gJ = null;
	}
	,$YJ: function(broadPhase,transform1,transform2) {
		if(this.$gJ == null) {
			return;
		}
		var aabb1 = new $CM();
		var aabb2 = new $CM();
		this.$dJ.$KF(aabb1,transform1);
		this.$dJ.$KF(aabb2,transform2);
		this.$aJ.$8B(aabb1,aabb2);
		broadPhase.moveProxy(this.$gJ,this.$aJ,$Cz.$kG(transform2.$4C,transform1.$4C));
	}
	,__class__: $CAB
};
var $CCB = function() {
	this.$tJ = [];
	this.$uJ = [];
	this.$vJ = [];
};
$hxClasses["$CCB"] = $CCB;
$CCB.__name__ = "$CCB";
$CCB.prototype = {
	$jE: function(bodyCapacity,contactCapacity,jointCapacity,allocator,listener,contactSolver) {
		this.$yJ = bodyCapacity;
		this.$zJ = contactCapacity;
		this.$0J = jointCapacity;
		this.$wJ = 0;
		this.$_I = 0;
		this.$xJ = 0;
		this.$DJ = allocator;
		this.$rJ = listener;
		this.$sJ = contactSolver;
		var _g = this.$tJ.length;
		while(_g < bodyCapacity) this.$tJ[_g++] = null;
		var _g = this.$uJ.length;
		while(_g < contactCapacity) this.$uJ[_g++] = null;
		var _g = this.$vJ.length;
		while(_g < jointCapacity) this.$vJ[_g++] = null;
	}
	,$lJ: function() {
		this.$wJ = 0;
		this.$_I = 0;
		this.$xJ = 0;
	}
	,$2E: function(step,gravity,allowSleep) {
		var b;
		var joint;
		var _g = 0;
		var _g1 = this.$wJ;
		while(_g < _g1) {
			b = this.$tJ[_g++];
			if(b.$RE != 2) {
				continue;
			}
			b.$CI.$QC += step.$2J * (b.$UI * gravity.$QC + b.$QI * b.$EI.$QC);
			b.$CI.$RC += step.$2J * (b.$UI * gravity.$RC + b.$QI * b.$EI.$RC);
			b.$DI += step.$2J * b.$SI * b.$FI;
			b.$CI.$GC($Cz.$sG(1.0 - step.$2J * b.$VI,0.0,1.0));
			b.$DI *= $Cz.$sG(1.0 - step.$2J * b.$WI,0.0,1.0);
		}
		this.$sJ.$jE(step,this.$uJ,this.$_I,this.$DJ);
		var contactSolver = this.$sJ;
		contactSolver.$pL(step);
		var _g = 0;
		var _g1 = this.$xJ;
		while(_g < _g1) {
			joint = this.$vJ[_g++];
			joint.$pL(step);
		}
		var _g = 0;
		var _g1 = step.$5J;
		while(_g < _g1) {
			++_g;
			var _g2 = 0;
			var _g3 = this.$xJ;
			while(_g2 < _g3) {
				joint = this.$vJ[_g2++];
				joint.$qL(step);
			}
			contactSolver.$qL();
		}
		var _g = 0;
		var _g1 = this.$xJ;
		while(_g < _g1) {
			joint = this.$vJ[_g++];
			joint.$rL();
		}
		contactSolver.$rL();
		var _g = 0;
		var _g1 = this.$wJ;
		while(_g < _g1) {
			b = this.$tJ[_g++];
			if(b.$RE == 0) {
				continue;
			}
			var translationX = step.$2J * b.$CI.$QC;
			var translationY = step.$2J * b.$CI.$RC;
			if(translationX * translationX + translationY * translationY > 4.0) {
				b.$CI.$PC();
				b.$CI.$QC *= 2.0 * step.$3J;
				b.$CI.$RC *= 2.0 * step.$3J;
			}
			var rotation = step.$2J * b.$DI;
			if(rotation * rotation > 2.4674011002723395) {
				if(b.$DI < 0.0) {
					b.$DI = -1.57079632679489656 * step.$3J;
				} else {
					b.$DI = 1.57079632679489656 * step.$3J;
				}
			}
			b.$BI.$$G.$CC(b.$BI.$_G);
			b.$BI.$AH = b.$BI.$TD;
			b.$BI.$_G.$QC += step.$2J * b.$CI.$QC;
			b.$BI.$_G.$RC += step.$2J * b.$CI.$RC;
			b.$BI.$TD += step.$2J * b.$DI;
			b.$8H();
		}
		var _g = 0;
		var _g1 = step.$6J;
		while(_g < _g1) {
			++_g;
			var contactsOkay = contactSolver.$sL(0.2);
			var jointsOkay = true;
			var _g2 = 0;
			var _g3 = this.$xJ;
			while(_g2 < _g3) {
				joint = this.$vJ[_g2++];
				var jointOkay = joint.$sL(0.2);
				jointsOkay = jointsOkay && jointOkay;
			}
			if(contactsOkay && jointsOkay) {
				break;
			}
		}
		this.$nJ(contactSolver.$uL);
		if(allowSleep) {
			var minSleepTime = 1.7976931348623158e+308;
			var _g = 0;
			var _g1 = this.$wJ;
			while(_g < _g1) {
				b = this.$tJ[_g++];
				if(b.$RE == 0) {
					continue;
				}
				if((b.$$H & 4) == 0) {
					b.$XI = 0.0;
					minSleepTime = 0.0;
				}
				if((b.$$H & 4) == 0 || b.$DI * b.$DI > 0.00121846967914683428 || $Cz.$dG(b.$CI,b.$CI) > 0.0001) {
					b.$XI = 0.0;
					minSleepTime = 0.0;
				} else {
					var b1 = b.$XI += step.$2J;
					if(!(minSleepTime < b1)) {
						minSleepTime = b1;
					}
				}
			}
			if(minSleepTime >= 0.5) {
				var _g = 0;
				var _g1 = this.$wJ;
				while(_g < _g1) {
					b = this.$tJ[_g++];
					b.$pH(false);
				}
			}
		}
	}
	,$mJ: function(subStep) {
		this.$sJ.$jE(subStep,this.$uJ,this.$_I,this.$DJ);
		var contactSolver = this.$sJ;
		var _g = 0;
		var _g1 = this.$xJ;
		while(_g < _g1) this.$vJ[_g++].$pL(subStep);
		var _g = 0;
		var _g1 = subStep.$5J;
		while(_g < _g1) {
			++_g;
			contactSolver.$qL();
			var _g2 = 0;
			var _g3 = this.$xJ;
			while(_g2 < _g3) this.$vJ[_g2++].$qL(subStep);
		}
		var _g = 0;
		var _g1 = this.$wJ;
		while(_g < _g1) {
			var b = this.$tJ[_g++];
			if(b.$RE == 0) {
				continue;
			}
			var translationX = subStep.$2J * b.$CI.$QC;
			var translationY = subStep.$2J * b.$CI.$RC;
			if(translationX * translationX + translationY * translationY > 4.0) {
				b.$CI.$PC();
				b.$CI.$QC *= 2.0 * subStep.$3J;
				b.$CI.$RC *= 2.0 * subStep.$3J;
			}
			var rotation = subStep.$2J * b.$DI;
			if(rotation * rotation > 2.4674011002723395) {
				if(b.$DI < 0.0) {
					b.$DI = -1.57079632679489656 * subStep.$3J;
				} else {
					b.$DI = 1.57079632679489656 * subStep.$3J;
				}
			}
			b.$BI.$$G.$CC(b.$BI.$_G);
			b.$BI.$AH = b.$BI.$TD;
			b.$BI.$_G.$QC += subStep.$2J * b.$CI.$QC;
			b.$BI.$_G.$RC += subStep.$2J * b.$CI.$RC;
			b.$BI.$TD += subStep.$2J * b.$DI;
			b.$8H();
		}
		var _g = 0;
		var _g1 = subStep.$6J;
		while(_g < _g1) {
			++_g;
			var contactsOkay = contactSolver.$sL(0.75);
			var jointsOkay = true;
			var _g2 = 0;
			var _g3 = this.$xJ;
			while(_g2 < _g3) {
				var jointOkay = this.$vJ[_g2++].$sL(0.2);
				jointsOkay = jointsOkay && jointOkay;
			}
			if(contactsOkay && jointsOkay) {
				break;
			}
		}
		this.$nJ(contactSolver.$uL);
	}
	,$nJ: function(constraints) {
		if(this.$rJ == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.$_I;
		while(_g < _g1) {
			var i = _g++;
			var c = this.$uJ[i];
			var cc = constraints[i];
			var _g2 = 0;
			var _g3 = cc.$RL;
			while(_g2 < _g3) {
				var j = _g2++;
				$CCB.$1J.$zI[j] = cc.$JL[j].$VL;
				$CCB.$1J.$0I[j] = cc.$JL[j].$WL;
			}
			this.$rJ.$4I(c,$CCB.$1J);
		}
	}
	,$oJ: function(body) {
		body.$_H = this.$wJ;
		this.$tJ[this.$wJ++] = body;
	}
	,$pJ: function(contact) {
		this.$uJ[this.$_I++] = contact;
	}
	,$qJ: function(joint) {
		this.$vJ[this.$xJ++] = joint;
	}
	,__class__: $CCB
};
var $CDB = function() {
};
$hxClasses["$CDB"] = $CDB;
$CDB.__name__ = "$CDB";
$CDB.prototype = {
	$kB: function(step) {
		this.$2J = step.$2J;
		this.$3J = step.$3J;
		this.$6J = step.$6J;
		this.$5J = step.$5J;
		this.$7J = step.$7J;
	}
	,__class__: $CDB
};
var $CEB = function(gravity,doSleep) {
	this.$aK = [];
	this.$eK = new $C9();
	this.$sJ = new $CNB();
	this.$fK = new $CCB();
	this.$kK = null;
	this.$gK = null;
	this.$OI = null;
	this.$NI = null;
	this.$LI = null;
	this.$wJ = 0;
	this.$_I = 0;
	this.$xJ = 0;
	this.$MI = 0;
	$CEB.$sK = true;
	$CEB.$tK = true;
	this.$iK = doSleep;
	this.$hK = gravity;
	this.$lK = 0.0;
	this.$eK.$GI = this;
	this.$jK = this.$BK(new $C4());
};
$hxClasses["$CEB"] = $CEB;
$CEB.__name__ = "$CEB";
$CEB.prototype = {
	$BK: function(def) {
		if((this.$$H & 2) != 0 == true) {
			return null;
		}
		var b = new $C3(def,this);
		b.$HI = null;
		b.$II = this.$gK;
		if(this.$gK != null) {
			this.$gK.$HI = b;
		}
		this.$gK = b;
		++this.$wJ;
		return b;
	}
	,$CK: function(b) {
		if((this.$$H & 2) != 0 == true) {
			return;
		}
		var jn = b.$NI;
		while(jn != null) {
			var jn0 = jn;
			jn = jn.next;
			if(this.$kK != null) {
				this.$kK.$FJ(jn0.$FN);
			}
			this.$EK(jn0.$FN);
		}
		var coe = b.$LI;
		while(coe != null) {
			var coe0 = coe;
			coe = coe.$6L;
			coe0.$1L.$0L(b);
		}
		var ce = b.$OI;
		while(ce != null) {
			var ce0 = ce;
			ce = ce.next;
			this.$eK.$8I(ce0.$bL);
		}
		b.$OI = null;
		var f = b.$JI;
		while(f != null) {
			var f0 = f;
			f = f.$II;
			if(this.$kK != null) {
				this.$kK.$GJ(f0);
			}
			f0.$sD(this.$eK.$$I);
			f0.$8I();
		}
		b.$JI = null;
		b.$KI = 0;
		if(b.$HI != null) {
			b.$HI.$II = b.$II;
		}
		if(b.$II != null) {
			b.$II.$HI = b.$HI;
		}
		if(b == this.$gK) {
			this.$gK = b.$II;
		}
		--this.$wJ;
	}
	,$EK: function(j) {
		var collideConnected = j.$GM;
		if(j.$HI != null) {
			j.$HI.$II = j.$II;
		}
		if(j.$II != null) {
			j.$II.$HI = j.$HI;
		}
		if(j == this.$NI) {
			this.$NI = j.$II;
		}
		var bodyA = j.$DM;
		var bodyB = j.$EM;
		bodyA.$pH(true);
		bodyB.$pH(true);
		if(j.$BM.$cL != null) {
			j.$BM.$cL.next = j.$BM.next;
		}
		if(j.$BM.next != null) {
			j.$BM.next.$cL = j.$BM.$cL;
		}
		if(j.$BM == bodyA.$NI) {
			bodyA.$NI = j.$BM.next;
		}
		j.$BM.$cL = null;
		j.$BM.next = null;
		if(j.$CM.$cL != null) {
			j.$CM.$cL.next = j.$CM.next;
		}
		if(j.$CM.next != null) {
			j.$CM.next.$cL = j.$CM.$cL;
		}
		if(j.$CM == bodyB.$NI) {
			bodyB.$NI = j.$CM.next;
		}
		j.$CM.$cL = null;
		j.$CM.next = null;
		--this.$xJ;
		if(collideConnected == false) {
			var edge = bodyB.$OI;
			while(edge != null) {
				if(edge.$aL == bodyA) {
					edge.$bL.$4K();
				}
				edge = edge.next;
			}
		}
	}
	,$RK: function(dt,velocityIterations,positionIterations) {
		if((this.$$H & 1) != 0) {
			this.$eK.$7I();
			this.$$H &= -2;
		}
		this.$$H |= 2;
		var step = $CEB.$mK;
		step.$2J = dt;
		step.$5J = velocityIterations;
		step.$6J = positionIterations;
		if(dt > 0.0) {
			step.$3J = 1.0 / dt;
		} else {
			step.$3J = 0.0;
		}
		step.$4J = this.$lK * dt;
		step.$7J = $CEB.$sK;
		this.$eK.$9I();
		if(step.$2J > 0.0) {
			this.$2E(step);
		}
		if($CEB.$tK && step.$2J > 0.0) {
			this.$mJ(step);
		}
		if(step.$2J > 0.0) {
			this.$lK = step.$3J;
		}
		this.$$H &= -3;
	}
	,$SK: function() {
		var body = this.$gK;
		while(body != null) {
			body.$EI.$BC();
			body.$FI = 0.0;
			body = body.$II;
		}
	}
	,$2E: function(step) {
		var controller = this.$LI;
		while(controller != null) {
			controller.$RK(step);
			controller = controller.$II;
		}
		var island = this.$fK;
		island.$jE(this.$wJ,this.$_I,this.$xJ,null,this.$eK.$BJ,this.$sJ);
		var b = this.$gK;
		while(b != null) {
			b.$$H &= -2;
			b = b.$II;
		}
		var c = this.$OI;
		while(c != null) {
			c.$$H &= -5;
			c = c.$II;
		}
		var j = this.$NI;
		while(j != null) {
			j.$FM = false;
			j = j.$II;
		}
		var stack = this.$aK;
		var seed = this.$gK;
		while(seed != null) {
			if((seed.$$H & 1) != 0) {
				seed = seed.$II;
				continue;
			}
			if((seed.$$H & 2) != 0 == false || (seed.$$H & 32) != 0 == false) {
				seed = seed.$II;
				continue;
			}
			if(seed.$RE == 0) {
				seed = seed.$II;
				continue;
			}
			island.$lJ();
			var stackCount = 0;
			stackCount = 1;
			stack[0] = seed;
			seed.$$H |= 1;
			while(stackCount > 0) {
				b = stack[--stackCount];
				island.$oJ(b);
				if((b.$$H & 2) != 0 == false) {
					b.$pH(true);
				}
				if(b.$RE == 0) {
					continue;
				}
				var other;
				var ce = b.$OI;
				while(ce != null) {
					if((ce.$bL.$$H & 4) != 0) {
						ce = ce.next;
						continue;
					}
					if((ce.$bL.$$H & 1) != 0 == true || (ce.$bL.$$H & 32) != 0 == false || (ce.$bL.$$H & 16) != 0 == false) {
						ce = ce.next;
						continue;
					}
					island.$pJ(ce.$bL);
					ce.$bL.$$H |= 4;
					other = ce.$aL;
					if((other.$$H & 1) != 0) {
						ce = ce.next;
						continue;
					}
					stack[stackCount++] = other;
					other.$$H |= 1;
					ce = ce.next;
				}
				var jn = b.$NI;
				while(jn != null) {
					if(jn.$FN.$FM == true) {
						jn = jn.next;
						continue;
					}
					other = jn.$aL;
					if((other.$$H & 32) != 0 == false) {
						jn = jn.next;
						continue;
					}
					island.$qJ(jn.$FN);
					jn.$FN.$FM = true;
					if((other.$$H & 1) != 0) {
						jn = jn.next;
						continue;
					}
					stack[stackCount++] = other;
					other.$$H |= 1;
					jn = jn.next;
				}
			}
			island.$2E(step,this.$hK,this.$iK);
			var _g = 0;
			var _g1 = island.$wJ;
			while(_g < _g1) {
				b = island.$tJ[_g++];
				if(b.$RE == 0) {
					b.$$H &= -2;
				}
			}
			seed = seed.$II;
		}
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var i = _g++;
			if(stack[i] == null) {
				break;
			}
			stack[i] = null;
		}
		b = this.$gK;
		while(b != null) {
			if((b.$$H & 2) != 0 == false || (b.$$H & 32) != 0 == false) {
				b = b.$II;
				continue;
			}
			if(b.$RE == 0) {
				b = b.$II;
				continue;
			}
			b.$7H();
			b = b.$II;
		}
		this.$eK.$7I();
	}
	,$mJ: function(step) {
		var fA;
		var fB;
		var bA;
		var bB;
		var cEdge;
		var island = this.$fK;
		island.$jE(this.$wJ,32,32,null,this.$eK.$BJ,this.$sJ);
		var queue = $CEB.$rK;
		var b = this.$gK;
		while(b != null) {
			b.$$H &= -2;
			b.$BI.$BH = 0.0;
			b = b.$II;
		}
		var c = this.$OI;
		while(c != null) {
			c.$$H &= -13;
			c = c.$II;
		}
		var j = this.$NI;
		while(j != null) {
			j.$FM = false;
			j = j.$II;
		}
		while(true) {
			var minContact = null;
			var minTOI = 1.0;
			c = this.$OI;
			while(c != null) {
				if((c.$$H & 1) != 0 == true || (c.$$H & 32) != 0 == false || (c.$$H & 2) != 0 == false) {
					c = c.$II;
					continue;
				}
				var toi = 1.0;
				if((c.$$H & 8) != 0) {
					toi = c.$BL;
				} else {
					fA = c.$9K;
					fB = c.$$K;
					bA = fA.$cJ;
					bB = fB.$cJ;
					if((bA.$RE != 2 || (bA.$$H & 2) != 0 == false) && (bB.$RE != 2 || (bB.$$H & 2) != 0 == false)) {
						c = c.$II;
						continue;
					}
					var t0 = bA.$BI.$BH;
					if(bA.$BI.$BH < bB.$BI.$BH) {
						t0 = bB.$BI.$BH;
						bA.$BI.$8G(t0);
					} else if(bB.$BI.$BH < bA.$BI.$BH) {
						t0 = bA.$BI.$BH;
						bB.$BI.$8G(t0);
					}
					toi = c.$6K(bA.$BI,bB.$BI);
					if(toi > 0.0 && toi < 1.0) {
						toi = (1.0 - toi) * t0 + toi;
						if(toi > 1) {
							toi = 1;
						}
					}
					c.$BL = toi;
					c.$$H |= 8;
				}
				if(2.2250738585072014e-308 < toi && toi < minTOI) {
					minContact = c;
					minTOI = toi;
				}
				c = c.$II;
			}
			if(minContact == null || 1. < minTOI) {
				break;
			}
			fA = minContact.$9K;
			fB = minContact.$$K;
			bA = fA.$cJ;
			bB = fB.$cJ;
			$CEB.$oK.$kB(bA.$BI);
			$CEB.$pK.$kB(bB.$BI);
			bA.$8G(minTOI);
			bB.$8G(minTOI);
			minContact.$5K(this.$eK.$BJ);
			minContact.$$H &= -9;
			if((minContact.$$H & 1) != 0 == true || (minContact.$$H & 32) != 0 == false) {
				bA.$BI.$kB($CEB.$oK);
				bB.$BI.$kB($CEB.$pK);
				bA.$8H();
				bB.$8H();
				continue;
			}
			if((minContact.$$H & 16) != 0 == false) {
				continue;
			}
			var seed = bA;
			if(seed.$RE != 2) {
				seed = bB;
			}
			island.$lJ();
			var queueStart = 0;
			var queueSize = 0;
			queueSize = 1;
			queue[0] = seed;
			seed.$$H |= 1;
			while(queueSize > 0) {
				b = queue[queueStart++];
				--queueSize;
				island.$oJ(b);
				if((b.$$H & 2) != 0 == false) {
					b.$pH(true);
				}
				if(b.$RE != 2) {
					continue;
				}
				cEdge = b.$OI;
				var other;
				while(cEdge != null) {
					if(island.$_I == island.$zJ) {
						cEdge = cEdge.next;
						break;
					}
					if((cEdge.$bL.$$H & 4) != 0) {
						cEdge = cEdge.next;
						continue;
					}
					if((cEdge.$bL.$$H & 1) != 0 == true || (cEdge.$bL.$$H & 32) != 0 == false || (cEdge.$bL.$$H & 16) != 0 == false) {
						cEdge = cEdge.next;
						continue;
					}
					island.$pJ(cEdge.$bL);
					cEdge.$bL.$$H |= 4;
					other = cEdge.$aL;
					if((other.$$H & 1) != 0) {
						cEdge = cEdge.next;
						continue;
					}
					if(other.$RE != 0) {
						other.$8G(minTOI);
						other.$pH(true);
					}
					queue[queueStart + queueSize] = other;
					++queueSize;
					other.$$H |= 1;
					cEdge = cEdge.next;
				}
				var jEdge = b.$NI;
				while(jEdge != null) {
					if(island.$xJ == island.$0J) {
						jEdge = jEdge.next;
						continue;
					}
					if(jEdge.$FN.$FM == true) {
						jEdge = jEdge.next;
						continue;
					}
					other = jEdge.$aL;
					if((other.$$H & 32) != 0 == false) {
						jEdge = jEdge.next;
						continue;
					}
					island.$qJ(jEdge.$FN);
					jEdge.$FN.$FM = true;
					if((other.$$H & 1) != 0) {
						jEdge = jEdge.next;
						continue;
					}
					if(other.$RE != 0) {
						other.$8G(minTOI);
						other.$pH(true);
					}
					queue[queueStart + queueSize] = other;
					++queueSize;
					other.$$H |= 1;
					jEdge = jEdge.next;
				}
			}
			var subStep = $CEB.$qK;
			subStep.$7J = false;
			subStep.$2J = (1.0 - minTOI) * step.$2J;
			subStep.$3J = 1.0 / subStep.$2J;
			subStep.$4J = 0.0;
			subStep.$5J = step.$5J;
			subStep.$6J = step.$6J;
			island.$mJ(subStep);
			var _g = 0;
			var _g1 = island.$wJ;
			while(_g < _g1) {
				b = island.$tJ[_g++];
				b.$$H &= -2;
				if((b.$$H & 2) != 0 == false) {
					continue;
				}
				if(b.$RE != 2) {
					continue;
				}
				b.$7H();
				cEdge = b.$OI;
				while(cEdge != null) {
					cEdge.$bL.$$H &= -9;
					cEdge = cEdge.next;
				}
			}
			var _g2 = 0;
			var _g3 = island.$_I;
			while(_g2 < _g3) {
				c = island.$uJ[_g2++];
				c.$$H &= -13;
			}
			var _g4 = 0;
			var _g5 = island.$xJ;
			while(_g4 < _g5) {
				j = island.$vJ[_g4++];
				j.$FM = false;
			}
			this.$eK.$7I();
		}
	}
	,__class__: $CEB
};
var $CFB = function() {
	this.$7K = new $CJB();
	this.$8K = new $CJB();
	this.$_K = new $Ce();
	this.$AL = new $Ce();
};
$hxClasses["$CFB"] = $CFB;
$CFB.__name__ = "$CFB";
$CFB.prototype = {
	$4K: function() {
		this.$$H |= 64;
	}
	,$IE: function(fixtureA,fixtureB) {
		this.$$H = 32;
		if(fixtureA == null || fixtureB == null) {
			this.$9K = null;
			this.$$K = null;
			return;
		}
		if(fixtureA.$iJ || fixtureB.$iJ) {
			this.$$H |= 1;
		}
		var bodyA = fixtureA.$cJ;
		var bodyB = fixtureB.$cJ;
		if(bodyA.$RE != 2 || (bodyA.$$H & 8) != 0 || bodyB.$RE != 2 || (bodyB.$$H & 8) != 0) {
			this.$$H |= 2;
		}
		this.$9K = fixtureA;
		this.$$K = fixtureB;
		this.$_K.$SE = 0;
		this.$HI = null;
		this.$II = null;
		this.$7K.$bL = null;
		this.$7K.$cL = null;
		this.$7K.next = null;
		this.$7K.$aL = null;
		this.$8K.$bL = null;
		this.$8K.$cL = null;
		this.$8K.next = null;
		this.$8K.$aL = null;
	}
	,$5K: function(listener) {
		var tManifold = this.$AL;
		this.$AL = this.$_K;
		this.$_K = tManifold;
		this.$$H |= 32;
		var touching = false;
		var wasTouching = (this.$$H & 16) != 0;
		var bodyA = this.$9K.$cJ;
		var bodyB = this.$$K.$cJ;
		var aabbOverlap = this.$9K.$aJ.$7B(this.$$K.$aJ);
		if((this.$$H & 1) != 0) {
			if(aabbOverlap) {
				touching = $Cs.$7B(this.$9K.$dJ,bodyA.$AI,this.$$K.$dJ,bodyB.$AI);
			}
			this.$_K.$SE = 0;
		} else {
			if(bodyA.$RE != 2 || (bodyA.$$H & 8) != 0 || bodyB.$RE != 2 || (bodyB.$$H & 8) != 0) {
				this.$$H |= 2;
			} else {
				this.$$H &= -3;
			}
			if(aabbOverlap) {
				this.$kE();
				touching = this.$_K.$SE > 0;
				var _g = 0;
				var _g1 = this.$_K.$SE;
				while(_g < _g1) {
					var mp2 = this.$_K.$OE[_g++];
					mp2.$WE = 0.0;
					mp2.$XE = 0.0;
					var id2 = mp2.$YE;
					var _g2 = 0;
					var _g3 = this.$AL.$SE;
					while(_g2 < _g3) {
						var mp1 = this.$AL.$OE[_g2++];
						if(mp1.$YE.$VC == id2.$VC) {
							mp2.$WE = mp1.$WE;
							mp2.$XE = mp1.$XE;
							break;
						}
					}
				}
			} else {
				this.$_K.$SE = 0;
			}
			if(touching != wasTouching) {
				bodyA.$pH(true);
				bodyB.$pH(true);
			}
		}
		if(touching) {
			this.$$H |= 16;
		} else {
			this.$$H &= -17;
		}
		if(wasTouching == false && touching == true) {
			listener.$1I(this);
		}
		if(wasTouching == true && touching == false) {
			listener.$2I(this);
		}
		if((this.$$H & 1) == 0) {
			listener.$3I(this,this.$AL);
		}
	}
	,$kE: function() {
	}
	,$6K: function(sweepA,sweepB) {
		$CFB.$IL.$dD.$kB(this.$9K.$dJ);
		$CFB.$IL.$eD.$kB(this.$$K.$dJ);
		$CFB.$IL.$tE = sweepA;
		$CFB.$IL.$uE = sweepB;
		$CFB.$IL.$vE = 0.005;
		return $Cq.$GF($CFB.$IL);
	}
	,__class__: $CFB
};
var $CGB = function() {
	$CFB.call(this);
};
$hxClasses["$CGB"] = $CGB;
$CGB.__name__ = "$CGB";
$CGB.$XJ = function(allocator) {
	return new $CGB();
};
$CGB.$8I = function(contact,allocator) {
};
$CGB.__super__ = $CFB;
$CGB.prototype = $extend($CFB.prototype,{
	$IE: function(fixtureA,fixtureB) {
		$CFB.prototype.$IE.call(this,fixtureA,fixtureB);
	}
	,$kE: function() {
		$CR.$0C(this.$_K,this.$9K.$dJ,this.$9K.$cJ.$AI,this.$$K.$dJ,this.$$K.$cJ.$AI);
	}
	,__class__: $CGB
});
var $CHB = function() {
	this.$KL = new $CO();
	this.$LL = new $CO();
	this.$6C = new $CO();
	this.$ML = new $Cp();
	this.$NL = new $Cp();
	this.$JL = [];
	this.$JL[0] = new $CIB();
	this.$JL[1] = new $CIB();
};
$hxClasses["$CHB"] = $CHB;
$CHB.__name__ = "$CHB";
$CHB.prototype = {
	__class__: $CHB
};
var $CIB = function() {
	this.$LL = new $CO();
	this.$TL = new $CO();
	this.$UL = new $CO();
};
$hxClasses["$CIB"] = $CIB;
$CIB.__name__ = "$CIB";
$CIB.prototype = {
	__class__: $CIB
};
var $CJB = function() {
};
$hxClasses["$CJB"] = $CJB;
$CJB.__name__ = "$CJB";
$CJB.prototype = {
	__class__: $CJB
};
var $CKB = function(allocator) {
	this.$DJ = allocator;
	this.$eL();
};
$hxClasses["$CKB"] = $CKB;
$CKB.__name__ = "$CKB";
$CKB.prototype = {
	$dL: function(createFcn,destroyFcn,type1,type2) {
		var index1 = type1;
		var index2 = type2;
		this.$fL[index1][index2].$hL = createFcn;
		this.$fL[index1][index2].$iL = destroyFcn;
		this.$fL[index1][index2].$jL = true;
		if(type1 != type2) {
			this.$fL[index2][index1].$hL = createFcn;
			this.$fL[index2][index1].$iL = destroyFcn;
			this.$fL[index2][index1].$jL = false;
		}
	}
	,$eL: function() {
		this.$fL = [];
		this.$fL[0] = [];
		this.$fL[0][0] = new $CLB();
		this.$fL[0][1] = new $CLB();
		this.$fL[0][2] = new $CLB();
		this.$fL[1] = [];
		this.$fL[1][0] = new $CLB();
		this.$fL[1][1] = new $CLB();
		this.$fL[1][2] = new $CLB();
		this.$fL[2] = [];
		this.$fL[2][0] = new $CLB();
		this.$fL[2][1] = new $CLB();
		this.$fL[2][2] = new $CLB();
		this.$dL($CGB.$XJ,$CGB.$8I,0,0);
		this.$dL($CPB.$XJ,$CPB.$8I,1,0);
		this.$dL($CRB.$XJ,$CRB.$8I,1,1);
		this.$dL($COB.$XJ,$COB.$8I,2,0);
		this.$dL($CQB.$XJ,$CQB.$8I,1,2);
	}
	,$XJ: function(fixtureA,fixtureB) {
		var reg = this.$fL[fixtureA.$dJ.$RE][fixtureB.$dJ.$RE];
		var c;
		if(reg.$kL != null) {
			c = reg.$kL;
			reg.$kL = c.$II;
			c.$IE(fixtureA,fixtureB);
			return c;
		}
		var createFcn = reg.$hL;
		if(createFcn != null) {
			if(reg.$jL) {
				c = createFcn(this.$DJ);
				c.$IE(fixtureA,fixtureB);
				return c;
			} else {
				c = createFcn(this.$DJ);
				c.$IE(fixtureB,fixtureA);
				return c;
			}
		} else {
			return null;
		}
	}
	,$8I: function(contact) {
		if(contact.$_K.$SE > 0) {
			contact.$9K.$cJ.$pH(true);
			contact.$$K.$cJ.$pH(true);
		}
		var reg = this.$fL[contact.$9K.$dJ.$RE][contact.$$K.$dJ.$RE];
		contact.$II = reg.$kL;
		reg.$kL = contact;
		reg.$iL(contact,this.$DJ);
	}
	,__class__: $CKB
};
var $CLB = function() {
};
$hxClasses["$CLB"] = $CLB;
$CLB.__name__ = "$CLB";
$CLB.prototype = {
	__class__: $CLB
};
var $CMB = function() {
	this.$IF = new $CO();
	this.$mL = [];
	this.$OE = [];
	this.$OE[0] = new $CO();
	this.$OE[1] = new $CO();
};
$hxClasses["$CMB"] = $CMB;
$CMB.__name__ = "$CMB";
$CMB.prototype = {
	$jE: function(cc) {
		var clipPointX;
		var clipPointY;
		var tMat;
		var tVec;
		var planePointX;
		var planePointY;
		switch(cc.$hI) {
		case 0:
			tMat = cc.$OL.$AI.$cE;
			tVec = cc.$LL;
			var pointAX = cc.$OL.$AI.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			var pointAY = cc.$OL.$AI.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			tMat = cc.$PL.$AI.$cE;
			tVec = cc.$JL[0].$LL;
			var pointBX = cc.$PL.$AI.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			var pointBY = cc.$PL.$AI.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			var dX = pointBX - pointAX;
			var dY = pointBY - pointAY;
			var d2 = dX * dX + dY * dY;
			if(d2 > 0.) {
				var d = Math.sqrt(d2);
				this.$IF.$QC = dX / d;
				this.$IF.$RC = dY / d;
			} else {
				this.$IF.$QC = 1.0;
				this.$IF.$RC = 0.0;
			}
			this.$OE[0].$QC = 0.5 * (pointAX + pointBX);
			this.$OE[0].$RC = 0.5 * (pointAY + pointBY);
			this.$mL[0] = dX * this.$IF.$QC + dY * this.$IF.$RC - cc.$QL;
			break;
		case 1:
			tMat = cc.$OL.$AI.$cE;
			tVec = cc.$KL;
			this.$IF.$QC = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
			this.$IF.$RC = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
			tMat = cc.$OL.$AI.$cE;
			tVec = cc.$LL;
			planePointX = cc.$OL.$AI.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			planePointY = cc.$OL.$AI.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			tMat = cc.$PL.$AI.$cE;
			var _g = 0;
			var _g1 = cc.$RL;
			while(_g < _g1) {
				var i = _g++;
				tVec = cc.$JL[i].$LL;
				clipPointX = cc.$PL.$AI.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
				clipPointY = cc.$PL.$AI.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
				this.$mL[i] = (clipPointX - planePointX) * this.$IF.$QC + (clipPointY - planePointY) * this.$IF.$RC - cc.$QL;
				this.$OE[i].$QC = clipPointX;
				this.$OE[i].$RC = clipPointY;
			}
			break;
		case 2:
			tMat = cc.$PL.$AI.$cE;
			tVec = cc.$KL;
			this.$IF.$QC = tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC;
			this.$IF.$RC = tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC;
			tMat = cc.$PL.$AI.$cE;
			tVec = cc.$LL;
			planePointX = cc.$PL.$AI.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
			planePointY = cc.$PL.$AI.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
			tMat = cc.$OL.$AI.$cE;
			var _g = 0;
			var _g1 = cc.$RL;
			while(_g < _g1) {
				var i = _g++;
				tVec = cc.$JL[i].$LL;
				clipPointX = cc.$OL.$AI.$4C.$QC + (tMat.$3E.$QC * tVec.$QC + tMat.$4E.$QC * tVec.$RC);
				clipPointY = cc.$OL.$AI.$4C.$RC + (tMat.$3E.$RC * tVec.$QC + tMat.$4E.$RC * tVec.$RC);
				this.$mL[i] = (clipPointX - planePointX) * this.$IF.$QC + (clipPointY - planePointY) * this.$IF.$RC - cc.$QL;
				this.$OE[i].$kB(clipPointX,clipPointY);
			}
			this.$IF.$QC *= -1;
			this.$IF.$RC *= -1;
			break;
		}
	}
	,__class__: $CMB
};
var $CNB = function() {
	this.$tL = new $CDB();
	this.$uL = [];
};
$hxClasses["$CNB"] = $CNB;
$CNB.__name__ = "$CNB";
$CNB.prototype = {
	$jE: function(step,contacts,contactCount,allocator) {
		var contact;
		this.$tL.$kB(step);
		this.$DJ = allocator;
		this.$vL = contactCount;
		while(this.$uL.length < this.$vL) this.$uL[this.$uL.length] = new $CHB();
		var _g = 0;
		while(_g < contactCount) {
			var i = _g++;
			contact = contacts[i];
			var fixtureA = contact.$9K;
			var fixtureB = contact.$$K;
			var radiusA = fixtureA.$dJ.$qD;
			var radiusB = fixtureB.$dJ.$qD;
			var bodyA = fixtureA.$cJ;
			var bodyB = fixtureB.$cJ;
			var manifold = contact.$_K;
			var friction = $Cy.$YG(fixtureA.$eJ,fixtureB.$eJ);
			var restitution = $Cy.$ZG(fixtureA.$fJ,fixtureB.$fJ);
			var vAX = bodyA.$CI.$QC;
			var vAY = bodyA.$CI.$RC;
			var vBX = bodyB.$CI.$QC;
			var vBY = bodyB.$CI.$RC;
			var wA = bodyA.$DI;
			var wB = bodyB.$DI;
			$CNB.$wL.$jE(manifold,bodyA.$AI,radiusA,bodyB.$AI,radiusB);
			var normalX = $CNB.$wL.$IF.$QC;
			var normalY = $CNB.$wL.$IF.$RC;
			var cc = this.$uL[i];
			cc.$OL = bodyA;
			cc.$PL = bodyB;
			cc.$SL = manifold;
			cc.$6C.$QC = normalX;
			cc.$6C.$RC = normalY;
			cc.$RL = manifold.$SE;
			cc.$8C = friction;
			cc.$9C = restitution;
			cc.$KL.$QC = manifold.$PE.$QC;
			cc.$KL.$RC = manifold.$PE.$RC;
			cc.$LL.$QC = manifold.$QE.$QC;
			cc.$LL.$RC = manifold.$QE.$RC;
			cc.$QL = radiusA + radiusB;
			cc.$hI = manifold.$RE;
			var _g1 = 0;
			var _g2 = cc.$RL;
			while(_g1 < _g2) {
				var k = _g1++;
				var cp = manifold.$OE[k];
				var ccp = cc.$JL[k];
				ccp.$VL = cp.$WE;
				ccp.$WL = cp.$XE;
				ccp.$LL.$CC(cp.$QE);
				var rAX = ccp.$TL.$QC = $CNB.$wL.$OE[k].$QC - bodyA.$BI.$_G.$QC;
				var rAY = ccp.$TL.$RC = $CNB.$wL.$OE[k].$RC - bodyA.$BI.$_G.$RC;
				var rBX = ccp.$UL.$QC = $CNB.$wL.$OE[k].$QC - bodyB.$BI.$_G.$QC;
				var rBY = ccp.$UL.$RC = $CNB.$wL.$OE[k].$RC - bodyB.$BI.$_G.$RC;
				var rnA = rAX * normalY - rAY * normalX;
				var rnB = rBX * normalY - rBY * normalX;
				rnA *= rnA;
				rnB *= rnB;
				ccp.$ML = 1.0 / (bodyA.$QI + bodyB.$QI + bodyA.$SI * rnA + bodyB.$SI * rnB);
				var kEqualized = bodyA.$PI * bodyA.$QI + bodyB.$PI * bodyB.$QI;
				kEqualized += bodyA.$PI * bodyA.$SI * rnA + bodyB.$PI * bodyB.$SI * rnB;
				ccp.$YL = 1.0 / kEqualized;
				var tangentY = -normalX;
				var rtA = rAX * tangentY - rAY * normalY;
				var rtB = rBX * tangentY - rBY * normalY;
				rtA *= rtA;
				rtB *= rtB;
				ccp.$XL = 1.0 / (bodyA.$QI + bodyB.$QI + bodyA.$SI * rtA + bodyB.$SI * rtB);
				ccp.$ZL = 0.0;
				var vRel = cc.$6C.$QC * (vBX + -wB * rBY - vAX - -wA * rAY) + cc.$6C.$RC * (vBY + wB * rBX - vAY - wA * rAX);
				if(vRel < -1.) {
					ccp.$ZL += -cc.$9C * vRel;
				}
			}
			if(cc.$RL == 2) {
				var ccp1 = cc.$JL[0];
				var ccp2 = cc.$JL[1];
				var invMassA = bodyA.$QI;
				var invIA = bodyA.$SI;
				var invMassB = bodyB.$QI;
				var invIB = bodyB.$SI;
				var rn1A = ccp1.$TL.$QC * normalY - ccp1.$TL.$RC * normalX;
				var rn1B = ccp1.$UL.$QC * normalY - ccp1.$UL.$RC * normalX;
				var rn2A = ccp2.$TL.$QC * normalY - ccp2.$TL.$RC * normalX;
				var rn2B = ccp2.$UL.$QC * normalY - ccp2.$UL.$RC * normalX;
				var k11 = invMassA + invMassB + invIA * rn1A * rn1A + invIB * rn1B * rn1B;
				var k22 = invMassA + invMassB + invIA * rn2A * rn2A + invIB * rn2B * rn2B;
				var k12 = invMassA + invMassB + invIA * rn1A * rn2A + invIB * rn1B * rn2B;
				if(k11 * k11 < 100.0 * (k11 * k22 - k12 * k12)) {
					cc.$NL.$3E.$kB(k11,k12);
					cc.$NL.$4E.$kB(k12,k22);
					cc.$NL.$1E(cc.$ML);
				} else {
					cc.$RL = 1;
				}
			}
		}
	}
	,$pL: function(step) {
		var _g = 0;
		var _g1 = this.$vL;
		while(_g < _g1) {
			var c = this.$uL[_g++];
			var bodyA = c.$OL;
			var bodyB = c.$PL;
			var invMassA = bodyA.$QI;
			var invIA = bodyA.$SI;
			var invMassB = bodyB.$QI;
			var invIB = bodyB.$SI;
			var normalX = c.$6C.$QC;
			var normalY = c.$6C.$RC;
			var tangentY = -normalX;
			var tCount;
			if(step.$7J) {
				tCount = c.$RL;
				var _g2 = 0;
				var _g3 = tCount;
				while(_g2 < _g3) {
					var ccp = c.$JL[_g2++];
					ccp.$VL *= step.$4J;
					ccp.$WL *= step.$4J;
					var PX = ccp.$VL * normalX + ccp.$WL * normalY;
					var PY = ccp.$VL * normalY + ccp.$WL * tangentY;
					bodyA.$DI -= invIA * (ccp.$TL.$QC * PY - ccp.$TL.$RC * PX);
					bodyA.$CI.$QC -= invMassA * PX;
					bodyA.$CI.$RC -= invMassA * PY;
					bodyB.$DI += invIB * (ccp.$UL.$QC * PY - ccp.$UL.$RC * PX);
					bodyB.$CI.$QC += invMassB * PX;
					bodyB.$CI.$RC += invMassB * PY;
				}
			} else {
				tCount = c.$RL;
				var _g4 = 0;
				var _g5 = tCount;
				while(_g4 < _g5) {
					var ccp2 = c.$JL[_g4++];
					ccp2.$VL = 0.0;
					ccp2.$WL = 0.0;
				}
			}
		}
	}
	,$qL: function() {
		var ccp;
		var dvX;
		var dvY;
		var vn;
		var vt;
		var lambda;
		var maxFriction;
		var newImpulse;
		var PX;
		var PY;
		var dX;
		var dY;
		var P1X;
		var P1Y;
		var P2X;
		var P2Y;
		var tMat;
		var _g = 0;
		var _g1 = this.$vL;
		while(_g < _g1) {
			var c = this.$uL[_g++];
			var bodyA = c.$OL;
			var bodyB = c.$PL;
			var wA = bodyA.$DI;
			var wB = bodyB.$DI;
			var vA = bodyA.$CI;
			var vB = bodyB.$CI;
			var invMassA = bodyA.$QI;
			var invIA = bodyA.$SI;
			var invMassB = bodyB.$QI;
			var invIB = bodyB.$SI;
			var normalX = c.$6C.$QC;
			var normalY = c.$6C.$RC;
			var tangentY = -normalX;
			var friction = c.$8C;
			var _g2 = 0;
			var _g3 = c.$RL;
			while(_g2 < _g3) {
				ccp = c.$JL[_g2++];
				dvX = vB.$QC - wB * ccp.$UL.$RC - vA.$QC + wA * ccp.$TL.$RC;
				dvY = vB.$RC + wB * ccp.$UL.$QC - vA.$RC - wA * ccp.$TL.$QC;
				vt = dvX * normalY + dvY * tangentY;
				lambda = ccp.$XL * -vt;
				maxFriction = friction * ccp.$VL;
				newImpulse = $Cz.$sG(ccp.$WL + lambda,-maxFriction,maxFriction);
				lambda = newImpulse - ccp.$WL;
				PX = lambda * normalY;
				PY = lambda * tangentY;
				vA.$QC -= invMassA * PX;
				vA.$RC -= invMassA * PY;
				wA -= invIA * (ccp.$TL.$QC * PY - ccp.$TL.$RC * PX);
				vB.$QC += invMassB * PX;
				vB.$RC += invMassB * PY;
				wB += invIB * (ccp.$UL.$QC * PY - ccp.$UL.$RC * PX);
				ccp.$WL = newImpulse;
			}
			if(c.$RL == 1) {
				ccp = c.$JL[0];
				dvX = vB.$QC + -wB * ccp.$UL.$RC - vA.$QC - -wA * ccp.$TL.$RC;
				dvY = vB.$RC + wB * ccp.$UL.$QC - vA.$RC - wA * ccp.$TL.$QC;
				vn = dvX * normalX + dvY * normalY;
				lambda = -ccp.$ML * (vn - ccp.$ZL);
				newImpulse = ccp.$VL + lambda;
				if(!(newImpulse > 0)) {
					newImpulse = 0.0;
				}
				lambda = newImpulse - ccp.$VL;
				PX = lambda * normalX;
				PY = lambda * normalY;
				vA.$QC -= invMassA * PX;
				vA.$RC -= invMassA * PY;
				wA -= invIA * (ccp.$TL.$QC * PY - ccp.$TL.$RC * PX);
				vB.$QC += invMassB * PX;
				vB.$RC += invMassB * PY;
				wB += invIB * (ccp.$UL.$QC * PY - ccp.$UL.$RC * PX);
				ccp.$VL = newImpulse;
			} else {
				var cp1 = c.$JL[0];
				var cp2 = c.$JL[1];
				var aX = cp1.$VL;
				var aY = cp2.$VL;
				var vn1 = (vB.$QC - wB * cp1.$UL.$RC - vA.$QC + wA * cp1.$TL.$RC) * normalX + (vB.$RC + wB * cp1.$UL.$QC - vA.$RC - wA * cp1.$TL.$QC) * normalY;
				var vn2 = (vB.$QC - wB * cp2.$UL.$RC - vA.$QC + wA * cp2.$TL.$RC) * normalX + (vB.$RC + wB * cp2.$UL.$QC - vA.$RC - wA * cp2.$TL.$QC) * normalY;
				var bX = vn1 - cp1.$ZL;
				var bY = vn2 - cp2.$ZL;
				tMat = c.$NL;
				bX -= tMat.$3E.$QC * aX + tMat.$4E.$QC * aY;
				bY -= tMat.$3E.$RC * aX + tMat.$4E.$RC * aY;
				while(true) {
					tMat = c.$ML;
					var xX = -(tMat.$3E.$QC * bX + tMat.$4E.$QC * bY);
					var xY = -(tMat.$3E.$RC * bX + tMat.$4E.$RC * bY);
					if(xX >= 0.0 && xY >= 0.0) {
						dX = xX - aX;
						dY = xY - aY;
						P1X = dX * normalX;
						P1Y = dX * normalY;
						P2X = dY * normalX;
						P2Y = dY * normalY;
						vA.$QC -= invMassA * (P1X + P2X);
						vA.$RC -= invMassA * (P1Y + P2Y);
						wA -= invIA * (cp1.$TL.$QC * P1Y - cp1.$TL.$RC * P1X + cp2.$TL.$QC * P2Y - cp2.$TL.$RC * P2X);
						vB.$QC += invMassB * (P1X + P2X);
						vB.$RC += invMassB * (P1Y + P2Y);
						wB += invIB * (cp1.$UL.$QC * P1Y - cp1.$UL.$RC * P1X + cp2.$UL.$QC * P2Y - cp2.$UL.$RC * P2X);
						cp1.$VL = xX;
						cp2.$VL = xY;
						break;
					}
					xX = -cp1.$ML * bX;
					xY = 0.0;
					vn1 = 0.0;
					vn2 = c.$NL.$3E.$RC * xX + bY;
					if(xX >= 0.0 && vn2 >= 0.0) {
						dX = xX - aX;
						dY = 0.0 - aY;
						P1X = dX * normalX;
						P1Y = dX * normalY;
						P2X = dY * normalX;
						P2Y = dY * normalY;
						vA.$QC -= invMassA * (P1X + P2X);
						vA.$RC -= invMassA * (P1Y + P2Y);
						wA -= invIA * (cp1.$TL.$QC * P1Y - cp1.$TL.$RC * P1X + cp2.$TL.$QC * P2Y - cp2.$TL.$RC * P2X);
						vB.$QC += invMassB * (P1X + P2X);
						vB.$RC += invMassB * (P1Y + P2Y);
						wB += invIB * (cp1.$UL.$QC * P1Y - cp1.$UL.$RC * P1X + cp2.$UL.$QC * P2Y - cp2.$UL.$RC * P2X);
						cp1.$VL = xX;
						cp2.$VL = 0.0;
						break;
					}
					xX = 0.0;
					xY = -cp2.$ML * bY;
					vn1 = c.$NL.$4E.$QC * xY + bX;
					vn2 = 0.0;
					if(xY >= 0.0 && vn1 >= 0.0) {
						dX = 0.0 - aX;
						dY = xY - aY;
						P1X = dX * normalX;
						P1Y = dX * normalY;
						P2X = dY * normalX;
						P2Y = dY * normalY;
						vA.$QC -= invMassA * (P1X + P2X);
						vA.$RC -= invMassA * (P1Y + P2Y);
						wA -= invIA * (cp1.$TL.$QC * P1Y - cp1.$TL.$RC * P1X + cp2.$TL.$QC * P2Y - cp2.$TL.$RC * P2X);
						vB.$QC += invMassB * (P1X + P2X);
						vB.$RC += invMassB * (P1Y + P2Y);
						wB += invIB * (cp1.$UL.$QC * P1Y - cp1.$UL.$RC * P1X + cp2.$UL.$QC * P2Y - cp2.$UL.$RC * P2X);
						cp1.$VL = 0.0;
						cp2.$VL = xY;
						break;
					}
					xX = 0.0;
					xY = 0.0;
					vn1 = bX;
					vn2 = bY;
					if(vn1 >= 0.0 && vn2 >= 0.0) {
						dX = 0.0 - aX;
						dY = 0.0 - aY;
						P1X = dX * normalX;
						P1Y = dX * normalY;
						P2X = dY * normalX;
						P2Y = dY * normalY;
						vA.$QC -= invMassA * (P1X + P2X);
						vA.$RC -= invMassA * (P1Y + P2Y);
						wA -= invIA * (cp1.$TL.$QC * P1Y - cp1.$TL.$RC * P1X + cp2.$TL.$QC * P2Y - cp2.$TL.$RC * P2X);
						vB.$QC += invMassB * (P1X + P2X);
						vB.$RC += invMassB * (P1Y + P2Y);
						wB += invIB * (cp1.$UL.$QC * P1Y - cp1.$UL.$RC * P1X + cp2.$UL.$QC * P2Y - cp2.$UL.$RC * P2X);
						cp1.$VL = 0.0;
						cp2.$VL = 0.0;
						break;
					}
					break;
				}
			}
			bodyA.$DI = wA;
			bodyB.$DI = wB;
		}
	}
	,$rL: function() {
		var _g = 0;
		var _g1 = this.$vL;
		while(_g < _g1) {
			var c = this.$uL[_g++];
			var m = c.$SL;
			var _g2 = 0;
			var _g3 = c.$RL;
			while(_g2 < _g3) {
				var j = _g2++;
				var point1 = m.$OE[j];
				var point2 = c.$JL[j];
				point1.$WE = point2.$VL;
				point1.$XE = point2.$WL;
			}
		}
	}
	,$sL: function(baumgarte) {
		var minSeparation = 0.0;
		var _g = 0;
		var _g1 = this.$vL;
		while(_g < _g1) {
			var c = this.$uL[_g++];
			var bodyA = c.$OL;
			var bodyB = c.$PL;
			var invMassA = bodyA.$PI * bodyA.$QI;
			var invIA = bodyA.$PI * bodyA.$SI;
			var invMassB = bodyB.$PI * bodyB.$QI;
			var invIB = bodyB.$PI * bodyB.$SI;
			$CNB.$xL.$jE(c);
			var normal = $CNB.$xL.$IF;
			var _g2 = 0;
			var _g3 = c.$RL;
			while(_g2 < _g3) {
				var j = _g2++;
				var point = $CNB.$xL.$OE[j];
				var separation = $CNB.$xL.$mL[j];
				var rAX = point.$QC - bodyA.$BI.$_G.$QC;
				var rAY = point.$RC - bodyA.$BI.$_G.$RC;
				var rBX = point.$QC - bodyB.$BI.$_G.$QC;
				var rBY = point.$RC - bodyB.$BI.$_G.$RC;
				if(!(minSeparation < separation)) {
					minSeparation = separation;
				}
				var impulse = -c.$JL[j].$YL * $Cz.$sG(baumgarte * (separation + 0.005),-0.2,0.0);
				var PX = impulse * normal.$QC;
				var PY = impulse * normal.$RC;
				bodyA.$BI.$_G.$QC -= invMassA * PX;
				bodyA.$BI.$_G.$RC -= invMassA * PY;
				bodyA.$BI.$TD -= invIA * (rAX * PY - rAY * PX);
				bodyA.$8H();
				bodyB.$BI.$_G.$QC += invMassB * PX;
				bodyB.$BI.$_G.$RC += invMassB * PY;
				bodyB.$BI.$TD += invIB * (rBX * PY - rBY * PX);
				bodyB.$8H();
			}
		}
		return minSeparation > -0.0075;
	}
	,__class__: $CNB
};
var $COB = function() {
	$CFB.call(this);
};
$hxClasses["$COB"] = $COB;
$COB.__name__ = "$COB";
$COB.$XJ = function(allocator) {
	return new $COB();
};
$COB.$8I = function(contact,allocator) {
};
$COB.__super__ = $CFB;
$COB.prototype = $extend($CFB.prototype,{
	$IE: function(fixtureA,fixtureB) {
		$CFB.prototype.$IE.call(this,fixtureA,fixtureB);
	}
	,$kE: function() {
		this.$yL(this.$_K,this.$9K.$dJ,this.$9K.$cJ.$AI,this.$$K.$dJ,this.$$K.$cJ.$AI);
	}
	,$yL: function(manifold,edge,xf1,circle,xf2) {
	}
	,__class__: $COB
});
var $CPB = function() {
	$CFB.call(this);
};
$hxClasses["$CPB"] = $CPB;
$CPB.__name__ = "$CPB";
$CPB.$XJ = function(allocator) {
	return new $CPB();
};
$CPB.$8I = function(contact,allocator) {
};
$CPB.__super__ = $CFB;
$CPB.prototype = $extend($CFB.prototype,{
	$IE: function(fixtureA,fixtureB) {
		$CFB.prototype.$IE.call(this,fixtureA,fixtureB);
	}
	,$kE: function() {
		$CR.$1C(this.$_K,this.$9K.$dJ,this.$9K.$cJ.$AI,this.$$K.$dJ,this.$$K.$cJ.$AI);
	}
	,__class__: $CPB
});
var $CQB = function() {
	$CFB.call(this);
};
$hxClasses["$CQB"] = $CQB;
$CQB.__name__ = "$CQB";
$CQB.$XJ = function(allocator) {
	return new $CQB();
};
$CQB.$8I = function(contact,allocator) {
};
$CQB.__super__ = $CFB;
$CQB.prototype = $extend($CFB.prototype,{
	$IE: function(fixtureA,fixtureB) {
		$CFB.prototype.$IE.call(this,fixtureA,fixtureB);
	}
	,$kE: function() {
		this.$zL(this.$_K,this.$9K.$dJ,this.$9K.$cJ.$AI,this.$$K.$dJ,this.$$K.$cJ.$AI);
	}
	,$zL: function(manifold,polygon,xf1,edge,xf2) {
	}
	,__class__: $CQB
});
var $CRB = function() {
	$CFB.call(this);
};
$hxClasses["$CRB"] = $CRB;
$CRB.__name__ = "$CRB";
$CRB.$XJ = function(allocator) {
	return new $CRB();
};
$CRB.$8I = function(contact,allocator) {
};
$CRB.__super__ = $CFB;
$CRB.prototype = $extend($CFB.prototype,{
	$IE: function(fixtureA,fixtureB) {
		$CFB.prototype.$IE.call(this,fixtureA,fixtureB);
	}
	,$kE: function() {
		$CR.$zC(this.$_K,this.$9K.$dJ,this.$9K.$cJ.$AI,this.$$K.$dJ,this.$$K.$cJ.$AI);
	}
	,__class__: $CRB
});
var $CSB = function() { };
$hxClasses["$CSB"] = $CSB;
$CSB.__name__ = "$CSB";
$CSB.prototype = {
	$RK: function(step) {
	}
	,$0L: function(body) {
		var edge = body.$LI;
		while(edge != null && edge.$1L != this) edge = edge.$6L;
		if(edge.$3L != null) {
			edge.$3L.$4L = edge.$4L;
		}
		if(edge.$4L != null) {
			edge.$4L.$3L = edge.$3L;
		}
		if(edge.$6L != null) {
			edge.$6L.$5L = edge.$5L;
		}
		if(edge.$5L != null) {
			edge.$5L.$6L = edge.$6L;
		}
		if(this.$gK == edge) {
			this.$gK = edge.$4L;
		}
		if(body.$LI == edge) {
			body.$LI = edge.$6L;
		}
		body.$MI--;
		this.$wJ--;
	}
	,__class__: $CSB
};
var $CTB = function() {
};
$hxClasses["$CTB"] = $CTB;
$CTB.__name__ = "$CTB";
$CTB.prototype = {
	__class__: $CTB
};
var $CUB = function(def) {
	this.$BM = new $CdB();
	this.$CM = new $CdB();
	this.$HM = new $CO();
	this.$IM = new $CO();
	this.$RE = def.$hI;
	this.$HI = null;
	this.$II = null;
	this.$DM = def.$OL;
	this.$EM = def.$PL;
	this.$GM = def.$aM;
	this.$FM = false;
	this.$YI = def.$DE;
};
$hxClasses["$CUB"] = $CUB;
$CUB.__name__ = "$CUB";
$CUB.prototype = {
	$pL: function(step) {
	}
	,$qL: function(step) {
	}
	,$rL: function() {
	}
	,$sL: function(baumgarte) {
		return false;
	}
	,__class__: $CUB
};
var $CWB = function() {
	this.$hI = -1;
	this.$DE = null;
	this.$OL = null;
	this.$PL = null;
	this.$aM = false;
};
$hxClasses["$CWB"] = $CWB;
$CWB.__name__ = "$CWB";
$CWB.prototype = {
	__class__: $CWB
};
var $CdB = function() {
};
$hxClasses["$CdB"] = $CdB;
$CdB.__name__ = "$CdB";
$CdB.prototype = {
	__class__: $CdB
};
var $CsB = function() { };
$hxClasses["$CsB"] = $CsB;
$CsB.__name__ = "$CsB";
$CsB.__isInterface__ = true;
$CsB.prototype = {
	__class__: $CsB
};
var $CtB = function() {
	this.$5O = null;
	this.$4O = 0;
	this.next = null;
	this.$pO = null;
};
$hxClasses["$CtB"] = $CtB;
$CtB.__name__ = "$CtB";
$CtB.__interfaces__ = [$CsB];
$CtB.prototype = {
	$rO: function() {
	}
	,$sO: function() {
		if(this.$5O != null) {
			this.$5O.$Ca();
		}
	}
	,$tO: function() {
	}
	,$uO: function() {
	}
	,$vO: function(dt) {
	}
	,$wO: function(message,data) {
		if(this.$5O != null) {
			var messageHandlers = this.$5O.$Aa;
			if(messageHandlers != null) {
				var signal = messageHandlers.h[message];
				if(signal != null && signal.$bb != null) {
					signal.$fb(data);
					return true;
				}
			}
		}
		return false;
	}
	,$yO: function(signal,listener,prioritize) {
		if(prioritize == null) {
			prioritize = false;
		}
		var connection = signal.$eb(listener,prioritize);
		this.$1O(connection);
		return connection;
	}
	,$zO: function(signal,listener,prioritize) {
		if(prioritize == null) {
			prioritize = false;
		}
		var connection = signal.$eb(listener,prioritize);
		this.$1O(connection);
		return connection;
	}
	,$0O: function(signal,listener,prioritize) {
		if(prioritize == null) {
			prioritize = false;
		}
		var connection = signal.$eb(listener,prioritize);
		this.$1O(connection);
		return connection;
	}
	,$1O: function(disposable) {
		if(this.$5O == null) {
			this.$5O = new $CPE();
		}
		if(this.$5O.$Ba == null) {
			this.$5O.$Ba = [];
		}
		this.$5O.$Ba.push(disposable);
	}
	,dispose: function() {
		if(this.$pO != null) {
			this.$pO.$lB(this);
		} else if(this.$5O != null) {
			this.$5O.$Ca();
		}
	}
	,get_entitySlot: function() {
		return -1;
	}
	,$3O: function() {
	}
	,__class__: $CtB
	,__properties__: {get_$qO:"get_$qO"}
};
var $CuB = $hxEnums["$CuB"] = { __ename__:true,__constructs__:null
	,CString: {_hx_name:"CString",_hx_index:0,__enum__:"$CuB",toString:$estr}
	,CBool: {_hx_name:"CBool",_hx_index:1,__enum__:"$CuB",toString:$estr}
	,CFloat: {_hx_name:"CFloat",_hx_index:2,__enum__:"$CuB",toString:$estr}
	,CInt: {_hx_name:"CInt",_hx_index:3,__enum__:"$CuB",toString:$estr}
	,CArray: ($_=function(elementType) { return {_hx_index:4,elementType:elementType,__enum__:"$CuB",toString:$estr}; },$_._hx_name="CArray",$_.__params__ = ["elementType"],$_)
	,CEnum: ($_=function(type) { return {_hx_index:5,type:type,__enum__:"$CuB",toString:$estr}; },$_._hx_name="CEnum",$_.__params__ = ["type"],$_)
	,CClass: ($_=function(type) { return {_hx_index:6,type:type,__enum__:"$CuB",toString:$estr}; },$_._hx_name="CClass",$_.__params__ = ["type"],$_)
};
$CuB.__constructs__ = [$CuB.CString,$CuB.CBool,$CuB.CFloat,$CuB.CInt,$CuB.CArray,$CuB.CEnum,$CuB.CClass];
var kit_creator_CreatorObject = function() {
	this.onStopped = null;
	this.onUpdated = null;
	this.onStarted = null;
	this.spawned = true;
	$CtB.call(this);
};
$hxClasses["kit.creator.CreatorObject"] = kit_creator_CreatorObject;
kit_creator_CreatorObject.__name__ = "kit.creator.CreatorObject";
kit_creator_CreatorObject.__super__ = $CtB;
kit_creator_CreatorObject.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 5;
	}
	,$tO: function() {
		this.$4O |= 2;
	}
	,$vO: function(dt) {
		if((this.$4O & 2) != 0) {
			this.$4O &= -3;
			if(this.onStarted != null) {
				this.$pO.$Wa();
				this.$pO.$Oa(this.onStarted,this.$pO);
			}
		}
		if(this.onUpdated != null) {
			this.$pO.$Oa(this.onUpdated,this.$pO);
		}
	}
	,$uO: function() {
		this.$4O &= -3;
		if(this.onStopped != null) {
			this.$pO.$Oa(this.onStopped,this.$pO);
		}
	}
	,__class__: kit_creator_CreatorObject
});
var ez_PhysicsType = $hxEnums["ez.PhysicsType"] = { __ename__:true,__constructs__:null
	,Dynamic: {_hx_name:"Dynamic",_hx_index:0,__enum__:"ez.PhysicsType",toString:$estr}
	,Static: {_hx_name:"Static",_hx_index:1,__enum__:"ez.PhysicsType",toString:$estr}
	,Kinematic: {_hx_name:"Kinematic",_hx_index:2,__enum__:"ez.PhysicsType",toString:$estr}
};
ez_PhysicsType.__constructs__ = [ez_PhysicsType.Dynamic,ez_PhysicsType.Static,ez_PhysicsType.Kinematic];
var ez_Actor = function() {
	this.chromaKeyEnabled = false;
	this.physicsType = ez_PhysicsType.Dynamic;
	this.onEndContact = null;
	this.onBeginContact = null;
	this.collidesWith = null;
	this.collisionGroup = null;
	this.sensor = false;
	this.restitution = 0;
	this.friction = 0.2;
	this.gravityScale = 1;
	this.fixedRotation = false;
	this.density = 1;
	this.physicsEnabled = false;
	this.onPointerUp = null;
	this.onPointerOut = null;
	this.onPointerIn = null;
	this.onPointerDown = null;
	this.pointerEnabled = true;
	kit_creator_CreatorObject.call(this);
};
$hxClasses["ez.Actor"] = ez_Actor;
ez_Actor.__name__ = "ez.Actor";
ez_Actor.__super__ = kit_creator_CreatorObject;
ez_Actor.prototype = $extend(kit_creator_CreatorObject.prototype,{
	$tO: function() {
		var _gthis = this;
		kit_creator_CreatorObject.prototype.$tO.call(this);
		var sprite = this.$pO.$na[10];
		if(sprite != null) {
			sprite.set_pointerEnabled(this.pointerEnabled);
			if(this.onPointerDown != null) {
				sprite.get_pointerDown().$eb(function(_) {
					_gthis.$$O(_gthis.onPointerDown);
				});
			}
			if(this.onPointerIn != null) {
				sprite.get_pointerIn().$eb(function(_) {
					_gthis.$$O(_gthis.onPointerIn);
				});
			}
			if(this.onPointerOut != null) {
				sprite.get_pointerOut().$eb(function(_) {
					_gthis.$$O(_gthis.onPointerOut);
				});
			}
			if(this.onPointerUp != null) {
				sprite.get_pointerUp().$eb(function(_) {
					_gthis.$$O(_gthis.onPointerUp);
				});
			}
		}
	}
	,$$O: function(message) {
		if(this.$pO != null) {
			this.$pO.$Oa(message,this.$pO);
		}
	}
	,__class__: ez_Actor
});
var $CvB = function() {
	$CtB.call(this);
};
$hxClasses["$CvB"] = $CvB;
$CvB.__name__ = "$CvB";
$CvB.__super__ = $CtB;
$CvB.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 12;
	}
	,__class__: $CvB
});
var $CwB = function(layer,json) {
	this.$MP = new $CcC();
	this.$LP = new $CcC();
	this.$JL = null;
	this.$KP = null;
	this.$BP = layer;
	this.$CP = $CvE.$4d(json.name);
	this.$hI = $CvE.$4d(json.type);
	this.$QC = json.x;
	this.$RC = json.y;
	this.$DP = $CvE.$5d(json.anchorX,0);
	this.$EP = $CvE.$5d(json.anchorY,0);
	this.$FP = json.rotation;
	this.$IP = json.width;
	this.$JP = json.height;
	this.$GP = json.visible;
	this.$HP = json.tintcolor != null ? $CG.$3($CJ.$K(json.tintcolor,"#","0x")) : 16777215;
	if(json.ellipse) {
		this.$jJ = kit_creator_ObjectShape.Ellipse;
	} else if(json.polygon != null) {
		this.$jJ = kit_creator_ObjectShape.Polygon;
		var _this = json.polygon;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			var p = _this[i];
			result[i] = new $C5B(p.x,p.y);
		}
		this.$JL = result;
	} else if(json.polyline != null) {
		this.$jJ = kit_creator_ObjectShape.Polyline;
		var _this = json.polyline;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			var p = _this[i];
			result[i] = new $C5B(p.x,p.y);
		}
		this.$JL = result;
	} else if(json.gid != null) {
		this.$jJ = kit_creator_ObjectShape.Tile;
		this.$KP = layer.$Pd.$kd.h[json.gid];
	} else {
		this.$jJ = kit_creator_ObjectShape.Rectangle;
	}
	var yOffset = this.$KP != null ? -this.$JP : 0;
	if(this.$FP == 0) {
		this.$QC += this.$DP;
		this.$RC += this.$EP + yOffset;
	} else {
		var matrix = new $C4B();
		matrix.$9P(this.$QC,this.$RC,1,1,this.$FP * 3.141592653589793 / 180);
		matrix.$$P(this.$DP,this.$EP + yOffset);
		this.$QC = matrix.$6P;
		this.$RC = matrix.$7P;
	}
	if(this.$KP != null) {
		this.$DP *= this.$KP.get_width() / this.$IP;
		this.$EP *= this.$KP.get_height() / this.$JP;
	}
	var map = $CvE.$3d(json.properties);
	var key_keys = Object.keys(map.h);
	var key_length = key_keys.length;
	var key_current = 0;
	while(key_current < key_length) {
		var key = key_keys[key_current++];
		var value = map.h[key];
		if($CJ.$HB(key,"@State:")) {
			this.$MP.h[HxOverrides.substr(key,"@State:".length,null)] = value;
		} else {
			this.$LP.h[key] = value;
		}
	}
};
$hxClasses["$CwB"] = $CwB;
$CwB.__name__ = "$CwB";
$CwB.prototype = {
	$NP: function() {
		var sprite;
		if(this.$KP != null && !Object.prototype.hasOwnProperty.call(this.$KP.$LP.h,"noSprite")) {
			var texture = this.$KP.$Ge;
			sprite = texture != null && $CE.$c(this.$MP) < 2 ? new $ChF(texture) : new $CrE(this);
		} else {
			sprite = new $C6B();
		}
		this.$OP(sprite);
		return sprite;
	}
	,$OP: function(sprite) {
		if(this.$KP != null) {
			sprite.$sQ(this.$QC + this.$KP.$Fe.$De,this.$RC + this.$KP.$Fe.$Ee);
			sprite.$xQ(this.$IP / this.$KP.get_width(),this.$JP / this.$KP.get_height());
		} else {
			sprite.$sQ(this.$QC,this.$RC);
		}
		sprite.$qQ(this.$DP,this.$EP);
		sprite.$FP.set__(this.$FP);
		sprite.set_visible(this.$GP);
		sprite.$uQ(this.$HP);
	}
	,__class__: $CwB
};
var kit_creator_CreatorAction = function() {
	this.script = null;
	this.target = null;
};
$hxClasses["kit.creator.CreatorAction"] = kit_creator_CreatorAction;
kit_creator_CreatorAction.__name__ = "kit.creator.CreatorAction";
kit_creator_CreatorAction.$TP = function(actions,target) {
	var promise = null;
	var _g = 0;
	while(_g < actions.length) {
		var action = [actions[_g]];
		++_g;
		promise = promise != null ? promise.$y2((function(action) {
			return function(_) {
				return action[0].$SP(target);
			};
		})(action)) : action[0].$SP(target);
	}
	return promise;
};
kit_creator_CreatorAction.$UP = function(actions,target) {
	var promises = [];
	var _g = 0;
	while(_g < actions.length) {
		var promise = actions[_g++].$SP(target);
		if(promise != null) {
			promises.push(promise);
		}
	}
	if(promises.length > 0) {
		return $CKJ.$A3(promises);
	} else {
		return null;
	}
};
kit_creator_CreatorAction.prototype = {
	$QP: function(target) {
	}
	,$RP: function(target) {
		return null;
	}
	,$SP: function(target) {
		if(this.script == null || this.script.$pO == null) {
			return new $CKJ().$12();
		}
		if(this.target != null) {
			var sceneSprite = this.script.$pO.$Za(10,$C3E);
			target = null;
			var object = sceneSprite.$7d.keys();
			while(object.hasNext()) {
				var object1 = object.next();
				if(this.target.$CP == object1.$CP) {
					target = sceneSprite.$7d.h[object1.__id__];
					break;
				}
			}
			if(target == null) {
				return new $CKJ().$12();
			}
		}
		this.$QP(target);
		return this.$RP(target);
	}
	,__class__: kit_creator_CreatorAction
};
var ez_Delay = function() {
	this.duration = 1;
	kit_creator_CreatorAction.call(this);
};
$hxClasses["ez.Delay"] = ez_Delay;
ez_Delay.__name__ = "ez.Delay";
ez_Delay.__super__ = kit_creator_CreatorAction;
ez_Delay.prototype = $extend(kit_creator_CreatorAction.prototype,{
	$RP: function(input) {
		var promise = new $CKJ();
		input.$rB(new $CRE().$8(new $CxB(this.duration,promise)));
		return promise;
	}
	,__class__: ez_Delay
});
var $CxB = function(duration,promise) {
	$CtB.call(this);
	this.$VP = duration;
	this.$WP = promise;
};
$hxClasses["$CxB"] = $CxB;
$CxB.__name__ = "$CxB";
$CxB.__super__ = $CtB;
$CxB.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 4;
	}
	,$vO: function(dt) {
		this.$VP -= dt;
		if(this.$VP <= 0) {
			this.$pO.dispose();
			this.$WP.$22(null);
		}
	}
	,__class__: $CxB
});
var $CyB = function(mainSceneName) {
	this.$YP = true;
	this.$XP = new $CZE();
	$CtB.call(this);
	this.$aP = mainSceneName;
};
$hxClasses["$CyB"] = $CyB;
$CyB.__name__ = "$CyB";
$CyB.__super__ = $CtB;
$CyB.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 18;
	}
	,$tO: function() {
		var _gthis = this;
		var director = this.$pO.$na[17];
		if(director == null) {
			director = new $CtI();
			this.$pO.$8(director);
		}
		var assets = this.$pO.$na[13];
		if(assets == null) {
			assets = new $CLE();
			this.$pO.$8(assets);
		}
		var bag = this.$pO.$na[2];
		if(bag == null) {
			bag = new $CuE();
			this.$pO.$8(bag);
		}
		var _this = $CvE.$2d(this.$aP);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = assets.$tR(_this[i]);
		}
		var loadPromise = $CKJ.$A3(result);
		if(this.$YP) {
			loadPromise.$y2(function(_) {
			}).$z2(function(error) {
			});
			loadPromise = $CcE.$Gc.initPlatformSDK(loadPromise);
		}
		loadPromise.$y2(function(pack) {
			director.$E2(new $C0B(_gthis.$aP));
			_gthis.$XP.$fb();
		});
	}
	,__class__: $CyB
});
var $CzB = function(opaque) {
	if(opaque == null) {
		opaque = true;
	}
	$CtB.call(this);
	this.$dP = opaque;
	this.$bP = new $CZE();
	this.$cP = new $CZE();
};
$hxClasses["$CzB"] = $CzB;
$CzB.__name__ = "$CzB";
$CzB.__super__ = $CtB;
$CzB.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 3;
	}
	,__class__: $CzB
});
var $C0B = function(name,opaque) {
	if(opaque == null) {
		opaque = true;
	}
	this.$oP = null;
	this.$mP = null;
	this.$lP = null;
	this.$kP = null;
	this.$jP = null;
	this.$iP = null;
	this.$hP = null;
	this.$gP = null;
	this.$fP = null;
	this.$eP = null;
	$CzB.call(this,opaque);
	this.$nP = name;
};
$hxClasses["$C0B"] = $C0B;
$C0B.__name__ = "$C0B";
$C0B.__super__ = $CzB;
$C0B.prototype = $extend($CzB.prototype,{
	$tO: function() {
		var _gthis = this;
		$CzB.prototype.$tO.call(this);
		var sceneInfo = this.$pO.$Za(13).$vZ(this.$nP);
		var listeners = [];
		this.$1O(sceneInfo.$od.$Kb(function(_,_1) {
			_gthis.$eP = sceneInfo.$LP.h["onStarted"];
			_gthis.$fP = sceneInfo.$LP.h["onStopped"];
			_gthis.$gP = sceneInfo.$LP.h["onUpdated"];
			_gthis.$hP = sceneInfo.$LP.h["onPropertyChanged"];
			_gthis.$iP = sceneInfo.$LP.h["onKeyDown"];
			_gthis.$jP = sceneInfo.$LP.h["onKeyUp"];
			_gthis.$kP = sceneInfo.$LP.h["onPointerDown"];
			_gthis.$lP = sceneInfo.$LP.h["onPointerUp"];
			_gthis.$mP = sceneInfo.$LP.h["onResized"];
			var _g = 0;
			while(_g < listeners.length) listeners[_g++].dispose();
			listeners = [];
			if(_gthis.$iP != null) {
				listeners.push(_gthis.$zO($CcE.$Gc.getKeyboard().down,function(_) {
					_gthis.$$O(_gthis.$iP);
				}));
			}
			if(_gthis.$jP != null) {
				listeners.push(_gthis.$zO($CcE.$Gc.getKeyboard().up,function(_) {
					_gthis.$$O(_gthis.$jP);
				}));
			}
			if(_gthis.$kP != null) {
				listeners.push(_gthis.$zO($CcE.$Gc.$va.down,function(_) {
					_gthis.$$O(_gthis.$kP);
				}));
			}
			if(_gthis.$lP != null) {
				listeners.push(_gthis.$zO($CcE.$Gc.$va.up,function(_) {
					_gthis.$$O(_gthis.$lP);
				}));
			}
			if(_gthis.$mP != null) {
				listeners.push(_gthis.$yO($CcE.$Gc.$xa.resize,function() {
					_gthis.$$O(_gthis.$mP);
				}));
			}
		}));
		var sceneSprite = sceneInfo.$NP();
		sceneSprite.$Ue(0,0,$CvG.$jB("width"),$CvG.$jB("height"));
		sceneSprite.$Te = this.$dP;
		this.$oP = new $CRE().$8(sceneSprite);
		this.$pO.$rB(this.$oP);
		var bag = new $CuE();
		this.$pO.$8(bag);
		if(this.$hP != null) {
			var bags = [bag];
			var entity = this.$pO.$gB;
			while(entity != null) {
				var bag1 = entity.$na[2];
				if(bag1 != null) {
					bags.push(bag1);
				}
				entity = entity.$gB;
			}
			var _g = 0;
			while(_g < bags.length) this.$0O(bags[_g++].$Jb,function(name,value) {
				_gthis.$$O(_gthis.$hP);
			});
		}
		var key_keys = Object.keys(sceneInfo.$LP.h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var float = parseFloat(sceneInfo.$LP.h[key]);
			if(!isNaN(float)) {
				bag.$kB(key,float);
			}
		}
		if($CvG.$jB("scaleMode") != 1) {
			var layout = function() {
				var scale = Math.min($CcE.$Gc.$xa.get_width() / sceneSprite.$Re.$Lb,$CcE.$Gc.$xa.get_height() / sceneSprite.$Se.$Lb);
				sceneSprite.$sQ($CcE.$Gc.$xa.get_width() / 2 - scale * sceneSprite.$Re.$Lb / 2,$CcE.$Gc.$xa.get_height() / 2 - scale * sceneSprite.$Se.$Lb / 2);
				sceneSprite.$wQ(scale);
			};
			layout();
			this.$yO($CcE.$Gc.$xa.resize,layout);
		}
		var script = sceneInfo.$qd();
		this.$oP.$8(script);
		this.$pO.$Wa();
		if(this.$eP != null) {
			this.$$O(this.$eP);
		}
		if(this.$mP != null) {
			this.$$O(this.$mP);
		}
	}
	,$vO: function(dt) {
		$CzB.prototype.$vO.call(this,dt);
		if(this.$gP != null) {
			this.$$O(this.$gP);
		}
	}
	,$uO: function() {
		$CzB.prototype.$uO.call(this);
		if(this.$fP != null) {
			this.$$O(this.$fP);
		}
	}
	,$$O: function(message) {
		this.$oP.$Oa(message,this.$pO);
	}
	,__class__: $C0B
});
var ez_NotifyAdClicked = function() {
	kit_creator_CreatorAction.call(this);
};
$hxClasses["ez.NotifyAdClicked"] = ez_NotifyAdClicked;
ez_NotifyAdClicked.__name__ = "ez.NotifyAdClicked";
ez_NotifyAdClicked.__super__ = kit_creator_CreatorAction;
ez_NotifyAdClicked.prototype = $extend(kit_creator_CreatorAction.prototype,{
	$QP: function(target) {
		$CcE.$Cc();
	}
	,__class__: ez_NotifyAdClicked
});
var kit_creator_GroupAction = function() {
	this.subActions = [];
	kit_creator_CreatorAction.call(this);
};
$hxClasses["kit.creator.GroupAction"] = kit_creator_GroupAction;
kit_creator_GroupAction.__name__ = "kit.creator.GroupAction";
kit_creator_GroupAction.__super__ = kit_creator_CreatorAction;
kit_creator_GroupAction.prototype = $extend(kit_creator_CreatorAction.prototype,{
	$RP: function(target) {
		return kit_creator_CreatorAction.$TP(this.subActions,target);
	}
	,__class__: kit_creator_GroupAction
});
var ez_Parallel = function() {
	kit_creator_GroupAction.call(this);
};
$hxClasses["ez.Parallel"] = ez_Parallel;
ez_Parallel.__name__ = "ez.Parallel";
ez_Parallel.__super__ = kit_creator_GroupAction;
ez_Parallel.prototype = $extend(kit_creator_GroupAction.prototype,{
	$RP: function(target) {
		return kit_creator_CreatorAction.$UP(this.subActions,target);
	}
	,__class__: ez_Parallel
});
var ez_Random = function() {
	kit_creator_GroupAction.call(this);
};
$hxClasses["ez.Random"] = ez_Random;
ez_Random.__name__ = "ez.Random";
ez_Random.__super__ = kit_creator_GroupAction;
ez_Random.prototype = $extend(kit_creator_GroupAction.prototype,{
	$RP: function(entity) {
		if(this.subActions.length == 0) {
			return null;
		}
		return this.subActions[Math.random() * this.subActions.length | 0].$SP(entity);
	}
	,__class__: ez_Random
});
var ez_RunAction = function() {
	this.name = null;
	kit_creator_CreatorAction.call(this);
};
$hxClasses["ez.RunAction"] = ez_RunAction;
ez_RunAction.__name__ = "ez.RunAction";
ez_RunAction.__super__ = kit_creator_CreatorAction;
ez_RunAction.prototype = $extend(kit_creator_CreatorAction.prototype,{
	$RP: function(input) {
		return this.script.$TP(this.name,input);
	}
	,__class__: ez_RunAction
});
var ez_TweenAction = function() {
	kit_creator_CreatorAction.call(this);
};
$hxClasses["ez.TweenAction"] = ez_TweenAction;
ez_TweenAction.__name__ = "ez.TweenAction";
ez_TweenAction.__super__ = kit_creator_CreatorAction;
ez_TweenAction.prototype = $extend(kit_creator_CreatorAction.prototype,{
	$qP: function(entity,float,to,duration,ease) {
		if(duration <= 0) {
			float.set__(to);
			return null;
		} else {
			float.$jb(to,duration,this.$sP(ease));
			return $C1B.$wP(entity,float);
		}
	}
	,$rP: function(entity,xValue,toX,yValue,toY,duration,ease) {
		if(duration <= 0) {
			xValue.set__(toX);
			yValue.set__(toY);
			return null;
		} else {
			var easeFn = this.$sP(ease);
			xValue.$jb(toX,duration,easeFn);
			yValue.$jb(toY,duration,easeFn);
			return $C1B.$wP(entity,xValue);
		}
	}
	,$sP: function(ease) {
		switch(ease._hx_index) {
		case 0:
			return $CiE.$Sc;
		case 1:
			return $CiE.$Tc;
		case 2:
			return $CiE.$Uc;
		case 3:
			return $CiE.$Vc;
		case 4:
			return $CiE.$Wc;
		case 5:
			return $CiE.$Xc;
		case 6:
			return $CiE.$Yc;
		case 7:
			return $CiE.$Zc;
		case 8:
			return $CiE.$ac;
		case 9:
			return $CiE.$bc;
		case 10:
			return $CiE.$cc;
		case 11:
			return $CiE.$dc;
		case 12:
			return $CiE.$ec;
		case 13:
			return $CiE.$fc;
		case 14:
			return $CiE.$gc;
		case 15:
			return $CiE.$hc;
		case 16:
			return $CiE.$ic;
		case 17:
			return $CiE.$jc;
		case 18:
			return $CiE.$kc;
		case 19:
			return $CiE.$lc;
		case 20:
			return $CiE.$mc;
		case 21:
			return $CiE.$nc;
		case 22:
			return $CiE.$oc;
		case 23:
			return $CiE.$pc;
		case 24:
			return $CiE.$qc;
		case 25:
			return $CiE.$rc;
		case 26:
			return $CiE.$sc;
		case 27:
			return $CiE.$tc;
		case 28:
			return $CiE.$uc;
		case 29:
			return $CiE.$vc;
		case 30:
			return $CiE.$wc;
		}
	}
	,$tP: function(entity) {
	}
	,__class__: ez_TweenAction
});
var $C1B = function(float,promise) {
	$CtB.call(this);
	this.$uP = float;
	this.$vP = float.$vP;
	this.$WP = promise;
};
$hxClasses["$C1B"] = $C1B;
$C1B.__name__ = "$C1B";
$C1B.$wP = function(entity,float) {
	var promise = new $CKJ();
	entity.$rB(new $CRE().$8(new $C1B(float,promise)));
	return promise;
};
$C1B.__super__ = $CtB;
$C1B.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 1;
	}
	,$vO: function(dt) {
		if(this.$uP.$vP != this.$vP) {
			this.$pO.dispose();
			this.$WP.$22(null);
		}
	}
	,__class__: $C1B
});
var ez_TweenEase = $hxEnums["ez.TweenEase"] = { __ename__:true,__constructs__:null
	,Linear: {_hx_name:"Linear",_hx_index:0,__enum__:"ez.TweenEase",toString:$estr}
	,QuadIn: {_hx_name:"QuadIn",_hx_index:1,__enum__:"ez.TweenEase",toString:$estr}
	,QuadOut: {_hx_name:"QuadOut",_hx_index:2,__enum__:"ez.TweenEase",toString:$estr}
	,QuadInOut: {_hx_name:"QuadInOut",_hx_index:3,__enum__:"ez.TweenEase",toString:$estr}
	,CubeIn: {_hx_name:"CubeIn",_hx_index:4,__enum__:"ez.TweenEase",toString:$estr}
	,CubeOut: {_hx_name:"CubeOut",_hx_index:5,__enum__:"ez.TweenEase",toString:$estr}
	,CubeInOut: {_hx_name:"CubeInOut",_hx_index:6,__enum__:"ez.TweenEase",toString:$estr}
	,QuartIn: {_hx_name:"QuartIn",_hx_index:7,__enum__:"ez.TweenEase",toString:$estr}
	,QuartOut: {_hx_name:"QuartOut",_hx_index:8,__enum__:"ez.TweenEase",toString:$estr}
	,QuartInOut: {_hx_name:"QuartInOut",_hx_index:9,__enum__:"ez.TweenEase",toString:$estr}
	,QuintIn: {_hx_name:"QuintIn",_hx_index:10,__enum__:"ez.TweenEase",toString:$estr}
	,QuintOut: {_hx_name:"QuintOut",_hx_index:11,__enum__:"ez.TweenEase",toString:$estr}
	,QuintInOut: {_hx_name:"QuintInOut",_hx_index:12,__enum__:"ez.TweenEase",toString:$estr}
	,SineIn: {_hx_name:"SineIn",_hx_index:13,__enum__:"ez.TweenEase",toString:$estr}
	,SineOut: {_hx_name:"SineOut",_hx_index:14,__enum__:"ez.TweenEase",toString:$estr}
	,SineInOut: {_hx_name:"SineInOut",_hx_index:15,__enum__:"ez.TweenEase",toString:$estr}
	,BounceIn: {_hx_name:"BounceIn",_hx_index:16,__enum__:"ez.TweenEase",toString:$estr}
	,BounceOut: {_hx_name:"BounceOut",_hx_index:17,__enum__:"ez.TweenEase",toString:$estr}
	,BounceInOut: {_hx_name:"BounceInOut",_hx_index:18,__enum__:"ez.TweenEase",toString:$estr}
	,CircIn: {_hx_name:"CircIn",_hx_index:19,__enum__:"ez.TweenEase",toString:$estr}
	,CircOut: {_hx_name:"CircOut",_hx_index:20,__enum__:"ez.TweenEase",toString:$estr}
	,CircInOut: {_hx_name:"CircInOut",_hx_index:21,__enum__:"ez.TweenEase",toString:$estr}
	,ExpoIn: {_hx_name:"ExpoIn",_hx_index:22,__enum__:"ez.TweenEase",toString:$estr}
	,ExpoOut: {_hx_name:"ExpoOut",_hx_index:23,__enum__:"ez.TweenEase",toString:$estr}
	,ExpoInOut: {_hx_name:"ExpoInOut",_hx_index:24,__enum__:"ez.TweenEase",toString:$estr}
	,BackIn: {_hx_name:"BackIn",_hx_index:25,__enum__:"ez.TweenEase",toString:$estr}
	,BackOut: {_hx_name:"BackOut",_hx_index:26,__enum__:"ez.TweenEase",toString:$estr}
	,BackInOut: {_hx_name:"BackInOut",_hx_index:27,__enum__:"ez.TweenEase",toString:$estr}
	,ElasticIn: {_hx_name:"ElasticIn",_hx_index:28,__enum__:"ez.TweenEase",toString:$estr}
	,ElasticOut: {_hx_name:"ElasticOut",_hx_index:29,__enum__:"ez.TweenEase",toString:$estr}
	,ElasticInOut: {_hx_name:"ElasticInOut",_hx_index:30,__enum__:"ez.TweenEase",toString:$estr}
};
ez_TweenEase.__constructs__ = [ez_TweenEase.Linear,ez_TweenEase.QuadIn,ez_TweenEase.QuadOut,ez_TweenEase.QuadInOut,ez_TweenEase.CubeIn,ez_TweenEase.CubeOut,ez_TweenEase.CubeInOut,ez_TweenEase.QuartIn,ez_TweenEase.QuartOut,ez_TweenEase.QuartInOut,ez_TweenEase.QuintIn,ez_TweenEase.QuintOut,ez_TweenEase.QuintInOut,ez_TweenEase.SineIn,ez_TweenEase.SineOut,ez_TweenEase.SineInOut,ez_TweenEase.BounceIn,ez_TweenEase.BounceOut,ez_TweenEase.BounceInOut,ez_TweenEase.CircIn,ez_TweenEase.CircOut,ez_TweenEase.CircInOut,ez_TweenEase.ExpoIn,ez_TweenEase.ExpoOut,ez_TweenEase.ExpoInOut,ez_TweenEase.BackIn,ez_TweenEase.BackOut,ez_TweenEase.BackInOut,ez_TweenEase.ElasticIn,ez_TweenEase.ElasticOut,ez_TweenEase.ElasticInOut];
var ez_VectorGraphics = function() {
	this.strokeWidth = 5;
	this.strokeColor = 10066329;
	this.fillColor = 12632256;
	ez_Actor.call(this);
};
$hxClasses["ez.VectorGraphics"] = ez_VectorGraphics;
ez_VectorGraphics.__name__ = "ez.VectorGraphics";
ez_VectorGraphics.__super__ = ez_Actor;
ez_VectorGraphics.prototype = $extend(ez_Actor.prototype,{
	$tO: function() {
		var sprite = this.$pO.$na[10];
		if(sprite == null) {
			sprite = new $C7B(this.info);
			this.info.$OP(sprite);
			this.$pO.$8(sprite);
		}
		ez_Actor.prototype.$tO.call(this);
		var g = sprite.get_graphics();
		switch(this.info.$jJ._hx_index) {
		case 0:
			g.fillRect(this.fillColor,0,0,this.info.$IP,this.info.$JP);
			if(this.strokeWidth > 0) {
				g.strokeLines(this.strokeColor,[0,0,this.info.$IP,0,this.info.$IP,this.info.$JP,0,this.info.$JP,0,0],this.strokeWidth);
			}
			break;
		case 1:
			var radiusX = this.info.$IP / 2;
			var radiusY = this.info.$JP / 2;
			g.fillEllipse(this.fillColor,radiusX,radiusY,radiusX,radiusY);
			if(this.strokeWidth > 0) {
				g.strokeEllipse(this.strokeColor,radiusX,radiusY,radiusX,radiusY,this.strokeWidth);
			}
			break;
		case 2:
			g.fillPolygon(this.fillColor,this.$xP(false));
			if(this.strokeWidth > 0) {
				g.strokeLines(this.strokeColor,this.$xP(true),this.strokeWidth);
			}
			break;
		case 3:
			g.strokeLines(this.strokeColor,this.$xP(false),this.strokeWidth);
			break;
		case 4:
			break;
		}
	}
	,$xP: function(closeLoop) {
		var verts = [];
		var _g = 0;
		var _g1 = this.info.$JL;
		while(_g < _g1.length) {
			var point = _g1[_g];
			++_g;
			verts.push(point.$QC);
			verts.push(point.$RC);
		}
		if(closeLoop && verts.length > 0) {
			verts.push(verts[0]);
			verts.push(verts[1]);
		}
		return verts;
	}
	,__class__: ez_VectorGraphics
});
var $C2B = function() { };
$hxClasses["$C2B"] = $C2B;
$C2B.__name__ = "$C2B";
$C2B.__isInterface__ = true;
$C2B.prototype = {
	__class__: $C2B
};
var $C3B = function() {
	this.$1P = [];
	this.$0P = [];
};
$hxClasses["$C3B"] = $C3B;
$C3B.__name__ = "$C3B";
$C3B.__interfaces__ = [$C2B];
$C3B.prototype = {
	$yP: function(x,y,width,height) {
		var state = this.$0P.pop();
		if(state != null) {
			state.$Kf(width,height);
		} else {
			state = new $CIH(width,height);
		}
		state.$im = x;
		state.$jm = y;
		this.$1P.unshift(state);
		return state.$km;
	}
	,apply: function(filter) {
		if(filter.$rI) {
			filter.$Wg(this);
		}
	}
	,render: function(filter) {
		this.$1P[0].$mm(filter);
	}
	,$zP: function() {
		var topState = this.$1P.shift();
		this.$0P.push(topState);
		return topState.$km;
	}
	,__class__: $C3B
};
var $C4B = function() {
	this.$8P();
};
$hxClasses["$C4B"] = $C4B;
$C4B.__name__ = "$C4B";
$C4B.$GC = function(lhs,rhs,result) {
	if(result == null) {
		result = new $C4B();
	}
	var l00 = lhs.$2P;
	var l01 = lhs.$4P;
	var l10 = lhs.$3P;
	var l11 = lhs.$5P;
	var r00 = rhs.$2P;
	var r01 = rhs.$4P;
	var r02 = rhs.$6P;
	var r10 = rhs.$3P;
	var r11 = rhs.$5P;
	var r12 = rhs.$7P;
	result.$2P = l00 * r00 + l01 * r10;
	result.$4P = l00 * r01 + l01 * r11;
	result.$6P = l00 * r02 + l01 * r12 + lhs.$6P;
	result.$3P = l10 * r00 + l11 * r10;
	result.$5P = l10 * r01 + l11 * r11;
	result.$7P = l10 * r02 + l11 * r12 + lhs.$7P;
	return result;
};
$C4B.prototype = {
	$kB: function(m00,m10,m01,m11,m02,m12) {
		this.$2P = m00;
		this.$4P = m01;
		this.$6P = m02;
		this.$3P = m10;
		this.$5P = m11;
		this.$7P = m12;
	}
	,$8P: function() {
		this.$kB(1,0,0,1,0,0);
	}
	,$9P: function(x,y,scaleX,scaleY,rotation) {
		var sin = Math.sin(rotation);
		var cos = Math.cos(rotation);
		this.$kB(cos * scaleX,sin * scaleX,-sin * scaleY,cos * scaleY,x,y);
	}
	,$$P: function(x,y) {
		this.$6P += this.$2P * x + this.$4P * y;
		this.$7P += this.$5P * y + this.$3P * x;
	}
	,$BQ: function() {
		var det = this.$FQ();
		if(det == 0) {
			return false;
		}
		this.$kB(this.$5P / det,-this.$3P / det,-this.$4P / det,this.$2P / det,(this.$4P * this.$7P - this.$5P * this.$6P) / det,(this.$3P * this.$6P - this.$2P * this.$7P) / det);
		return true;
	}
	,$CQ: function(x,y,result) {
		if(result == null) {
			result = new $C5B();
		}
		result.$QC = x * this.$2P + y * this.$4P + this.$6P;
		result.$RC = x * this.$3P + y * this.$5P + this.$7P;
		return result;
	}
	,$EQ: function(points,length,result) {
		var ii = 0;
		while(ii < length) {
			var x = points[ii];
			var y = points[ii + 1];
			result[ii++] = x * this.$2P + y * this.$4P + this.$6P;
			result[ii++] = x * this.$3P + y * this.$5P + this.$7P;
		}
	}
	,$FQ: function() {
		return this.$2P * this.$5P - this.$4P * this.$3P;
	}
	,$GQ: function(x,y,result) {
		var det = this.$FQ();
		if(det == 0) {
			return false;
		}
		x -= this.$6P;
		y -= this.$7P;
		result.$QC = (x * this.$5P - y * this.$4P) / det;
		result.$RC = (y * this.$2P - x * this.$3P) / det;
		return true;
	}
	,$HQ: function(result) {
		if(result == null) {
			result = new $C4B();
		}
		result.$kB(this.$2P,this.$3P,this.$4P,this.$5P,this.$6P,this.$7P);
		return result;
	}
	,__class__: $C4B
};
var $C5B = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.$QC = x;
	this.$RC = y;
};
$hxClasses["$C5B"] = $C5B;
$C5B.__name__ = "$C5B";
$C5B.prototype = {
	$8: function(x,y) {
		this.$QC += x;
		this.$RC += y;
	}
	,$PC: function() {
		var m = this.$JQ();
		this.$QC /= m;
		this.$RC /= m;
	}
	,$dG: function(x,y) {
		return this.$QC * x + this.$RC * y;
	}
	,$GC: function(n) {
		this.$QC *= n;
		this.$RC *= n;
	}
	,$JQ: function() {
		return Math.sqrt(this.$QC * this.$QC + this.$RC * this.$RC);
	}
	,__class__: $C5B
};
var $C6B = function() {
	this.$FR = null;
	this.$$Q = 0;
	this.$9Q = 0;
	this.$8Q = null;
	var _gthis = this;
	$CtB.call(this);
	this.$4O |= 150;
	this.$7Q = new $C4B();
	var dirtyMatrix = function(_,_1) {
		_gthis.$4O |= 24;
	};
	this.$QC = new $CbE(0,dirtyMatrix);
	this.$RC = new $CbE(0,dirtyMatrix);
	this.$FP = new $CbE(0,dirtyMatrix);
	this.$NQ = new $CbE(1,dirtyMatrix);
	this.$OQ = new $CbE(1,dirtyMatrix);
	this.$DP = new $CbE(0,dirtyMatrix);
	this.$EP = new $CbE(0,dirtyMatrix);
	this.$PQ = new $CbE(1);
};
$hxClasses["$C6B"] = $C6B;
$C6B.__name__ = "$C6B";
$C6B.$GR = function(entity,x,y) {
	if(!entity.$rI) {
		return null;
	}
	var sprite = entity.$na[10];
	if(sprite != null) {
		if((sprite.$4O & 6) != 6) {
			return null;
		}
		if(sprite.$FR != null && sprite.$FR.$pf != null) {
			return null;
		}
		if(sprite.$kQ().$GQ(x,y,$C6B.$RR)) {
			x = $C6B.$RR.$QC;
			y = $C6B.$RR.$RC;
		} else {
			return null;
		}
		var scissor = sprite.get_scissor();
		if(scissor != null && !scissor.$GB(x,y)) {
			return null;
		}
	}
	var result = $C6B.$OR(entity.$pB,x,y);
	if(result != null) {
		return result;
	}
	if(sprite != null && sprite.$jQ(x,y)) {
		return sprite;
	} else {
		return null;
	}
};
$C6B.$HR = function(entity,result) {
	if(result == null) {
		result = new $C2E();
	}
	result.$kB(1.79769313486231e+308,1.79769313486231e+308,-1.79769313486231e+308,-1.79769313486231e+308);
	$C6B.$PR(entity,null,result);
	result.$IP -= result.$QC;
	result.$JP -= result.$RC;
	return result;
};
$C6B.$KR = function(entity,g,ignoreMasks) {
	if(!entity.$rI) {
		return;
	}
	var filterTexture = null;
	var filterBounds = null;
	var sprite = entity.$na[10];
	if(sprite != null) {
		var alpha = sprite.$PQ.$Lb;
		if((sprite.$4O & 2) == 0 || alpha <= 0) {
			return;
		}
		var extras = sprite.$FR;
		if(ignoreMasks && extras != null && extras.$pf != null) {
			return;
		}
		g.save();
		if(extras != null && extras.$WQ != null && (sprite.$4O & 128) != 0) {
			var maskEntity = extras.$WQ.$pO;
			if(maskEntity != null) {
				g.beginMask();
				$C6B.$KR(maskEntity,g,false);
				g.endMask();
			}
		}
		if(extras != null) {
			var hasActiveFilter = false;
			var needsRender = false;
			var paddingTop = 0.0;
			var paddingRight = 0.0;
			var paddingBottom = 0.0;
			var paddingLeft = 0.0;
			var _g = 0;
			var _g1 = extras.$ZQ;
			while(_g < _g1.length) {
				var filter = _g1[_g];
				++_g;
				if(filter.$rI) {
					hasActiveFilter = true;
					needsRender = needsRender || !filter.$Pg;
					paddingTop = Math.max(paddingTop,filter.$Qg);
					paddingRight = Math.max(paddingRight,filter.$Rg);
					paddingBottom = Math.max(paddingBottom,filter.$Sg);
					paddingLeft = Math.max(paddingLeft,filter.$Tg);
				}
			}
			if(hasActiveFilter && $CcE.$Gc.$wa.get_filterSupported()) {
				var parentSprite = sprite.$3Q();
				var parentViewMatrix = parentSprite != null ? parentSprite.$nQ() : null;
				var viewMatrix = sprite.$nQ();
				filterBounds = new $C2E();
				filterBounds.$kB(1.79769313486231e+308,1.79769313486231e+308,-1.79769313486231e+308,-1.79769313486231e+308);
				var filterLocalBounds = extras.$aQ;
				if(filterLocalBounds != null) {
					var x1 = filterLocalBounds.$QC;
					var y1 = filterLocalBounds.$RC;
					var x2 = x1 + filterLocalBounds.$IP;
					var y2 = y1 + filterLocalBounds.$JP;
					if(x2 > x1 && y2 > y1) {
						$C6B.$QR(viewMatrix,x1,y1,filterBounds);
						$C6B.$QR(viewMatrix,x2,y1,filterBounds);
						$C6B.$QR(viewMatrix,x2,y2,filterBounds);
						$C6B.$QR(viewMatrix,x1,y2,filterBounds);
					}
				} else {
					$C6B.$PR(entity,parentViewMatrix,filterBounds);
				}
				filterBounds.$IP -= filterBounds.$QC;
				filterBounds.$JP -= filterBounds.$RC;
				if(!filterBounds.get_empty()) {
					filterBounds.$QC -= paddingLeft;
					filterBounds.$RC -= paddingTop;
					filterBounds.$IP += paddingLeft + paddingRight;
					filterBounds.$JP += paddingTop + paddingBottom;
					var input = $C6B.$TR.$yP(filterBounds.$QC,filterBounds.$RC,Math.ceil(filterBounds.$IP),Math.ceil(filterBounds.$JP));
					if(needsRender) {
						var inputG = input.get_graphics();
						inputG.save();
						inputG.translate(-filterBounds.$QC,-filterBounds.$RC);
						inputG.transform(viewMatrix.$2P,viewMatrix.$3P,viewMatrix.$4P,viewMatrix.$5P,viewMatrix.$6P,viewMatrix.$7P);
						$C6B.$MR(sprite,inputG);
						$C6B.$LR(entity,inputG);
						inputG.restore();
					}
					var _g = 0;
					var _g1 = extras.$ZQ;
					while(_g < _g1.length) $C6B.$TR.apply(_g1[_g++]);
					filterTexture = $C6B.$TR.$zP();
					if(parentViewMatrix != null) {
						var matrix = parentViewMatrix.$HQ($C6B.$SR);
						matrix.$BQ();
						g.transform(matrix.$2P,matrix.$3P,matrix.$4P,matrix.$5P,matrix.$6P,matrix.$7P);
					}
				}
			}
		}
		if(alpha < 1) {
			g.multiplyAlpha(alpha);
		}
		if(filterTexture == null) {
			var matrix = sprite.$kQ();
			g.transform(matrix.$2P,matrix.$3P,matrix.$4P,matrix.$5P,matrix.$6P,matrix.$7P);
		}
		if(extras != null) {
			if(extras.$QQ.$Lb != 1 || extras.$RQ.$Lb != 1 || extras.$SQ.$Lb != 1) {
				g.tint(extras.$QQ.$Lb,extras.$RQ.$Lb,extras.$SQ.$Lb);
			}
			if(extras.$TQ != null) {
				g.setBlendMode(extras.$TQ);
			}
			var scissor = extras.$UQ;
			if(scissor != null && filterTexture == null) {
				g.applyScissor(scissor.$QC,scissor.$RC,scissor.$IP,scissor.$JP);
			}
		}
		if(filterTexture == null) {
			$C6B.$MR(sprite,g);
		} else {
			g.drawSubTexture(filterTexture,filterBounds.$QC,filterBounds.$RC,0,0,filterBounds.$IP,filterBounds.$JP);
		}
	}
	if(filterTexture == null) {
		$C6B.$LR(entity,g);
	}
	if(sprite != null) {
		g.restore();
	}
};
$C6B.$LR = function(entity,g) {
	var director = entity.$na[17];
	if(director != null) {
		var scenes = director.$_1;
		var _g = 0;
		while(_g < scenes.length) $C6B.$KR(scenes[_g++],g,true);
	}
	var p = entity.$pB;
	while(p != null) {
		var next = p.next;
		$C6B.$KR(p,g,true);
		p = next;
	}
};
$C6B.$MR = function(sprite,g) {
	sprite.$1Q(g);
	var extras = sprite.$FR;
	if(extras != null && extras.$VQ != null) {
		extras.$VQ.$JR(g);
	}
};
$C6B.$OR = function(entity,x,y) {
	if(entity != null) {
		var result = $C6B.$OR(entity.next,x,y);
		if(result != null) {
			return result;
		} else {
			return $C6B.$GR(entity,x,y);
		}
	}
	return null;
};
$C6B.$PR = function(entity,matrix,result) {
	if(!entity.$rI) {
		return;
	}
	var sprite = entity.$na[10];
	if(sprite != null) {
		if((sprite.$4O & 2) == 0) {
			return;
		}
		if(sprite.$FR != null && sprite.$FR.$pf != null) {
			return;
		}
		matrix = matrix != null ? $C4B.$GC(matrix,sprite.$kQ()) : sprite.$kQ();
		var x2 = sprite.$hQ();
		var y2 = sprite.$iQ();
		if(x2 > 0.0 && y2 > 0.0) {
			$C6B.$QR(matrix,0.0,0.0,result);
			$C6B.$QR(matrix,x2,0.0,result);
			$C6B.$QR(matrix,x2,y2,result);
			$C6B.$QR(matrix,0.0,y2,result);
		}
	}
	var director = entity.$na[17];
	if(director != null) {
		var scenes = director.$_1;
		var ii = 0;
		var ll = scenes.length;
		while(ii < ll) {
			$C6B.$PR(scenes[ii],matrix,result);
			++ii;
		}
	}
	var p = entity.$pB;
	while(p != null) {
		var next = p.next;
		$C6B.$PR(p,matrix,result);
		p = next;
	}
};
$C6B.$QR = function(matrix,x,y,rect) {
	var p = matrix.$CQ(x,y,$C6B.$RR);
	x = p.$QC;
	y = p.$RC;
	if(x < rect.$QC) {
		rect.$QC = x;
	}
	if(y < rect.$RC) {
		rect.$RC = y;
	}
	if(x > rect.$IP) {
		rect.$IP = x;
	}
	if(y > rect.$JP) {
		rect.$JP = y;
	}
};
$C6B.__super__ = $CtB;
$C6B.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 10;
	}
	,$hQ: function() {
		return 0;
	}
	,$iQ: function() {
		return 0;
	}
	,$jQ: function(localX,localY) {
		if(localX >= 0 && localX < this.$hQ() && localY >= 0) {
			return localY < this.$iQ();
		} else {
			return false;
		}
	}
	,$kQ: function() {
		if((this.$4O & 8) != 0) {
			this.$4O &= -9;
			this.$7Q.$9P(this.$QC.$Lb,this.$RC.$Lb,this.$NQ.$Lb,this.$OQ.$Lb,this.$FP.$Lb * 3.141592653589793 / 180);
			this.$7Q.$$P(-this.$DP.$Lb,-this.$EP.$Lb);
		}
		return this.$7Q;
	}
	,$nQ: function() {
		if(this.$2Q()) {
			var parentSprite = this.$3Q();
			this.$8Q = parentSprite != null ? $C4B.$GC(parentSprite.$nQ(),this.$kQ(),this.$8Q) : this.$kQ().$HQ(this.$8Q);
			this.$4O &= -17;
			if(parentSprite != null) {
				this.$$Q = parentSprite.$9Q;
			}
			++this.$9Q;
		}
		return this.$8Q;
	}
	,$qQ: function(x,y) {
		this.$DP.set__(x);
		this.$EP.set__(y);
		return this;
	}
	,$rQ: function() {
		this.$DP.set__(this.$hQ() / 2);
		this.$EP.set__(this.$iQ() / 2);
		return this;
	}
	,$sQ: function(x,y) {
		this.$QC.set__(x);
		this.$RC.set__(y);
		return this;
	}
	,$uQ: function(color) {
		if(this.$FR != null || color != 16777215) {
			this.get_tintR().set__((color & 16711680) / 16711680);
			this.get_tintG().set__((color & 65280) / 65280);
			this.get_tintB().set__((color & 255) / 255);
		}
		return this;
	}
	,$wQ: function(scale) {
		this.$NQ.set__(scale);
		this.$OQ.set__(scale);
		return this;
	}
	,$xQ: function(scaleX,scaleY) {
		this.$NQ.set__(scaleX);
		this.$OQ.set__(scaleY);
		return this;
	}
	,$rO: function() {
		if((this.$4O & 64) != 0) {
			this.$4Q();
		}
	}
	,$sO: function() {
		if(this.$ER != null) {
			this.$ER.dispose();
			this.$ER = null;
		}
	}
	,$vO: function(dt) {
		this.$QC.$5K(dt);
		this.$RC.$5K(dt);
		this.$FP.$5K(dt);
		this.$NQ.$5K(dt);
		this.$OQ.$5K(dt);
		this.$PQ.$5K(dt);
		this.$DP.$5K(dt);
		this.$EP.$5K(dt);
		var extras = this.$FR;
		if(extras != null) {
			extras.$QQ.$5K(dt);
			extras.$RQ.$5K(dt);
			extras.$SQ.$5K(dt);
			var _g = 0;
			var _g1 = extras.$ZQ;
			while(_g < _g1.length) {
				var filter = _g1[_g];
				++_g;
				if(filter.$rI) {
					filter.$5K(dt);
				}
			}
		}
	}
	,$1Q: function(g) {
	}
	,$2Q: function() {
		if((this.$4O & 16) != 0) {
			return true;
		}
		var parentSprite = this.$3Q();
		if(parentSprite == null) {
			return false;
		}
		if(this.$$Q == parentSprite.$9Q) {
			return parentSprite.$2Q();
		} else {
			return true;
		}
	}
	,$3Q: function() {
		if(this.$pO == null) {
			return null;
		}
		var entity = this.$pO.$gB;
		while(entity != null) {
			var sprite = entity.$na[10];
			if(sprite != null) {
				return sprite;
			}
			entity = entity.$gB;
		}
		return null;
	}
	,get_pointerDown: function() {
		if(this.$_Q == null) {
			this.$_Q = new $CaE();
		}
		return this.$_Q;
	}
	,get_pointerUp: function() {
		if(this.$BR == null) {
			this.$BR = new $CaE();
		}
		return this.$BR;
	}
	,get_pointerIn: function() {
		if(this.$CR == null) {
			this.$CR = new $CaE();
		}
		return this.$CR;
	}
	,get_pointerOut: function() {
		if(this.$DR == null) {
			this.$DR = new $CaE();
		}
		return this.$DR;
	}
	,$4Q: function() {
		var _gthis = this;
		if(this.$ER != null) {
			return;
		}
		$CcE.$Gc.$qa.$Ac(function() {
			_gthis.$ER = $CcE.$Gc.$va.move.$eb(function(event) {
				var hit = event.$_g;
				while(hit != null) {
					if(hit == _gthis) {
						return;
					}
					hit = hit.$3Q();
				}
				if(_gthis.$DR != null && (_gthis.$4O & 64) != 0) {
					_gthis.$DR.$fb(event);
				}
				_gthis.$4O &= -65;
				if(_gthis.$ER != null) {
					_gthis.$ER.dispose();
					_gthis.$ER = null;
				}
			});
		});
	}
	,get_blendMode: function() {
		if(this.$FR != null) {
			return this.$FR.$TQ;
		} else {
			return null;
		}
	}
	,set_blendMode: function(blendMode) {
		if(this.$FR == null) {
			if(blendMode == null) {
				return null;
			}
			this.$FR = new $CjF();
		}
		return this.$FR.$TQ = blendMode;
	}
	,get_scissor: function() {
		if(this.$FR != null) {
			return this.$FR.$UQ;
		} else {
			return null;
		}
	}
	,set_scissor: function(scissor) {
		if(this.$FR == null) {
			if(scissor == null) {
				return null;
			}
			this.$FR = new $CjF();
		}
		return this.$FR.$UQ = scissor;
	}
	,get_tintR: function() {
		if(this.$FR == null) {
			this.$FR = new $CjF();
		}
		return this.$FR.$QQ;
	}
	,get_tintG: function() {
		if(this.$FR == null) {
			this.$FR = new $CjF();
		}
		return this.$FR.$RQ;
	}
	,get_tintB: function() {
		if(this.$FR == null) {
			this.$FR = new $CjF();
		}
		return this.$FR.$SQ;
	}
	,get_graphics: function() {
		if(this.$FR == null) {
			this.$FR = new $CjF();
		}
		var g = this.$FR.$VQ;
		if(g == null) {
			g = this.$FR.$VQ = new $C6E();
		}
		return g;
	}
	,set_mask: function(mask) {
		if(this.$FR == null) {
			if(mask == null) {
				return null;
			}
			this.$FR = new $CjF();
		}
		var oldMask = this.$FR.$WQ;
		if(oldMask != null) {
			var otherExtras = oldMask.$FR;
			if(otherExtras != null && otherExtras.$pf != null) {
				var snapshot = otherExtras.$pf;
				otherExtras.$pf = null;
				snapshot.set_mask(null);
			}
		}
		if(mask != null) {
			var otherExtras = mask.$FR;
			if(otherExtras == null) {
				otherExtras = mask.$FR = new $CjF();
			}
			if(otherExtras.$pf != null) {
				otherExtras.$pf.set_mask(null);
			}
			otherExtras.$pf = this;
		}
		return this.$FR.$WQ = mask;
	}
	,get_filters: function() {
		if(this.$FR == null) {
			this.$FR = new $CjF();
		}
		return this.$FR.$ZQ;
	}
	,set_filterBounds: function(filterBounds) {
		if(this.$FR == null) {
			if(filterBounds == null) {
				return null;
			}
			this.$FR = new $CjF();
		}
		return this.$FR.$aQ = filterBounds;
	}
	,set_maskEnabled: function(maskEnabled) {
		this.$4O = $CHJ.$kB(this.$4O,128,maskEnabled);
		return maskEnabled;
	}
	,set_visible: function(visible) {
		this.$4O = $CHJ.$kB(this.$4O,2,visible);
		return visible;
	}
	,set_pointerEnabled: function(pointerEnabled) {
		this.$4O = $CHJ.$kB(this.$4O,4,pointerEnabled);
		return pointerEnabled;
	}
	,$kP: function(event) {
		this.$6Q(event);
		if(this.$_Q != null) {
			this.$_Q.$fb(event);
		}
	}
	,$5Q: function(event) {
		this.$6Q(event);
		if(this.$AR != null) {
			this.$AR.$fb(event);
		}
	}
	,$6Q: function(event) {
		if((this.$4O & 64) != 0) {
			return;
		}
		this.$4O |= 64;
		if(this.$CR != null || this.$DR != null) {
			if(this.$CR != null) {
				this.$CR.$fb(event);
			}
			this.$4Q();
		}
	}
	,$lP: function(event) {
		if(event.$Ah._hx_index == 1) {
			if(this.$DR != null && (this.$4O & 64) != 0) {
				this.$DR.$fb(event);
			}
			this.$4O &= -65;
			if(this.$ER != null) {
				this.$ER.dispose();
				this.$ER = null;
			}
		}
		if(this.$BR != null) {
			this.$BR.$fb(event);
		}
	}
	,__class__: $C6B
	,__properties__: $extend($CtB.prototype.__properties__,{set_pointerEnabled:"set_pointerEnabled",set_visible:"set_visible",set_maskEnabled:"set_maskEnabled",set_filterBounds:"set_filterBounds",set_mask:"set_mask",get_$fQ:"get_$fQ",get_$eQ:"get_$eQ",get_$dQ:"get_$dQ",get_$bQ:"get_$bQ",get_$ZQ:"get_$ZQ",get_$VQ:"get_$VQ",set_$UQ:"set_$UQ",get_$UQ:"get_$UQ",set_$TQ:"set_$TQ",get_$TQ:"get_$TQ",get_$SQ:"get_$SQ",get_$RQ:"get_$RQ",get_$QQ:"get_$QQ"})
});
var $C7B = function(info) {
	$C6B.call(this);
	this.$bR = info;
	switch(info.$jJ._hx_index) {
	case 2:case 3:
		this.$cR = 0;
		this.$dR = 0;
		this.$eR = 0;
		this.$fR = 0;
		var _g = 0;
		var _g1 = info.$JL;
		while(_g < _g1.length) {
			var point = _g1[_g];
			++_g;
			if(point.$QC < this.$cR) {
				this.$cR = point.$QC;
			} else if(point.$QC > this.$eR) {
				this.$eR = point.$QC;
			}
			if(point.$RC < this.$dR) {
				this.$dR = point.$RC;
			} else if(point.$RC > this.$fR) {
				this.$fR = point.$RC;
			}
		}
		break;
	default:
		this.$cR = 0;
		this.$dR = 0;
		this.$eR = info.$IP;
		this.$fR = info.$JP;
	}
};
$hxClasses["$C7B"] = $C7B;
$C7B.__name__ = "$C7B";
$C7B.__super__ = $C6B;
$C7B.prototype = $extend($C6B.prototype,{
	$jQ: function(localX,localY) {
		if(localX >= this.$cR && localX <= this.$eR && localY >= this.$dR) {
			return localY <= this.$fR;
		} else {
			return false;
		}
	}
	,$hQ: function() {
		return this.$bR.$IP;
	}
	,$iQ: function() {
		return this.$bR.$JP;
	}
	,__class__: $C7B
});
var ez_display_AlphaTo = function() {
	this.ease = ez_TweenEase.Linear;
	this.duration = 0;
	this.to = 0;
	ez_TweenAction.call(this);
};
$hxClasses["ez.display.AlphaTo"] = ez_display_AlphaTo;
ez_display_AlphaTo.__name__ = "ez.display.AlphaTo";
ez_display_AlphaTo.__super__ = ez_TweenAction;
ez_display_AlphaTo.prototype = $extend(ez_TweenAction.prototype,{
	$RP: function(input) {
		return this.$qP(input,input.$na[10].$PQ,this.to,this.duration,this.ease);
	}
	,__class__: ez_display_AlphaTo
});
var ez_display_Hide = function() {
	kit_creator_CreatorAction.call(this);
};
$hxClasses["ez.display.Hide"] = ez_display_Hide;
ez_display_Hide.__name__ = "ez.display.Hide";
ez_display_Hide.__super__ = kit_creator_CreatorAction;
ez_display_Hide.prototype = $extend(kit_creator_CreatorAction.prototype,{
	$QP: function(input) {
		input.$na[10].set_visible(false);
	}
	,__class__: ez_display_Hide
});
var ez_display_MoveBy = function() {
	this.ease = ez_TweenEase.Linear;
	this.duration = 0;
	this.y = 0;
	this.x = 0;
	ez_TweenAction.call(this);
};
$hxClasses["ez.display.MoveBy"] = ez_display_MoveBy;
ez_display_MoveBy.__name__ = "ez.display.MoveBy";
ez_display_MoveBy.__super__ = ez_TweenAction;
ez_display_MoveBy.prototype = $extend(ez_TweenAction.prototype,{
	$RP: function(target) {
		this.$tP(target);
		var sprite = target.$na[10];
		return this.$rP(target,sprite.$QC,sprite.$QC.$Lb + this.x,sprite.$RC,sprite.$RC.$Lb + this.y,this.duration,this.ease);
	}
	,__class__: ez_display_MoveBy
});
var ez_display_MoveTo = function() {
	this.ease = ez_TweenEase.Linear;
	this.duration = 0;
	this.y = null;
	this.x = null;
	ez_TweenAction.call(this);
};
$hxClasses["ez.display.MoveTo"] = ez_display_MoveTo;
ez_display_MoveTo.__name__ = "ez.display.MoveTo";
ez_display_MoveTo.__super__ = ez_TweenAction;
ez_display_MoveTo.prototype = $extend(ez_TweenAction.prototype,{
	$RP: function(target) {
		this.$tP(target);
		var sprite = target.$na[10];
		return this.$rP(target,sprite.$QC,this.x != null ? this.x : sprite.$QC.$Lb,sprite.$RC,this.y != null ? this.y : sprite.$RC.$Lb,this.duration,this.ease);
	}
	,__class__: ez_display_MoveTo
});
var ez_display_PlayParticles = function() {
	this.offsetY = 0;
	this.offsetX = 0;
	this.particleSystem = null;
	this.amount = null;
	kit_creator_GroupAction.call(this);
};
$hxClasses["ez.display.PlayParticles"] = ez_display_PlayParticles;
ez_display_PlayParticles.__name__ = "ez.display.PlayParticles";
ez_display_PlayParticles.__super__ = kit_creator_GroupAction;
ez_display_PlayParticles.prototype = $extend(kit_creator_GroupAction.prototype,{
	$RP: function(target) {
		var assets = target.$Za(13);
		if(assets == null) {
			return null;
		}
		var emitter = assets.$tZ(this.particleSystem).$uk();
		emitter.$tj.$eb(function() {
			emitter.$pO.dispose();
		});
		if(this.amount != null) {
			emitter.set_maxParticles(this.amount);
		}
		var x = this.offsetX;
		var y = this.offsetY;
		var sprite = target.$na[10];
		if(sprite != null) {
			x += sprite.$QC.$Lb;
			y += sprite.$RC.$Lb;
		} else {
			var object = target.$na[5];
			if(object != null) {
				x += object.info.$QC;
				y += object.info.$RC;
			}
		}
		emitter.$sQ(x,y);
		target.$gB.$rB(new $CRE().$8(emitter));
		return kit_creator_CreatorAction.$TP(this.subActions,emitter.$pO);
	}
	,__class__: ez_display_PlayParticles
});
var ez_display_RotateBy = function() {
	this.ease = ez_TweenEase.Linear;
	this.duration = 0;
	this.by = 0;
	ez_TweenAction.call(this);
};
$hxClasses["ez.display.RotateBy"] = ez_display_RotateBy;
ez_display_RotateBy.__name__ = "ez.display.RotateBy";
ez_display_RotateBy.__super__ = ez_TweenAction;
ez_display_RotateBy.prototype = $extend(ez_TweenAction.prototype,{
	$RP: function(input) {
		this.$tP(input);
		var sprite = input.$na[10];
		return this.$qP(input,sprite.$FP,sprite.$FP.$Lb + this.by,this.duration,this.ease);
	}
	,__class__: ez_display_RotateBy
});
var ez_display_ScaleTo = function() {
	this.ease = ez_TweenEase.Linear;
	this.duration = 0;
	this.y = null;
	this.x = null;
	ez_TweenAction.call(this);
};
$hxClasses["ez.display.ScaleTo"] = ez_display_ScaleTo;
ez_display_ScaleTo.__name__ = "ez.display.ScaleTo";
ez_display_ScaleTo.__super__ = ez_TweenAction;
ez_display_ScaleTo.prototype = $extend(ez_TweenAction.prototype,{
	$RP: function(input) {
		var sprite = input.$na[10];
		return this.$rP(input,sprite.$NQ,this.x != null ? this.x : sprite.$NQ.$Lb,sprite.$OQ,this.y != null ? this.y : sprite.$OQ.$Lb,this.duration,this.ease);
	}
	,__class__: ez_display_ScaleTo
});
var ez_display_Show = function() {
	kit_creator_CreatorAction.call(this);
};
$hxClasses["ez.display.Show"] = ez_display_Show;
ez_display_Show.__name__ = "ez.display.Show";
ez_display_Show.__super__ = kit_creator_CreatorAction;
ez_display_Show.prototype = $extend(kit_creator_CreatorAction.prototype,{
	$QP: function(entity) {
		entity.$na[10].set_visible(true);
	}
	,__class__: ez_display_Show
});
var ez_property_PropertyLocation = $hxEnums["ez.property.PropertyLocation"] = { __ename__:true,__constructs__:null
	,Global: {_hx_name:"Global",_hx_index:0,__enum__:"ez.property.PropertyLocation",toString:$estr}
	,Scene: {_hx_name:"Scene",_hx_index:1,__enum__:"ez.property.PropertyLocation",toString:$estr}
	,Target: {_hx_name:"Target",_hx_index:2,__enum__:"ez.property.PropertyLocation",toString:$estr}
};
ez_property_PropertyLocation.__constructs__ = [ez_property_PropertyLocation.Global,ez_property_PropertyLocation.Scene,ez_property_PropertyLocation.Target];
var ez_property_PropertyAction = function() {
	this.location = ez_property_PropertyLocation.Scene;
	this.property = null;
	kit_creator_CreatorAction.call(this);
};
$hxClasses["ez.property.PropertyAction"] = ez_property_PropertyAction;
ez_property_PropertyAction.__name__ = "ez.property.PropertyAction";
ez_property_PropertyAction.$iR = function(type,value) {
	switch(type._hx_index) {
	case 0:
		var float = parseFloat(value);
		if(isNaN(float)) {
			return 0.0;
		} else {
			return float;
		}
		break;
	case 1:
		if(value != "" && value != "0") {
			return value != "false";
		} else {
			return false;
		}
		break;
	case 2:
		return value;
	}
};
ez_property_PropertyAction.__super__ = kit_creator_CreatorAction;
ez_property_PropertyAction.prototype = $extend(kit_creator_CreatorAction.prototype,{
	$QP: function(target) {
		if(this.property == null) {
			return;
		}
		var scope = this.$gR(target);
		var bag = scope.$na[2];
		if(bag == null) {
			bag = new $CuE();
			scope.$8(bag);
		}
		var newValue = this.$hR(target,bag.$jB(this.property));
		bag.$kB(this.property,newValue);
	}
	,$gR: function(target) {
		switch(this.location._hx_index) {
		case 0:
			return this.script.$pO.$Za(18).$pO;
		case 1:
			return this.script.$pO.$Za(3,$C0B).$pO;
		case 2:
			return target;
		}
	}
	,$hR: function(target,currentValue) {
		return null;
	}
	,__class__: ez_property_PropertyAction
});
var ez_property_AddToProperty = function() {
	this.value = 1;
	ez_property_PropertyAction.call(this);
};
$hxClasses["ez.property.AddToProperty"] = ez_property_AddToProperty;
ez_property_AddToProperty.__name__ = "ez.property.AddToProperty";
ez_property_AddToProperty.__super__ = ez_property_PropertyAction;
ez_property_AddToProperty.prototype = $extend(ez_property_PropertyAction.prototype,{
	$hR: function(target,currentValue) {
		return currentValue + this.value;
	}
	,__class__: ez_property_AddToProperty
});
var ez_property_IfOperator = $hxEnums["ez.property.IfOperator"] = { __ename__:true,__constructs__:null
	,Equals: {_hx_name:"Equals",_hx_index:0,__enum__:"ez.property.IfOperator",toString:$estr}
	,NotEquals: {_hx_name:"NotEquals",_hx_index:1,__enum__:"ez.property.IfOperator",toString:$estr}
	,LessThan: {_hx_name:"LessThan",_hx_index:2,__enum__:"ez.property.IfOperator",toString:$estr}
	,LessThanOrEquals: {_hx_name:"LessThanOrEquals",_hx_index:3,__enum__:"ez.property.IfOperator",toString:$estr}
	,GreaterThan: {_hx_name:"GreaterThan",_hx_index:4,__enum__:"ez.property.IfOperator",toString:$estr}
	,GreaterThanOrEquals: {_hx_name:"GreaterThanOrEquals",_hx_index:5,__enum__:"ez.property.IfOperator",toString:$estr}
};
ez_property_IfOperator.__constructs__ = [ez_property_IfOperator.Equals,ez_property_IfOperator.NotEquals,ez_property_IfOperator.LessThan,ez_property_IfOperator.LessThanOrEquals,ez_property_IfOperator.GreaterThan,ez_property_IfOperator.GreaterThanOrEquals];
var ez_property_PropertyType = $hxEnums["ez.property.PropertyType"] = { __ename__:true,__constructs__:null
	,Number: {_hx_name:"Number",_hx_index:0,__enum__:"ez.property.PropertyType",toString:$estr}
	,Boolean: {_hx_name:"Boolean",_hx_index:1,__enum__:"ez.property.PropertyType",toString:$estr}
	,String: {_hx_name:"String",_hx_index:2,__enum__:"ez.property.PropertyType",toString:$estr}
};
ez_property_PropertyType.__constructs__ = [ez_property_PropertyType.Number,ez_property_PropertyType.Boolean,ez_property_PropertyType.String];
var ez_property_IfProperty = function() {
	this._value = null;
	this.value = "";
	this.type = ez_property_PropertyType.Number;
	this.operator = ez_property_IfOperator.Equals;
	kit_creator_GroupAction.call(this);
};
$hxClasses["ez.property.IfProperty"] = ez_property_IfProperty;
ez_property_IfProperty.__name__ = "ez.property.IfProperty";
ez_property_IfProperty.__super__ = kit_creator_GroupAction;
ez_property_IfProperty.prototype = $extend(kit_creator_GroupAction.prototype,{
	$RP: function(target) {
		var currentValue = $CuE.$f(target,this.property);
		if(currentValue == null) {
			currentValue = 0;
		}
		if(this._value == null) {
			this._value = ez_property_PropertyAction.$iR(this.type,this.value);
		}
		var result;
		switch(this.operator._hx_index) {
		case 0:
			result = currentValue == this._value;
			break;
		case 1:
			result = currentValue != this._value;
			break;
		case 2:
			result = currentValue < this._value;
			break;
		case 3:
			result = currentValue <= this._value;
			break;
		case 4:
			result = currentValue > this._value;
			break;
		case 5:
			result = currentValue >= this._value;
			break;
		}
		if(result) {
			return kit_creator_CreatorAction.$TP(this.subActions,target);
		} else {
			return null;
		}
	}
	,__class__: ez_property_IfProperty
});
var ez_property_SetProperty = function() {
	this._value = null;
	this.value = "";
	this.type = ez_property_PropertyType.Number;
	ez_property_PropertyAction.call(this);
};
$hxClasses["ez.property.SetProperty"] = ez_property_SetProperty;
ez_property_SetProperty.__name__ = "ez.property.SetProperty";
ez_property_SetProperty.__super__ = ez_property_PropertyAction;
ez_property_SetProperty.prototype = $extend(ez_property_PropertyAction.prototype,{
	$hR: function(target,currentValue) {
		if(this._value == null) {
			this._value = ez_property_PropertyAction.$iR(this.type,this.value);
		}
		return this._value;
	}
	,__class__: ez_property_SetProperty
});
var ez_scene_SceneTransition = $hxEnums["ez.scene.SceneTransition"] = { __ename__:true,__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"ez.scene.SceneTransition",toString:$estr}
	,Slide: {_hx_name:"Slide",_hx_index:1,__enum__:"ez.scene.SceneTransition",toString:$estr}
	,Fade: {_hx_name:"Fade",_hx_index:2,__enum__:"ez.scene.SceneTransition",toString:$estr}
	,Wipe: {_hx_name:"Wipe",_hx_index:3,__enum__:"ez.scene.SceneTransition",toString:$estr}
	,Dream: {_hx_name:"Dream",_hx_index:4,__enum__:"ez.scene.SceneTransition",toString:$estr}
	,Pixelate: {_hx_name:"Pixelate",_hx_index:5,__enum__:"ez.scene.SceneTransition",toString:$estr}
	,Ripple: {_hx_name:"Ripple",_hx_index:6,__enum__:"ez.scene.SceneTransition",toString:$estr}
};
ez_scene_SceneTransition.__constructs__ = [ez_scene_SceneTransition.None,ez_scene_SceneTransition.Slide,ez_scene_SceneTransition.Fade,ez_scene_SceneTransition.Wipe,ez_scene_SceneTransition.Dream,ez_scene_SceneTransition.Pixelate,ez_scene_SceneTransition.Ripple];
var ez_scene_SceneAction = function() {
	this.duration = 0.5;
	this.transition = ez_scene_SceneTransition.None;
	kit_creator_CreatorAction.call(this);
};
$hxClasses["ez.scene.SceneAction"] = ez_scene_SceneAction;
ez_scene_SceneAction.__name__ = "ez.scene.SceneAction";
ez_scene_SceneAction.$oR = function(set1,set2) {
	var result = [];
	var _g = 0;
	while(_g < set1.length) {
		var item = set1[_g];
		++_g;
		if(set2.indexOf(item) < 0) {
			result.push(item);
		}
	}
	return result;
};
ez_scene_SceneAction.__super__ = kit_creator_CreatorAction;
ez_scene_SceneAction.prototype = $extend(kit_creator_CreatorAction.prototype,{
	$jR: function(name,opaque) {
		if(opaque == null) {
			opaque = true;
		}
		return new $C0B(name,opaque);
	}
	,$kR: function() {
		return [];
	}
	,$lR: function(name,loadingScene,disposeUnused,push) {
		var _gthis = this;
		var assets = this.script.$pO.$Za(13);
		var director = this.$nR();
		var main = new $C8B(assets,name,this.$kR());
		var interstitial = loadingScene != null ? new $C8B(assets,loadingScene,[]) : null;
		var currentlyUsed = [];
		if(disposeUnused) {
			var _g = 0;
			var _g1 = director.$bi;
			while(_g < _g1.length) {
				var value = _g1[_g++].$na[3];
				var scene = ((value) instanceof $C0B) ? value : null;
				if(scene != null) {
					currentlyUsed = currentlyUsed.concat($CvE.$2d(scene.$nP));
				}
			}
		}
		var topScene = director.get_topScene().$Ga;
		if(main.$rR.length > 0 && interstitial != null) {
			if(topScene != null) {
				topScene.$1O(interstitial);
			}
			if(disposeUnused) {
				interstitial.$sR = ez_scene_SceneAction.$oR(currentlyUsed,main.$qR.concat(interstitial.$qR));
				main.$sR = ez_scene_SceneAction.$oR(interstitial.$qR,main.$qR);
			}
			return interstitial.$tR().$y2(function(_) {
				var loadingScene1 = _gthis.$jR(loadingScene);
				loadingScene1.$1O(main);
				if(push) {
					director.$B2(loadingScene1);
				} else {
					director.$E2(loadingScene1);
				}
				loadingScene1.$pO.$Wa();
				var bag = loadingScene1.$pO.$na[2];
				if(bag == null) {
					bag = new $CuE();
					loadingScene1.$pO.$8(bag);
				}
				bag.$kB("progress",0);
				return main.$tR().$42(function(progress) {
					bag.$kB("progress",progress * 100 | 0);
				});
			});
		} else {
			if(topScene != null) {
				topScene.$1O(main);
			}
			if(disposeUnused) {
				main.$sR = ez_scene_SceneAction.$oR(currentlyUsed,main.$qR);
			}
			director.get_topScene();
			var bag = director.get_topScene().$na[2];
			if(bag == null) {
				var tmp = director.get_topScene();
				bag = new $CuE();
				tmp.$8(bag);
			}
			bag.$kB("progress",0);
			return main.$tR().$42(function(progress) {
				bag.$kB("progress",progress * 100 | 0);
			});
		}
	}
	,$mR: function() {
		switch(this.transition._hx_index) {
		case 0:
			return null;
		case 1:
			return new $CzI(this.duration);
		case 2:
			return new $CwI(this.duration);
		case 3:
			return new $CsI(this.duration);
		case 4:
			return new $CvI(this.duration);
		case 5:
			return new $CxI(this.duration);
		case 6:
			return new $CyI(this.duration);
		}
	}
	,$nR: function() {
		return this.script.$pO.$Za(17);
	}
	,__class__: ez_scene_SceneAction
});
var ez_scene_ChangeScene = function() {
	this.disposeUnusedAssets = true;
	this.loadingScene = null;
	this.onLoadError = null;
	ez_scene_SceneAction.call(this);
};
$hxClasses["ez.scene.ChangeScene"] = ez_scene_ChangeScene;
ez_scene_ChangeScene.__name__ = "ez.scene.ChangeScene";
ez_scene_ChangeScene.__super__ = ez_scene_SceneAction;
ez_scene_ChangeScene.prototype = $extend(ez_scene_SceneAction.prototype,{
	$RP: function(target) {
		var _gthis = this;
		if(this.scene == null) {
			return null;
		}
		var director = this.$nR();
		return this.$lR(this.scene,this.loadingScene,this.disposeUnusedAssets,false).$y2(function(_) {
			director.$E2(_gthis.$jR(_gthis.scene),_gthis.$mR());
		}).$z2(function(error) {
			if(_gthis.onLoadError != null && _gthis.script.$pO != null) {
				_gthis.script.$pO.$Oa(_gthis.onLoadError,target);
			}
			return new $CKJ().$12(error);
		});
	}
	,__class__: ez_scene_ChangeScene
});
var $C8B = function(assets,name,additionalPackNames) {
	this.$sR = [];
	this.$uR = assets;
	this.$nP = name;
	this.$qR = $CvE.$2d(name).concat(additionalPackNames);
	var _this = this.$qR;
	var _g = [];
	var _g1 = 0;
	while(_g1 < _this.length) {
		var v = _this[_g1];
		++_g1;
		if(!assets.$rZ(v)) {
			_g.push(v);
		}
	}
	this.$rR = _g;
};
$hxClasses["$C8B"] = $C8B;
$C8B.__name__ = "$C8B";
$C8B.__interfaces__ = [$CsB];
$C8B.prototype = {
	$tR: function() {
		var _this = this.$rR;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = this.$uR.$tR(_this[i]);
		}
		return $CKJ.$A3(result);
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.$sR;
		while(_g < _g1.length) this.$uR.$qZ(_g1[_g++]);
	}
	,__class__: $C8B
};
var $CCC = function() { };
$hxClasses["$CCC"] = $CCC;
$CCC.__name__ = "$CCC";
$CCC.__isInterface__ = true;
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new $COC(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new $COC(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native"}
});
var $COC = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.$bT = value;
};
$hxClasses["$COC"] = $COC;
$COC.__name__ = "$COC";
$COC.__super__ = haxe_Exception;
$COC.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.$bT;
	}
	,__class__: $COC
});
var $CUC = function() {
	this.h = { };
};
$hxClasses["$CUC"] = $CUC;
$CUC.__name__ = "$CUC";
$CUC.__interfaces__ = [$CCC];
$CUC.prototype = {
	remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(key | 0);
		return new $CmC(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: $CUC
};
var $CaC = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["$CaC"] = $CaC;
$CaC.__name__ = "$CaC";
$CaC.__interfaces__ = [$CCC];
$CaC.prototype = {
	set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new $CmC(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: $CaC
};
var $CcC = function() {
	this.h = Object.create(null);
};
$hxClasses["$CcC"] = $CcC;
$CcC.__name__ = "$CcC";
$CcC.__interfaces__ = [$CCC];
$CcC.prototype = {
	iterator: function() {
		return new $CeC(this.h);
	}
	,__class__: $CcC
};
var $CdC = function(h) {
	this.h = h;
	this.$1R = Object.keys(h);
	this.$7 = this.$1R.length;
	this.$AU = 0;
};
$hxClasses["$CdC"] = $CdC;
$CdC.__name__ = "$CdC";
$CdC.prototype = {
	hasNext: function() {
		return this.$AU < this.$7;
	}
	,next: function() {
		return this.$1R[this.$AU++];
	}
	,__class__: $CdC
};
var $CeC = function(h) {
	this.h = h;
	this.$1R = Object.keys(h);
	this.$7 = this.$1R.length;
	this.$AU = 0;
};
$hxClasses["$CeC"] = $CeC;
$CeC.__name__ = "$CeC";
$CeC.prototype = {
	hasNext: function() {
		return this.$AU < this.$7;
	}
	,next: function() {
		return this.h[this.$1R[this.$AU++]];
	}
	,__class__: $CeC
};
var $CmC = function(array) {
	this.$AU = 0;
	this.$Q = array;
};
$hxClasses["$CmC"] = $CmC;
$CmC.__name__ = "$CmC";
$CmC.prototype = {
	hasNext: function() {
		return this.$AU < this.$Q.length;
	}
	,next: function() {
		return this.$Q[this.$AU++];
	}
	,__class__: $CmC
};
var $C2C = function() { };
$hxClasses["$C2C"] = $C2C;
$C2C.__name__ = "$C2C";
$C2C.$ME = function(t) {
	var meta = $C2C.$BV(t);
	if(meta == null || meta.obj == null) {
		return { };
	} else {
		return meta.obj;
	}
};
$C2C.$BV = function(t) {
	return t.__meta__;
};
var $C3C = {};
$C3C.$EV = function(this1,name) {
	var x = this1.$oB(name).next();
	if(x == null) {
		var xname;
		if(this1.$dB == $CL.$cB) {
			xname = "Document";
		} else {
			if(this1.$dB != $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.$dB == null ? "null" : $CK.toString(this1.$dB)));
			}
			xname = this1.$eB;
		}
		throw haxe_Exception.thrown(xname + " is missing element " + name);
	}
	if(x.$dB != $CL.$cB && x.$dB != $CL.$WB) {
		throw haxe_Exception.thrown("Invalid nodeType " + (x.$dB == null ? "null" : $CK.toString(x.$dB)));
	}
	return x;
};
var $C4C = {};
$C4C.$EV = function(this1,name) {
	if(this1.$dB == $CL.$cB) {
		throw haxe_Exception.thrown("Cannot access document attribute " + name);
	}
	var v = this1.$jB(name);
	if(v == null) {
		if(this1.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.$dB == null ? "null" : $CK.toString(this1.$dB)));
		}
		throw haxe_Exception.thrown(this1.$eB + " is missing attribute " + name);
	}
	return v;
};
var $C8C = {};
$C8C.__properties__ = {get_$GV:"get_$GV"};
$C8C.get_innerData = function(this1) {
	if(this1.$dB != $CL.$cB && this1.$dB != $CL.$WB) {
		throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this1.$dB == null ? "null" : $CK.toString(this1.$dB)));
	}
	var _this = this1.$hB;
	if(0 >= _this.length) {
		var tmp;
		if(this1.$dB == $CL.$cB) {
			tmp = "Document";
		} else {
			if(this1.$dB != $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.$dB == null ? "null" : $CK.toString(this1.$dB)));
			}
			tmp = this1.$eB;
		}
		throw haxe_Exception.thrown(tmp + " does not have data");
	}
	var v = _this[0];
	if(1 < _this.length) {
		var n = _this[1];
		var tmp;
		if(v.$dB == $CL.$XB && n.$dB == $CL.$YB) {
			if(v.$dB == $CL.$cB || v.$dB == $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (v.$dB == null ? "null" : $CK.toString(v.$dB)));
			}
			tmp = $CJ.$MB(v.$fB) == "";
		} else {
			tmp = false;
		}
		if(tmp) {
			if(2 >= _this.length) {
				if(n.$dB == $CL.$cB || n.$dB == $CL.$WB) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n.$dB == null ? "null" : $CK.toString(n.$dB)));
				}
				return n.$fB;
			}
			var n2 = _this[2];
			var tmp;
			if(n2.$dB == $CL.$XB) {
				if(n2.$dB == $CL.$cB || n2.$dB == $CL.$WB) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n2.$dB == null ? "null" : $CK.toString(n2.$dB)));
				}
				tmp = $CJ.$MB(n2.$fB) == "";
			} else {
				tmp = false;
			}
			if(tmp && 3 >= _this.length) {
				if(n.$dB == $CL.$cB || n.$dB == $CL.$WB) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n.$dB == null ? "null" : $CK.toString(n.$dB)));
				}
				return n.$fB;
			}
		}
		var tmp;
		if(this1.$dB == $CL.$cB) {
			tmp = "Document";
		} else {
			if(this1.$dB != $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.$dB == null ? "null" : $CK.toString(this1.$dB)));
			}
			tmp = this1.$eB;
		}
		throw haxe_Exception.thrown(tmp + " does not only have data");
	}
	if(v.$dB != $CL.$XB && v.$dB != $CL.$YB) {
		var tmp;
		if(this1.$dB == $CL.$cB) {
			tmp = "Document";
		} else {
			if(this1.$dB != $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.$dB == null ? "null" : $CK.toString(this1.$dB)));
			}
			tmp = this1.$eB;
		}
		throw haxe_Exception.thrown(tmp + " does not have data");
	}
	if(v.$dB == $CL.$cB || v.$dB == $CL.$WB) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (v.$dB == null ? "null" : $CK.toString(v.$dB)));
	}
	return v.$fB;
};
var $C$C = function(message,xml,position) {
	this.$iV = xml;
	this.$fV = message;
	this.$4C = position;
	this.$gV = 1;
	this.$hV = 0;
	var _g = 0;
	while(_g < position) {
		var c = xml.charCodeAt(_g++);
		if(c == 10) {
			this.$gV++;
			this.$hV = 0;
		} else if(c != 13) {
			this.$hV++;
		}
	}
};
$hxClasses["$C$C"] = $C$C;
$C$C.__name__ = "$C$C";
$C$C.prototype = {
	toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ": " + this.$fV + " at line " + this.$gV + " char " + this.$hV;
	}
	,__class__: $C$C
};
var $C_$C = function() { };
$hxClasses["$C_C"] = $C_$C;
$C_$C.__name__ = "$C_C";
$C_$C.$vB = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = $CL.$2B();
	$C_$C.$kV(str,strict,0,doc);
	return doc;
};
$C_$C.$kV = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var buf = new $CH();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(p < str.length) {
		var c = str.charCodeAt(p);
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw haxe_Exception.thrown(new $C$C("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw haxe_Exception.thrown(new $C$C("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw haxe_Exception.thrown(new $C$C("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw haxe_Exception.thrown(new $C$C("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw haxe_Exception.thrown(new $C$C("Expected node name",str,p));
				}
				xml = $CL.$wB(HxOverrides.substr(str,start,p - start));
				parent.$rB(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new $C$C("Expected attribute name",str,p));
				}
				aname = HxOverrides.substr(str,start,p - start);
				if(xml.$W(aname)) {
					throw haxe_Exception.thrown(new $C$C("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw haxe_Exception.thrown(new $C$C("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new $CH();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw haxe_Exception.thrown(new $C$C("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.$6 += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw haxe_Exception.thrown(new $C$C("Invalid unescaped " + String.fromCodePoint(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.$6 += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.$6;
					buf = new $CH();
					xml.$kB(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.$6 += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.$6;
					buf = new $CH();
					xml.$kB(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = $C_$C.$kV(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new $C$C("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent == null || parent.$dB != 0) {
					throw haxe_Exception.thrown(new $C$C("Unexpected </" + v + ">, tag is not open",str,p));
				}
				if(parent.$dB != $CL.$WB) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.$dB == null ? "null" : $CK.toString(parent.$dB)));
				}
				if(v != parent.$eB) {
					if(parent.$dB != $CL.$WB) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.$dB == null ? "null" : $CK.toString(parent.$dB)));
					}
					throw haxe_Exception.thrown(new $C$C("Expected </" + parent.$eB + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw haxe_Exception.thrown(new $C$C("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.$rB($CL.$xB(""));
				}
				return p;
			} else {
				throw haxe_Exception.thrown(new $C$C("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.$6 += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = $CL.$xB(buf.$6);
				buf = new $CH();
				parent.$rB(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.$6 += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				parent.$rB($CL.$1B(HxOverrides.substr(str,start + 1,p - start - 2)));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.$rB($CL.$zB(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.$rB($CL.$0B(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				parent.$rB($CL.$yB(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? $CG.$3("0" + HxOverrides.substr(s,1,s.length - 1)) : $CG.$3(HxOverrides.substr(s,1,s.length - 1));
					buf.$6 += String.fromCodePoint(c1);
				} else if(!Object.prototype.hasOwnProperty.call($C_$C.$jV.h,s)) {
					if(strict) {
						throw haxe_Exception.thrown(new $C$C("Undefined entity: " + s,str,p));
					}
					buf.$6 += $CG.$1("&" + s + ";");
				} else {
					buf.$6 += $CG.$1($C_$C.$jV.h[s]);
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw haxe_Exception.thrown(new $C$C("Invalid character in entity: " + String.fromCodePoint(c),str,p));
				}
				buf.$6 += String.fromCodePoint(38);
				var len5 = p - start;
				buf.$6 += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				--p;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		++p;
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(parent.$dB == 0) {
			if(parent.$dB != $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.$dB == null ? "null" : $CK.toString(parent.$dB)));
			}
			throw haxe_Exception.thrown(new $C$C("Unclosed node <" + parent.$eB + ">",str,p));
		}
		if(p != start || nsubs == 0) {
			var len = p - start;
			buf.$6 += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
			parent.$rB($CL.$xB(buf.$6));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.$6 += String.fromCodePoint(38);
		var len = p - start;
		buf.$6 += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
		parent.$rB($CL.$xB(buf.$6));
		++nsubs;
		return p;
	}
	throw haxe_Exception.thrown(new $C$C("Unexpected end",str,p));
};
var $CAD = function(pretty) {
	this.$mV = new $CH();
	this.$nV = pretty;
};
$hxClasses["$CAD"] = $CAD;
$CAD.__name__ = "$CAD";
$CAD.$sV = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new $CAD(pretty);
	printer.$oV(xml,"");
	return printer.$mV.$6;
};
$CAD.prototype = {
	$oV: function(value,tabs) {
		switch(value.$dB) {
		case 0:
			this.$mV.$6 += $CG.$1(tabs + "<");
			if(value.$dB != $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.$dB == null ? "null" : $CK.toString(value.$dB)));
			}
			this.$mV.$6 += $CG.$1(value.$eB);
			var attribute = value.$mB();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.$mV.$6 += $CG.$1(" " + attribute1 + "=\"");
				var input = $CJ.$EB(value.$jB(attribute1),true);
				this.$mV.$6 += $CG.$1(input);
				this.$mV.$6 += "\"";
			}
			if(this.$rV(value)) {
				this.$mV.$6 += ">";
				if(this.$nV) {
					this.$mV.$6 += "\n";
				}
				if(value.$dB != $CL.$cB && value.$dB != $CL.$WB) {
					throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.$dB == null ? "null" : $CK.toString(value.$dB)));
				}
				var _this = value.$hB;
				var _g_current = 0;
				while(_g_current < _this.length) this.$oV(_this[_g_current++],this.$nV ? tabs + "\t" : tabs);
				this.$mV.$6 += $CG.$1(tabs + "</");
				if(value.$dB != $CL.$WB) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.$dB == null ? "null" : $CK.toString(value.$dB)));
				}
				this.$mV.$6 += $CG.$1(value.$eB);
				this.$mV.$6 += ">";
				if(this.$nV) {
					this.$mV.$6 += "\n";
				}
			} else {
				this.$mV.$6 += "/>";
				if(this.$nV) {
					this.$mV.$6 += "\n";
				}
			}
			break;
		case 1:
			if(value.$dB == $CL.$cB || value.$dB == $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.$dB == null ? "null" : $CK.toString(value.$dB)));
			}
			var nodeValue = value.$fB;
			if(nodeValue.length != 0) {
				var input = tabs + $CJ.$EB(nodeValue);
				this.$mV.$6 += $CG.$1(input);
				if(this.$nV) {
					this.$mV.$6 += "\n";
				}
			}
			break;
		case 2:
			this.$mV.$6 += $CG.$1(tabs + "<![CDATA[");
			if(value.$dB == $CL.$cB || value.$dB == $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.$dB == null ? "null" : $CK.toString(value.$dB)));
			}
			this.$mV.$6 += $CG.$1(value.$fB);
			this.$mV.$6 += "]]>";
			if(this.$nV) {
				this.$mV.$6 += "\n";
			}
			break;
		case 3:
			if(value.$dB == $CL.$cB || value.$dB == $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.$dB == null ? "null" : $CK.toString(value.$dB)));
			}
			var commentContent = value.$fB;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.$mV.$6 += tabs == null ? "null" : "" + tabs;
			this.$mV.$6 += $CG.$1($CJ.$MB(commentContent));
			if(this.$nV) {
				this.$mV.$6 += "\n";
			}
			break;
		case 4:
			if(value.$dB == $CL.$cB || value.$dB == $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.$dB == null ? "null" : $CK.toString(value.$dB)));
			}
			this.$mV.$6 += $CG.$1("<!DOCTYPE " + value.$fB + ">");
			if(this.$nV) {
				this.$mV.$6 += "\n";
			}
			break;
		case 5:
			if(value.$dB == $CL.$cB || value.$dB == $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.$dB == null ? "null" : $CK.toString(value.$dB)));
			}
			this.$mV.$6 += $CG.$1("<?" + value.$fB + "?>");
			if(this.$nV) {
				this.$mV.$6 += "\n";
			}
			break;
		case 6:
			if(value.$dB != $CL.$cB && value.$dB != $CL.$WB) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.$dB == null ? "null" : $CK.toString(value.$dB)));
			}
			var _this = value.$hB;
			var _g_current = 0;
			while(_g_current < _this.length) this.$oV(_this[_g_current++],tabs);
			break;
		}
	}
	,$rV: function(value) {
		if(value.$dB != $CL.$cB && value.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.$dB == null ? "null" : $CK.toString(value.$dB)));
		}
		var _this = value.$hB;
		var _g_current = 0;
		while(_g_current < _this.length) {
			var child = _this[_g_current++];
			switch(child.$dB) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child.$dB == $CL.$cB || child.$dB == $CL.$WB) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (child.$dB == null ? "null" : $CK.toString(child.$dB)));
				}
				if($CJ.$KB(child.$fB).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: $CAD
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	while(true) {
		if(cc == null) {
			return false;
		}
		if(cc == cl) {
			return true;
		}
		var intf = cc.__interfaces__;
		if(intf != null) {
			var _g = 0;
			var _g1 = intf.length;
			while(_g < _g1) {
				var i = intf[_g++];
				if(i == cl || js_Boot.__interfLoop(i,cl)) {
					return true;
				}
			}
		}
		cc = cc.__super__;
	}
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + $CG.$1(o) + " to " + $CG.$1(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var $CJD = function() { };
$hxClasses["$CJD"] = $CJD;
$CJD.__name__ = "$CJD";
$CJD.$TW = function(canvas,attribs) {
	var ctx = canvas.getContext("webgl",attribs);
	if(ctx != null) {
		return ctx;
	}
	var ctx = canvas.getContext("experimental-webgl",attribs);
	if(ctx != null) {
		return ctx;
	}
	return null;
};
var $CAE = function() { };
$hxClasses["$CAE"] = $CAE;
$CAE.__name__ = "$CAE";
$CAE.$RZ = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var $CKE = function() { };
$hxClasses["$CKE"] = $CKE;
$CKE.__name__ = "$CKE";
$CKE.__isInterface__ = true;
$CKE.__interfaces__ = [$CsB];
$CKE.prototype = {
	__class__: $CKE
};
var $CLE = function() {
	this.$2Z = new $CcC();
	this.$1Z = [];
	this.$nZ = -1;
	this.$mZ = null;
	this.$lZ = null;
	$CtB.call(this);
};
$hxClasses["$CLE"] = $CLE;
$CLE.__name__ = "$CLE";
$CLE.__interfaces__ = [$CKE];
$CLE.__super__ = $CtB;
$CLE.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 13;
	}
	,$tR: function(folder,preferredPixelScale) {
		if(preferredPixelScale == null) {
			preferredPixelScale = -1;
		}
		if(preferredPixelScale <= 0) {
			preferredPixelScale = this.$nZ;
		}
		var manifest = $CnE.$Id(folder,preferredPixelScale);
		if(this.$lZ != null) {
			manifest.$Fd = this.$lZ;
		}
		if(this.$mZ != null) {
			manifest.$Gd = this.$mZ;
		}
		return this.$oZ(manifest,folder);
	}
	,$oZ: function(manifest,name) {
		var _gthis = this;
		if(name != null) {
			var record = this.$2Z.h[name];
			if(record == null) {
				record = new $CNE();
				this.$2Z.h[name] = record;
				record.$_Z = $CcE.$Gc.loadAssetPack(manifest).$y2(function(pack) {
					if(_gthis.$2Z.h[name] == record) {
						_gthis.$1Z.push(new $CME(pack));
					}
					return record.$3Z = pack;
				});
			}
			return record.$_Z;
		}
		return $CcE.$Gc.loadAssetPack(manifest).$y2(function(pack) {
			_gthis.$pZ(pack);
			return pack;
		});
	}
	,$pZ: function(pack) {
		this.$1Z.push(new $CME(pack));
		return this;
	}
	,$qZ: function(name) {
		var record = this.$2Z.h[name];
		if(record != null) {
			var _this = this.$2Z;
			if(Object.prototype.hasOwnProperty.call(_this.h,name)) {
				delete(_this.h[name]);
			}
			if(record.$3Z != null) {
				var _g = 0;
				var _g1 = this.$1Z.length;
				while(_g < _g1) {
					var ii = _g++;
					if(this.$1Z[ii].$3Z == record.$3Z) {
						this.$1Z.splice(ii,1);
						break;
					}
				}
				record.$3Z.dispose();
			}
		}
	}
	,$rZ: function(name) {
		var record = this.$2Z.h[name];
		if(record != null) {
			return record.$3Z != null;
		} else {
			return false;
		}
	}
	,getTexture: function(name,required) {
		if(required == null) {
			required = true;
		}
		var _g = 0;
		var _g1 = this.$1Z;
		while(_g < _g1.length) {
			var texture = _g1[_g++].$3Z.getTexture(name,false);
			if(texture != null) {
				return texture;
			}
		}
		var assets = this.$0Z();
		if(assets != null) {
			return assets.getTexture(name,required);
		}
		return null;
	}
	,getSound: function(name,required) {
		if(required == null) {
			required = true;
		}
		var _g = 0;
		var _g1 = this.$1Z;
		while(_g < _g1.length) {
			var sound = _g1[_g++].$3Z.getSound(name,false);
			if(sound != null) {
				return sound;
			}
		}
		var assets = this.$0Z();
		if(assets != null) {
			return assets.getSound(name,required);
		}
		return null;
	}
	,getFile: function(name,required) {
		if(required == null) {
			required = true;
		}
		var _g = 0;
		var _g1 = this.$1Z;
		while(_g < _g1.length) {
			var file = _g1[_g++].$3Z.getFile(name,false);
			if(file != null) {
				return file;
			}
		}
		var assets = this.$0Z();
		if(assets != null) {
			return assets.getFile(name,required);
		}
		return null;
	}
	,getVectorFont: function(name,required) {
		if(required == null) {
			required = true;
		}
		var _g = 0;
		var _g1 = this.$1Z;
		while(_g < _g1.length) {
			var font = _g1[_g++].$3Z.getVectorFont(name,false);
			if(font != null) {
				return font;
			}
		}
		var assets = this.$0Z();
		if(assets != null) {
			return assets.getVectorFont(name,required);
		}
		return null;
	}
	,getVideo: function(name,required) {
		if(required == null) {
			required = true;
		}
		var _g = 0;
		var _g1 = this.$1Z;
		while(_g < _g1.length) {
			var font = _g1[_g++].$3Z.getVideo(name,false);
			if(font != null) {
				return font;
			}
		}
		var assets = this.$0Z();
		if(assets != null) {
			return assets.getVideo(name,required);
		}
		return null;
	}
	,$tZ: function(name,required) {
		if(required == null) {
			required = true;
		}
		var _g = 0;
		var _g1 = this.$1Z;
		while(_g < _g1.length) {
			var entry = _g1[_g];
			++_g;
			var particle = entry.$5Z.h[name];
			if(particle != null) {
				return particle;
			}
			if(entry.$3Z.getFile(name + ".pex",false) != null) {
				var particle1 = new $CbG(this,name);
				entry.$5Z.h[name] = particle1;
				return particle1.$pd();
			}
		}
		var assets = this.$0Z();
		if(assets != null) {
			return assets.$tZ(name,required);
		}
		return null;
	}
	,$vZ: function(name,required) {
		if(required == null) {
			required = true;
		}
		var _g = 0;
		var _g1 = this.$1Z;
		while(_g < _g1.length) {
			var entry = _g1[_g];
			++_g;
			var scene = entry.$7Z.h[name];
			if(scene != null) {
				return scene;
			}
			if(entry.$3Z.getFile(name + ".scene",false) != null) {
				var scene1 = new $CvE(this,name);
				entry.$7Z.h[name] = scene1;
				return scene1.$pd();
			}
		}
		var assets = this.$0Z();
		if(assets != null) {
			return assets.$vZ(name,required);
		}
		return null;
	}
	,$wZ: function(name,required) {
		if(required == null) {
			required = true;
		}
		var _g = 0;
		var _g1 = this.$1Z;
		while(_g < _g1.length) {
			var entry = _g1[_g];
			++_g;
			var symbol = entry.$8Z.h[name];
			if(symbol != null) {
				return symbol;
			}
			if(entry.$3Z.getFile(name + ".symbol",false) != null) {
				var symbol1 = new $CvE(this,name,true);
				entry.$8Z.h[name] = symbol1;
				return symbol1.$pd();
			}
		}
		var assets = this.$0Z();
		if(assets != null) {
			return assets.$wZ(name,required);
		}
		return null;
	}
	,$0Z: function() {
		if(this.$pO == null || this.$pO.$gB == null) {
			return null;
		} else {
			return this.$pO.$gB.$Za(13);
		}
	}
	,dispose: function() {
		$CtB.prototype.dispose.call(this);
		var snapshot = this.$1Z;
		this.$1Z = [];
		this.$2Z = new $CcC();
		var _g = 0;
		while(_g < snapshot.length) snapshot[_g++].$3Z.dispose();
	}
	,__class__: $CLE
});
var $CME = function(pack) {
	this.$8Z = new $CcC();
	this.$7Z = new $CcC();
	this.$5Z = new $CcC();
	this.$3Z = pack;
};
$hxClasses["$CME"] = $CME;
$CME.__name__ = "$CME";
$CME.prototype = {
	__class__: $CME
};
var $CNE = function() {
};
$hxClasses["$CNE"] = $CNE;
$CNE.__name__ = "$CNE";
$CNE.prototype = {
	__class__: $CNE
};
var $CPE = function() {
	this.$Ba = null;
	this.$Aa = null;
};
$hxClasses["$CPE"] = $CPE;
$CPE.__name__ = "$CPE";
$CPE.prototype = {
	$Ca: function() {
		var snapshot = this.$Ba;
		if(snapshot != null) {
			this.$Ba = null;
			var _g = 0;
			while(_g < snapshot.length) snapshot[_g++].dispose();
		}
		this.$Aa = null;
	}
	,__class__: $CPE
};
var $CQE = function() {
};
$hxClasses["$CQE"] = $CQE;
$CQE.__name__ = "$CQE";
$CQE.prototype = {
	__class__: $CQE
};
var $CRE = function() {
	this.$na = { };
	this.$rI = true;
	this.$Ga = null;
	this.next = null;
	this.$pB = null;
	this.$gB = null;
};
$hxClasses["$CRE"] = $CRE;
$CRE.__name__ = "$CRE";
$CRE.__interfaces__ = [$CsB];
$CRE.$oa = function(node) {
	var tail = null;
	while(node != null) {
		tail = node;
		node = node.next;
	}
	return tail;
};
$CRE.prototype = {
	$8: function(component) {
		if(component.$pO != null) {
			component.$pO.$lB(component);
		}
		var slot = component.get_entitySlot();
		var prev = this.$na[slot];
		if(prev != null) {
			this.$lB(prev);
		}
		this.$na[slot] = component;
		var tail = null;
		var p = this.$Ga;
		while(p != null) {
			tail = p;
			p = p.next;
		}
		if(tail != null) {
			tail.next = component;
		} else {
			this.$Ga = component;
		}
		component.$pO = this;
		component.next = null;
		component.$rO();
		return this;
	}
	,$lB: function(component) {
		var prev = null;
		var p = this.$Ga;
		while(p != null) {
			var next = p.next;
			if(p == component) {
				if(prev == null) {
					this.$Ga = next;
				} else {
					prev.$pO = this;
					prev.next = next;
				}
				var slot = p.get_entitySlot();
				delete(this.$na[slot]);
				if((p.$4O & 1) != 0) {
					p.$uO();
					p.$4O &= -2;
				}
				p.$sO();
				p.$pO = null;
				p.next = null;
				return true;
			}
			prev = p;
			p = next;
		}
		return false;
	}
	,$rB: function(child,append) {
		if(append == null) {
			append = true;
		}
		if(child.$gB != null) {
			child.$gB.$sB(child);
		}
		child.$gB = this;
		if(append) {
			this.$ja($CRE.$oa(this.$pB),child);
		} else {
			this.$ka(child);
		}
		return this;
	}
	,$sB: function(child) {
		var prev = null;
		var current = this.$pB;
		while(current != null) {
			if(current == child) {
				this.$ia(prev);
				current.$gB = null;
				current.next = null;
				return;
			}
			prev = current;
			current = current.next;
		}
	}
	,$$O: function(message,data) {
		var handled = false;
		var component = this.$Ga;
		while(component != null) {
			var next = component.next;
			if(component.$wO(message,data)) {
				handled = true;
			}
			component = next;
		}
		$CRE.$pa.$Da = handled;
		return $CRE.$pa;
	}
	,$Oa: function(message,data) {
		var handled = false;
		var entity = this;
		while(true) {
			var parent = entity.$gB;
			if(entity.$$O(message,data).$Da) {
				handled = true;
			}
			entity = parent;
			if(!(parent != null)) {
				break;
			}
		}
		$CRE.$pa.$Da = handled;
		return $CRE.$pa;
	}
	,$Qa: function() {
		if(this.$gB == null || this.next == null) {
			return;
		}
		var prev = null;
		var current = this.$gB.$pB;
		while(current != null) {
			if(current == this) {
				this.$gB.$ia(prev);
				this.$gB.$ja($CRE.$oa(current),current);
				current.next = null;
				return;
			}
			prev = current;
			current = current.next;
		}
	}
	,$Va: function() {
		while(this.$pB != null) this.$pB.dispose();
	}
	,dispose: function() {
		if(this.$gB != null) {
			this.$gB.$sB(this);
		}
		while(this.$Ga != null) this.$Ga.dispose();
		this.$Va();
	}
	,$Wa: function() {
		var p = this.$Ga;
		while(p != null) {
			var next = p.next;
			if((p.$4O & 1) == 0) {
				p.$4O |= 1;
				p.$3O();
				p.$tO();
			}
			p = next;
		}
		var p = this.$pB;
		while(p != null) {
			var next = p.next;
			p.$Wa();
			p = next;
		}
	}
	,$Za: function(slot,safeCast) {
		var entity = this;
		while(true) {
			var component = entity.$na[slot];
			if(safeCast != null) {
				component = js_Boot.__downcastCheck(component,safeCast) ? component : null;
			}
			if(component != null) {
				return component;
			}
			entity = entity.$gB;
			if(!(entity != null)) {
				break;
			}
		}
		return null;
	}
	,$ia: function(node) {
		if(node != null) {
			node.next = node.next.next;
		} else {
			this.$la();
		}
	}
	,$ja: function(node,newNode) {
		if(node != null) {
			newNode.next = node.next;
			node.next = newNode;
		} else {
			this.$ka(newNode);
		}
	}
	,$ka: function(newNode) {
		newNode.next = this.$pB;
		this.$pB = newNode;
	}
	,$la: function() {
		this.$pB = this.$pB.next;
	}
	,__class__: $CRE
};
var $CTE = function() { };
$hxClasses["$CTE"] = $CTE;
$CTE.__name__ = "$CTE";
$CTE.__isInterface__ = true;
$CTE.prototype = {
	__class__: $CTE
};
var $CUE = function() {
	this.$Eb = true;
};
$hxClasses["$CUE"] = $CUE;
$CUE.__name__ = "$CUE";
$CUE.__interfaces__ = [$CTE];
$CUE.prototype = {
	init: function() {
		var _gthis = this;
		var content = window.document.getElementById("content");
		content.innerHTML = "";
		var canvas = window.document.createElement("canvas");
		content.appendChild(canvas);
		canvas.setAttribute("tabindex","0");
		canvas.style.outlineStyle = "none";
		$C1H.$Eq(canvas,"tap-highlight-color","transparent");
		canvas.setAttribute("moz-opaque","");
		this.$xa = new $CxH(canvas);
		this.$va = new $CpG();
		this.$ua = new $CtH(this.$va,canvas);
		this.$wa = this.$ta(canvas);
		this.$qa = new $CQH();
		this.$Ab = canvas;
		this.$Bb = canvas.parentElement;
		this.$Bb.style.overflow = "hidden";
		this.$Bb.style.position = "relative";
		$C1H.$Eq(this.$Bb,"touch-action","none");
		var lastTouchTime = 0;
		var onMouse = function(event) {
			if(event.timeStamp - lastTouchTime < 1000) {
				return;
			}
			var bounds = canvas.getBoundingClientRect();
			var x = _gthis.$ra(event,bounds);
			var y = _gthis.$sa(event,bounds);
			switch(event.type) {
			case "mousedown":
				if(event.target == canvas) {
					event.preventDefault();
					_gthis.$ua.$sl(x,y,event.button);
					canvas.focus();
				}
				break;
			case "mousemove":
				_gthis.$ua.$wl(x,y);
				break;
			case "mouseup":
				_gthis.$ua.$tl(x,y,event.button);
				break;
			case "DOMMouseScroll":case "mousewheel":
				var velocity = event.type == "mousewheel" ? event.wheelDelta / 40 : -event.detail;
				if(_gthis.$ua.$xl(x,y,velocity)) {
					event.preventDefault();
				}
				break;
			}
		};
		window.addEventListener("mousedown",onMouse,false);
		window.addEventListener("mousemove",onMouse,false);
		window.addEventListener("mouseup",onMouse,false);
		canvas.addEventListener("mousewheel",onMouse,false);
		canvas.addEventListener("DOMMouseScroll",onMouse,false);
		canvas.addEventListener("contextmenu",function(event) {
			event.preventDefault();
		},false);
		var appleTouch = typeof(window.ontouchstart) != "undefined";
		var maxTouchPoints = $C1H.$Bq("maxTouchPoints",$global.navigator).value | 0;
		if(appleTouch || maxTouchPoints > 1) {
			var basicTouch = new $CtG(this.$va,appleTouch ? 4 : maxTouchPoints);
			this.$ya = basicTouch;
			var onTouch = function(event) {
				var changedTouches = appleTouch ? event.changedTouches : [event];
				var bounds = event.target.getBoundingClientRect();
				lastTouchTime = event.timeStamp;
				switch(event.type) {
				case "MSPointerMove":case "pointermove":case "touchmove":
					event.preventDefault();
					var _g = 0;
					while(_g < changedTouches.length) {
						var touch = changedTouches[_g];
						++_g;
						var x = _gthis.$ra(touch,bounds);
						var y = _gthis.$sa(touch,bounds);
						var id = (appleTouch ? touch.identifier : touch.pointerId) | 0;
						basicTouch.$wl(id,x,y);
					}
					break;
				case "MSPointerUp":case "pointerup":case "touchcancel":case "touchend":
					var _g = 0;
					while(_g < changedTouches.length) {
						var touch = changedTouches[_g];
						++_g;
						var x = _gthis.$ra(touch,bounds);
						var y = _gthis.$sa(touch,bounds);
						var id = (appleTouch ? touch.identifier : touch.pointerId) | 0;
						basicTouch.$tl(id,x,y);
					}
					break;
				case "MSPointerDown":case "pointerdown":case "touchstart":
					event.preventDefault();
					var _g = 0;
					while(_g < changedTouches.length) {
						var touch = changedTouches[_g];
						++_g;
						var x = _gthis.$ra(touch,bounds);
						var y = _gthis.$sa(touch,bounds);
						var id = (appleTouch ? touch.identifier : touch.pointerId) | 0;
						basicTouch.$sl(id,x,y);
					}
					break;
				}
			};
			if(appleTouch) {
				canvas.addEventListener("touchstart",onTouch,false);
				canvas.addEventListener("touchmove",onTouch,false);
				canvas.addEventListener("touchend",onTouch,false);
				canvas.addEventListener("touchcancel",onTouch,false);
			} else {
				canvas.addEventListener("MSPointerDown",onTouch,false);
				canvas.addEventListener("MSPointerMove",onTouch,false);
				canvas.addEventListener("MSPointerUp",onTouch,false);
			}
		} else {
			this.$ya = new $CAH();
		}
		var oldErrorHandler = window.onerror;
		window.onerror = function(message,url,line) {
			$CcE.$5b.$fb(message);
			if(oldErrorHandler != null) {
				return oldErrorHandler(message,url,line);
			} else {
				return false;
			}
		};
		var hiddenApi = $C1H.$Bq("hidden",window.document);
		if(hiddenApi.value != null) {
			var onVisibilityChanged = function(_) {
				$CcE.$cP.set__($CF.$j(window.document,hiddenApi.field));
			};
			onVisibilityChanged(null);
			window.document.addEventListener(hiddenApi.prefix + "visibilitychange",onVisibilityChanged,false);
		} else {
			var onPageTransitionChange = function(event) {
				$CcE.$cP.set__(event.type == "pagehide");
			};
			window.addEventListener("pageshow",onPageTransitionChange,false);
			window.addEventListener("pagehide",onPageTransitionChange,false);
		}
		$CcE.$cP.get_changed().$eb(function(hidden,_) {
			if(!hidden) {
				_gthis.$Db = true;
			}
		});
		this.$Db = false;
		this.$Cb = Date.now();
		var requestAnimationFrame = $C1H.$Bq("requestAnimationFrame").value;
		if(requestAnimationFrame != null) {
			var performance = window.performance;
			var hasPerfNow = performance != null && $C1H.$Dq("now",performance);
			if(hasPerfNow) {
				this.$Cb = performance.now();
			}
			var updateFrame = null;
			updateFrame = function(now) {
				requestAnimationFrame(updateFrame,canvas);
				_gthis.$5K(hasPerfNow ? performance.now() : now);
			};
			requestAnimationFrame(updateFrame,canvas);
		} else {
			window.setInterval(function() {
				_gthis.$5K(Date.now());
			},16);
		}
		this.$qa.$3g();
		return new $CKJ().$22(null);
	}
	,loadAssetPack: function(manifest) {
		return new $ChH(this,manifest).$_Z;
	}
	,initPlatformSDK: function(initialAssetLoad) {
		return initialAssetLoad;
	}
	,$5K: function(now) {
		var dt = (now - this.$Cb) / 1000;
		this.$Cb = now;
		if($CcE.$cP.$Lb) {
			return;
		}
		if(this.$Db) {
			this.$Db = false;
			return;
		}
		if(this.$Eb) {
			this.$Eb = false;
			this.$xa.$1p(null);
		}
		this.$qa.$5K(dt);
		this.$qa.$JR(this.$wa);
	}
	,getKeyboard: function() {
		var _gthis = this;
		if(this.$6a == null) {
			this.$6a = new $ClG();
			var onKey = function(event) {
				switch(event.type) {
				case "keydown":
					if(_gthis.$6a.$sl(event.keyCode)) {
						event.preventDefault();
					}
					break;
				case "keyup":
					_gthis.$6a.$tl(event.keyCode);
					break;
				}
			};
			this.$Ab.addEventListener("keydown",onKey,false);
			this.$Ab.addEventListener("keyup",onKey,false);
		}
		return this.$6a;
	}
	,getRenderer: function() {
		return this.$wa;
	}
	,$ra: function(event,bounds) {
		return (event.clientX - bounds.left) * this.$xa.get_width() / bounds.width;
	}
	,$sa: function(event,bounds) {
		return (event.clientY - bounds.top) * this.$xa.get_height() / bounds.height;
	}
	,$ta: function(canvas) {
		try {
			var gl = $CJD.$TW(canvas,{ alpha : false, depth : false, stencil : true, failIfMajorPerformanceCaveat : true});
			if(gl != null) {
				$CHI.$3g(gl);
				var renderer = new $CJI(this.$xa);
				if(renderer.$At) {
					return renderer;
				}
			}
		} catch( _g ) {
		}
		return new $CcH(canvas);
	}
	,__class__: $CUE
};
var $CVE = function(value,listener) {
	this.$Lb = value;
	this.$Mb = listener != null ? new $CYE(listener) : null;
};
$hxClasses["$CVE"] = $CVE;
$CVE.__name__ = "$CVE";
$CVE.prototype = {
	$Kb: function(listener) {
		listener(this.$Lb,this.$Lb);
		return this.get_changed().$eb(listener);
	}
	,set__: function(newValue) {
		var oldValue = this.$Lb;
		if(newValue != oldValue) {
			this.$Lb = newValue;
			if(this.$Mb != null) {
				this.$Mb.$fb(newValue,oldValue);
			}
		}
		return newValue;
	}
	,get_changed: function() {
		if(this.$Mb == null) {
			this.$Mb = new $CYE();
		}
		return this.$Mb;
	}
	,__class__: $CVE
	,__properties__: {set__:"set__",get_$Jb:"get_$Jb"}
};
var $CWE = function(signal,listener) {
	this.$Pb = null;
	this.$Rb = signal;
	this.$Qb = listener;
	this.$Nb = true;
};
$hxClasses["$CWE"] = $CWE;
$CWE.__name__ = "$CWE";
$CWE.__interfaces__ = [$CsB];
$CWE.prototype = {
	$Ob: function() {
		this.$Nb = false;
		return this;
	}
	,dispose: function() {
		if(this.$Rb != null) {
			this.$Rb.$Ub(this);
			this.$Rb = null;
		}
	}
	,__class__: $CWE
};
var $CXE = function(listener) {
	this.$bb = listener != null ? new $CWE(this,listener) : null;
	this.$cb = null;
};
$hxClasses["$CXE"] = $CXE;
$CXE.__name__ = "$CXE";
$CXE.prototype = {
	$Tb: function(listener,prioritize) {
		var _gthis = this;
		var conn = new $CWE(this,listener);
		if(this.$bb == $CXE.$db) {
			this.$Vb(function() {
				_gthis.$Yb(conn,prioritize);
			});
		} else {
			this.$Yb(conn,prioritize);
		}
		return conn;
	}
	,$Ub: function(conn) {
		var _gthis = this;
		if(this.$bb == $CXE.$db) {
			this.$Vb(function() {
				_gthis.$Zb(conn);
			});
		} else {
			this.$Zb(conn);
		}
	}
	,$Vb: function(fn) {
		var tail = null;
		var p = this.$cb;
		while(p != null) {
			tail = p;
			p = p.next;
		}
		var task = new $CMJ(fn);
		if(tail != null) {
			tail.next = task;
		} else {
			this.$cb = task;
		}
	}
	,$Wb: function() {
		var snapshot = this.$bb;
		this.$bb = $CXE.$db;
		return snapshot;
	}
	,$Xb: function(head) {
		this.$bb = head;
		var snapshot = this.$cb;
		this.$cb = null;
		while(snapshot != null) {
			snapshot.$F3();
			snapshot = snapshot.next;
		}
	}
	,$Yb: function(conn,prioritize) {
		if(prioritize) {
			conn.$Pb = this.$bb;
			this.$bb = conn;
		} else {
			var tail = null;
			var p = this.$bb;
			while(p != null) {
				tail = p;
				p = p.$Pb;
			}
			if(tail != null) {
				tail.$Pb = conn;
			} else {
				this.$bb = conn;
			}
		}
	}
	,$Zb: function(conn) {
		var prev = null;
		var p = this.$bb;
		while(p != null) {
			if(p == conn) {
				var next = p.$Pb;
				if(prev == null) {
					this.$bb = next;
				} else {
					prev.$Pb = next;
				}
				return;
			}
			prev = p;
			p = p.$Pb;
		}
	}
	,__class__: $CXE
};
var $CYE = function(listener) {
	$CXE.call(this,listener);
};
$hxClasses["$CYE"] = $CYE;
$CYE.__name__ = "$CYE";
$CYE.__super__ = $CXE;
$CYE.prototype = $extend($CXE.prototype,{
	$eb: function(listener,prioritize) {
		if(prioritize == null) {
			prioritize = false;
		}
		return this.$Tb(listener,prioritize);
	}
	,$fb: function(arg1,arg2) {
		var _gthis = this;
		if(this.$bb == $CXE.$db) {
			this.$Vb(function() {
				_gthis.$gb(arg1,arg2);
			});
		} else {
			this.$gb(arg1,arg2);
		}
	}
	,$gb: function(arg1,arg2) {
		var head = this.$Wb();
		var p = head;
		while(p != null) {
			p.$Qb(arg1,arg2);
			if(!p.$Nb) {
				p.dispose();
			}
			p = p.$Pb;
		}
		this.$Xb(head);
	}
	,__class__: $CYE
});
var $CZE = function(listener) {
	$CXE.call(this,listener);
};
$hxClasses["$CZE"] = $CZE;
$CZE.__name__ = "$CZE";
$CZE.__super__ = $CXE;
$CZE.prototype = $extend($CXE.prototype,{
	$eb: function(listener,prioritize) {
		if(prioritize == null) {
			prioritize = false;
		}
		return this.$Tb(listener,prioritize);
	}
	,$fb: function() {
		var _gthis = this;
		if(this.$bb == $CXE.$db) {
			this.$Vb(function() {
				_gthis.$gb();
			});
		} else {
			this.$gb();
		}
	}
	,$gb: function() {
		var head = this.$Wb();
		var p = head;
		while(p != null) {
			p.$Qb();
			if(!p.$Nb) {
				p.dispose();
			}
			p = p.$Pb;
		}
		this.$Xb(head);
	}
	,__class__: $CZE
});
var $CaE = function(listener) {
	$CXE.call(this,listener);
};
$hxClasses["$CaE"] = $CaE;
$CaE.__name__ = "$CaE";
$CaE.__super__ = $CXE;
$CaE.prototype = $extend($CXE.prototype,{
	$eb: function(listener,prioritize) {
		if(prioritize == null) {
			prioritize = false;
		}
		return this.$Tb(listener,prioritize);
	}
	,$fb: function(arg1) {
		var _gthis = this;
		if(this.$bb == $CXE.$db) {
			this.$Vb(function() {
				_gthis.$gb(arg1);
			});
		} else {
			this.$gb(arg1);
		}
	}
	,$gb: function(arg1) {
		var head = this.$Wb();
		var p = head;
		while(p != null) {
			p.$Qb(arg1);
			if(!p.$Nb) {
				p.dispose();
			}
			p = p.$Pb;
		}
		this.$Xb(head);
	}
	,__class__: $CaE
});
var $CbE = function(value,listener) {
	this.$vP = null;
	$CVE.call(this,value,listener);
};
$hxClasses["$CbE"] = $CbE;
$CbE.__name__ = "$CbE";
$CbE.__super__ = $CVE;
$CbE.prototype = $extend($CVE.prototype,{
	set__: function(value) {
		this.$vP = null;
		return $CVE.prototype.set__.call(this,value);
	}
	,$5K: function(dt) {
		if(this.$vP != null) {
			$CVE.prototype.set__.call(this,this.$vP.update(dt));
			if(this.$vP.isComplete()) {
				this.$vP = null;
			}
		}
	}
	,$jb: function(to,seconds,easing) {
		this.set_behavior(new $CjE(this.$Lb,to,seconds,easing));
	}
	,$kb: function(by,seconds,easing) {
		this.set_behavior(new $CjE(this.$Lb,this.$Lb + by,seconds,easing));
	}
	,set_behavior: function(behavior) {
		this.$vP = behavior;
		this.$5K(0);
		return behavior;
	}
	,__class__: $CbE
	,__properties__: $extend($CVE.prototype.__properties__,{set_behavior:"set_behavior"})
});
var $CcE = function() { };
$hxClasses["$CcE"] = $CcE;
$CcE.__name__ = "$CcE";
$CcE.$9b = function() {
	if($CcE.$Hc == null) {
		$CcE.$Hc = $CcE.$Gc.init();
	}
	return $CcE.$Hc;
};
$CcE.$Cc = function() {
	if(typeof(ExitApi) != "undefined") {
		ExitApi.exit();
	}
};
var $CfE = function(scale) {
	if(scale == null) {
		scale = 1;
	}
	this.$Pc = 0;
	$CtB.call(this);
	this.$_P = new $CbE(scale);
};
$hxClasses["$CfE"] = $CfE;
$CfE.__name__ = "$CfE";
$CfE.__super__ = $CtB;
$CfE.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 9;
	}
	,$vO: function(dt) {
		if(this.$Pc > 0) {
			dt = this.$Pc;
			this.$Pc = 0;
		}
		this.$_P.$5K(dt);
	}
	,__class__: $CfE
});
var $CgE = function() { };
$hxClasses["$CgE"] = $CgE;
$CgE.__name__ = "$CgE";
$CgE.__isInterface__ = true;
$CgE.prototype = {
	__class__: $CgE
};
var $CiE = function() { };
$hxClasses["$CiE"] = $CiE;
$CiE.__name__ = "$CiE";
$CiE.$Sc = function(t) {
	return t;
};
$CiE.$Tc = function(t) {
	return t * t;
};
$CiE.$Uc = function(t) {
	return t * (2 - t);
};
$CiE.$Vc = function(t) {
	if(t <= .5) {
		return t * t * 2;
	} else {
		return 1 - --t * t * 2;
	}
};
$CiE.$Wc = function(t) {
	return t * t * t;
};
$CiE.$Xc = function(t) {
	return 1 + --t * t * t;
};
$CiE.$Yc = function(t) {
	if(t <= .5) {
		return t * t * t * 4;
	} else {
		return 1 + --t * t * t * 4;
	}
};
$CiE.$Zc = function(t) {
	return t * t * t * t;
};
$CiE.$ac = function(t) {
	return 1 - --t * t * t * t;
};
$CiE.$bc = function(t) {
	if(t <= .5) {
		return t * t * t * t * 8;
	} else {
		t = t * 2 - 2;
		return (1 - t * t * t * t) / 2 + .5;
	}
};
$CiE.$cc = function(t) {
	return t * t * t * t * t;
};
$CiE.$dc = function(t) {
	return --t * t * t * t * t + 1;
};
$CiE.$ec = function(t) {
	if((t *= 2) < 1) {
		return t * t * t * t * t / 2;
	} else {
		return ((t -= 2) * t * t * t * t + 2) / 2;
	}
};
$CiE.$fc = function(t) {
	return 1 - Math.cos(1.57079632679489656 * t);
};
$CiE.$gc = function(t) {
	return Math.sin(1.57079632679489656 * t);
};
$CiE.$hc = function(t) {
	return .5 - Math.cos(3.141592653589793 * t) / 2;
};
$CiE.$ic = function(t) {
	t = 1 - t;
	if(t < 0.363636363636363646) {
		return 1 - 7.5625 * t * t;
	}
	if(t < 0.727272727272727293) {
		return 1 - (7.5625 * (t - 0.545454545454545414) * (t - 0.545454545454545414) + .75);
	}
	if(t < 0.909090909090909061) {
		return 1 - (7.5625 * (t - 0.818181818181818232) * (t - 0.818181818181818232) + .9375);
	}
	return 1 - (7.5625 * (t - 0.954545454545454586) * (t - 0.954545454545454586) + .984375);
};
$CiE.$jc = function(t) {
	if(t < 0.363636363636363646) {
		return 7.5625 * t * t;
	}
	if(t < 0.727272727272727293) {
		return 7.5625 * (t - 0.545454545454545414) * (t - 0.545454545454545414) + .75;
	}
	if(t < 0.909090909090909061) {
		return 7.5625 * (t - 0.818181818181818232) * (t - 0.818181818181818232) + .9375;
	}
	return 7.5625 * (t - 0.954545454545454586) * (t - 0.954545454545454586) + .984375;
};
$CiE.$kc = function(t) {
	if(t < .5) {
		t = 1 - t * 2;
		if(t < 0.363636363636363646) {
			return (1 - 7.5625 * t * t) / 2;
		}
		if(t < 0.727272727272727293) {
			return (1 - (7.5625 * (t - 0.545454545454545414) * (t - 0.545454545454545414) + .75)) / 2;
		}
		if(t < 0.909090909090909061) {
			return (1 - (7.5625 * (t - 0.818181818181818232) * (t - 0.818181818181818232) + .9375)) / 2;
		}
		return (1 - (7.5625 * (t - 0.954545454545454586) * (t - 0.954545454545454586) + .984375)) / 2;
	}
	t = t * 2 - 1;
	if(t < 0.363636363636363646) {
		return 7.5625 * t * t / 2 + .5;
	}
	if(t < 0.727272727272727293) {
		return (7.5625 * (t - 0.545454545454545414) * (t - 0.545454545454545414) + .75) / 2 + .5;
	}
	if(t < 0.909090909090909061) {
		return (7.5625 * (t - 0.818181818181818232) * (t - 0.818181818181818232) + .9375) / 2 + .5;
	}
	return (7.5625 * (t - 0.954545454545454586) * (t - 0.954545454545454586) + .984375) / 2 + .5;
};
$CiE.$lc = function(t) {
	return 1 - Math.sqrt(1 - t * t);
};
$CiE.$mc = function(t) {
	--t;
	return Math.sqrt(1 - t * t);
};
$CiE.$nc = function(t) {
	if(t <= .5) {
		return (Math.sqrt(1 - t * t * 4) - 1) / -2;
	} else {
		return (Math.sqrt(1 - (t * 2 - 2) * (t * 2 - 2)) + 1) / 2;
	}
};
$CiE.$oc = function(t) {
	return Math.pow(2,10 * (t - 1));
};
$CiE.$pc = function(t) {
	return -Math.pow(2,-10 * t) + 1;
};
$CiE.$qc = function(t) {
	if(t < .5) {
		return Math.pow(2,10 * (t * 2 - 1)) / 2;
	} else {
		return (-Math.pow(2,-10 * (t * 2 - 1)) + 2) / 2;
	}
};
$CiE.$rc = function(t) {
	return t * t * (2.70158 * t - 1.70158);
};
$CiE.$sc = function(t) {
	return 1 - --t * t * (-2.70158 * t - 1.70158);
};
$CiE.$tc = function(t) {
	t *= 2;
	if(t < 1) {
		return t * t * (2.70158 * t - 1.70158) / 2;
	}
	t -= 2;
	return (1 - t * t * (-2.70158 * t - 1.70158)) / 2 + .5;
};
$CiE.$uc = function(t) {
	return -(Math.pow(2,10 * --t) * Math.sin((t - 0.254647908947032542 * Math.asin(1.)) * 1.57079632679489656 / 0.4));
};
$CiE.$vc = function(t) {
	return Math.pow(2,-10 * t) * Math.sin((t - 0.254647908947032542 * Math.asin(1.)) * 1.57079632679489656 / 0.4) + 1;
};
$CiE.$wc = function(t) {
	if(t < 0.5) {
		return -0.5 * (Math.pow(2,10 * (t -= 0.5)) * Math.sin((t - 0.1) * 1.57079632679489656 / 0.4));
	}
	return Math.pow(2,-10 * (t -= 0.5)) * Math.sin((t - 0.1) * 1.57079632679489656 / 0.4) * 0.5 + 1;
};
var $CjE = function(from,to,seconds,easing) {
	this.$7c = from;
	this.$8c = to;
	this.$9c = seconds;
	this.$6c = 0;
	this.$$c = easing != null ? easing : $CiE.$Sc;
};
$hxClasses["$CjE"] = $CjE;
$CjE.__name__ = "$CjE";
$CjE.__interfaces__ = [$CgE];
$CjE.prototype = {
	update: function(dt) {
		this.$6c += dt;
		if(this.$6c >= this.$9c) {
			return this.$8c;
		} else {
			return this.$7c + (this.$8c - this.$7c) * this.$$c(this.$6c / this.$9c);
		}
	}
	,isComplete: function() {
		return this.$6c >= this.$9c;
	}
	,__class__: $CjE
};
var $CkE = function() { };
$hxClasses["$CkE"] = $CkE;
$CkE.__name__ = "$CkE";
$CkE.__isInterface__ = true;
$CkE.__interfaces__ = [$CsB];
$CkE.prototype = {
	__class__: $CkE
};
var kit_asset_AssetFormat = $hxEnums["kit.asset.AssetFormat"] = { __ename__:true,__constructs__:null
	,AVIF: {_hx_name:"AVIF",_hx_index:0,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,WEBP: {_hx_name:"WEBP",_hx_index:1,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,PNG: {_hx_name:"PNG",_hx_index:2,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,JPG: {_hx_name:"JPG",_hx_index:3,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,GIF: {_hx_name:"GIF",_hx_index:4,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,_2DKD: {_hx_name:"_2DKD",_hx_index:5,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,_2DKP: {_hx_name:"_2DKP",_hx_index:6,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,_2DKE: {_hx_name:"_2DKE",_hx_index:7,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,MP3: {_hx_name:"MP3",_hx_index:8,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,M4A: {_hx_name:"M4A",_hx_index:9,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,OPUS: {_hx_name:"OPUS",_hx_index:10,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,OGG: {_hx_name:"OGG",_hx_index:11,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,WAV: {_hx_name:"WAV",_hx_index:12,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,WOFF: {_hx_name:"WOFF",_hx_index:13,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,TTF: {_hx_name:"TTF",_hx_index:14,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,OTF: {_hx_name:"OTF",_hx_index:15,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,SWF: {_hx_name:"SWF",_hx_index:16,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,AV1: {_hx_name:"AV1",_hx_index:17,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,MP4: {_hx_name:"MP4",_hx_index:18,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,WEBM: {_hx_name:"WEBM",_hx_index:19,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,MOV: {_hx_name:"MOV",_hx_index:20,__enum__:"kit.asset.AssetFormat",toString:$estr}
	,Data: {_hx_name:"Data",_hx_index:21,__enum__:"kit.asset.AssetFormat",toString:$estr}
};
kit_asset_AssetFormat.__constructs__ = [kit_asset_AssetFormat.AVIF,kit_asset_AssetFormat.WEBP,kit_asset_AssetFormat.PNG,kit_asset_AssetFormat.JPG,kit_asset_AssetFormat.GIF,kit_asset_AssetFormat._2DKD,kit_asset_AssetFormat._2DKP,kit_asset_AssetFormat._2DKE,kit_asset_AssetFormat.MP3,kit_asset_AssetFormat.M4A,kit_asset_AssetFormat.OPUS,kit_asset_AssetFormat.OGG,kit_asset_AssetFormat.WAV,kit_asset_AssetFormat.WOFF,kit_asset_AssetFormat.TTF,kit_asset_AssetFormat.OTF,kit_asset_AssetFormat.SWF,kit_asset_AssetFormat.AV1,kit_asset_AssetFormat.MP4,kit_asset_AssetFormat.WEBM,kit_asset_AssetFormat.MOV,kit_asset_AssetFormat.Data];
var $ClE = function(name,url,format,bytes) {
	this.$Cd = null;
	this.$CP = name;
	this.$_c = url;
	this.$Ad = format;
	this.$Bd = bytes;
};
$hxClasses["$ClE"] = $ClE;
$ClE.__name__ = "$ClE";
$ClE.prototype = {
	__class__: $ClE
};
var $CmE = function() { };
$hxClasses["$CmE"] = $CmE;
$CmE.__name__ = "$CmE";
$CmE.__isInterface__ = true;
$CmE.__interfaces__ = [$CkE];
$CmE.prototype = {
	__class__: $CmE
};
var $CnE = function() {
	this.$Gd = null;
	this.$Fd = null;
	this.$Dd = 1;
	this.$1Z = [];
};
$hxClasses["$CnE"] = $CnE;
$CnE.__name__ = "$CnE";
$CnE.$Id = function(folder,preferredPixelScale,required) {
	if(required == null) {
		required = true;
	}
	if(preferredPixelScale == null) {
		preferredPixelScale = -1;
	}
	if(preferredPixelScale <= 0) {
		var width = $CvG.$jB("width");
		var height = $CvG.$jB("height");
		preferredPixelScale = Math.min($CcE.$Gc.$xa.get_width() / width,$CcE.$Gc.$xa.get_height() / height);
	}
	var candidatePairs = [];
	var assetsBuildInfo = $CvG.$jB("assets");
	var _g = 0;
	var _g1 = $CF.$o(assetsBuildInfo);
	while(_g < _g1.length) {
		var packName = _g1[_g];
		++_g;
		if($CJ.$HB(packName,folder)) {
			var suffix = HxOverrides.substr(packName,folder.length,null);
			if(suffix.length > 0) {
				var pattern = new $CB("^-([\\d\\.]+)%$","");
				if(pattern.$D(suffix)) {
					candidatePairs.push(new $CoE(packName,parseFloat(pattern.$E(1)) / 100));
				}
			} else {
				candidatePairs.push(new $CoE(packName,1));
			}
		}
	}
	if(candidatePairs.length == 0) {
		return null;
	}
	candidatePairs.sort(function(a,b) {
		return $CF.$q(a.$Dd,b.$Dd);
	});
	var bestPair = null;
	var _g = 0;
	while(_g < candidatePairs.length) {
		var pair = candidatePairs[_g];
		++_g;
		bestPair = pair;
		if(pair.$Dd >= preferredPixelScale) {
			break;
		}
	}
	var packData = $CF.$j(assetsBuildInfo,bestPair.$Nd);
	var manifest = new $CnE();
	manifest.$Fd = "assets";
	manifest.$Dd = bestPair.$Dd;
	var packFolder = bestPair.$Nd;
	packFolder = encodeURIComponent(packFolder);
	var _g = 0;
	while(_g < packData.length) {
		var asset = packData[_g];
		++_g;
		var name = asset.name;
		var path = packFolder;
		var _g1 = 0;
		var _g2 = name.split("/");
		while(_g1 < _g2.length) {
			var part = _g2[_g1];
			++_g1;
			part = encodeURIComponent(part);
			path += "/" + part;
		}
		if($CJ.$IB(name,"__.js")) {
			name = HxOverrides.substr(name,0,name.length - "__.js".length);
		}
		var format = $CnE.$Kd(name);
		if(format != kit_asset_AssetFormat.Data) {
			name = $CNJ.$H3(name);
		}
		var entry = manifest.$8(name,path,asset.bytes,format);
		if(asset.md5 != null) {
			entry.$Cd = "assets:" + $CG.$1(asset.md5);
		}
	}
	return manifest;
};
$CnE.$Kd = function(url) {
	var extension = $CNJ.$I3(url);
	if(extension != null) {
		switch(extension.toLowerCase()) {
		case "2dkd":
			return kit_asset_AssetFormat._2DKD;
		case "2dke":
			return kit_asset_AssetFormat._2DKE;
		case "2dkp":
			return kit_asset_AssetFormat._2DKP;
		case "av1":
			return kit_asset_AssetFormat.AV1;
		case "avif":
			return kit_asset_AssetFormat.AVIF;
		case "gif":
			return kit_asset_AssetFormat.GIF;
		case "jpeg":case "jpg":
			return kit_asset_AssetFormat.JPG;
		case "m4a":
			return kit_asset_AssetFormat.M4A;
		case "mov":
			return kit_asset_AssetFormat.MOV;
		case "mp3":
			return kit_asset_AssetFormat.MP3;
		case "mp4":
			return kit_asset_AssetFormat.MP4;
		case "ogg":
			return kit_asset_AssetFormat.OGG;
		case "opus":
			return kit_asset_AssetFormat.OPUS;
		case "otf":
			return kit_asset_AssetFormat.OTF;
		case "png":
			return kit_asset_AssetFormat.PNG;
		case "swf":
			return kit_asset_AssetFormat.SWF;
		case "ttf":
			return kit_asset_AssetFormat.TTF;
		case "wav":
			return kit_asset_AssetFormat.WAV;
		case "webm":
			return kit_asset_AssetFormat.WEBM;
		case "webp":
			return kit_asset_AssetFormat.WEBP;
		case "woff":
			return kit_asset_AssetFormat.WOFF;
		}
	}
	return kit_asset_AssetFormat.Data;
};
$CnE.prototype = {
	$8: function(name,url,bytes,format) {
		if(bytes == null) {
			bytes = 0;
		}
		if(format == null) {
			format = $CnE.$Kd(url);
		}
		var entry = new $ClE(name,url,format,bytes);
		this.$1Z.push(entry);
		return entry;
	}
	,iterator: function() {
		return new $CmC(this.$1Z);
	}
	,$Ed: function(entry) {
		var basePath = this.$Gd != null && $CnE.$Md ? this.$Gd : this.$Fd;
		if(basePath != null) {
			return $CNJ.$J3(basePath,entry.$_c);
		} else {
			return entry.$_c;
		}
	}
	,__class__: $CnE
};
var $CoE = function(packName,pixelScale) {
	this.$Nd = packName;
	this.$Dd = pixelScale;
};
$hxClasses["$CoE"] = $CoE;
$CoE.__name__ = "$CoE";
$CoE.prototype = {
	__class__: $CoE
};
var kit_creator_Camera = function() {
	this.offsetY = 0;
	this.offsetX = 0;
	this.active = true;
	this.following = null;
	kit_creator_CreatorObject.call(this);
};
$hxClasses["kit.creator.Camera"] = kit_creator_Camera;
kit_creator_Camera.__name__ = "kit.creator.Camera";
kit_creator_Camera.__super__ = kit_creator_CreatorObject;
kit_creator_Camera.prototype = $extend(kit_creator_CreatorObject.prototype,{
	$tO: function() {
		kit_creator_CreatorObject.prototype.$tO.call(this);
		var sprite = this.$pO.$na[10];
		if(sprite == null) {
			var tmp = this.$pO;
			sprite = new $C6B();
			tmp.$8(sprite);
			this.info.$OP(sprite);
			sprite.set_visible(false);
		}
		if(this.active) {
			this.$pO.$Za(10,$C3E).$2b = this;
		}
	}
	,$vO: function(dt) {
		kit_creator_CreatorObject.prototype.$vO.call(this,dt);
		this.zoom.$5K(dt);
	}
	,$Od: function(sceneSprite) {
		var sprite = this.$pO.$na[10];
		if(this.following != null) {
			var followingSprite = this.following.$na[10];
			if(followingSprite != null) {
				sprite.$sQ(followingSprite.$QC.$Lb + this.offsetX,followingSprite.$RC.$Lb + this.offsetY);
			}
		}
		var zoom = this.zoom.$Lb;
		var x = -$CGG.$sG(sprite.$QC.$Lb - 0.5 * sceneSprite.$Re.$Lb / zoom,0,sceneSprite.$Jc.$IP * sceneSprite.$Jc.$gd - sceneSprite.$Re.$Lb / zoom);
		var y = -$CGG.$sG(sprite.$RC.$Lb - 0.5 * sceneSprite.$Se.$Lb / zoom,0,sceneSprite.$Jc.$JP * sceneSprite.$Jc.$hd - sceneSprite.$Se.$Lb / zoom);
		var _g = 0;
		var _g1 = sceneSprite.$Jc.$id;
		while(_g < _g1.length) {
			var layerInfo = _g1[_g];
			++_g;
			var layerSprite = sceneSprite.$id.h[layerInfo.$CP].$na[10];
			var a = layerInfo.$9d;
			var b = layerInfo.$$d;
			var layerScale = (a > b ? a : b) * (zoom - 1) + 1;
			layerSprite.$wQ(layerScale);
			layerSprite.$QC.set__(layerInfo.$9d * x * layerScale);
			layerSprite.$RC.set__(layerInfo.$$d * y * layerScale);
		}
	}
	,__class__: kit_creator_Camera
});
var $CpE = function(scene) {
	this.$Vd = new $CcC();
	$CtB.call(this);
	this.$Pd = scene;
	this.$Rd();
};
$hxClasses["$CpE"] = $CpE;
$CpE.__name__ = "$CpE";
$CpE.__super__ = $CtB;
$CpE.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 0;
	}
	,$TP: function(group,target,required) {
		if(required == null) {
			required = true;
		}
		var group1 = this.$Vd.h[group];
		if(group1 != null) {
			return kit_creator_CreatorAction.$TP(group1.$Wd,target);
		}
		return null;
	}
	,$wO: function(message,data) {
		var handled = false;
		var group = this.$Vd.h[message];
		if(group != null) {
			var entity = ((data) instanceof $CRE) ? data : null;
			if(entity != null) {
				var o = this.$pO;
				while(o != null) {
					if(o == $CcE.$cT) {
						kit_creator_CreatorAction.$TP(group.$Wd,entity);
						handled = true;
					}
					o = o.$gB;
				}
			}
		}
		if(!$CtB.prototype.$wO.call(this,message,data)) {
			return handled;
		} else {
			return true;
		}
	}
	,$Rd: function() {
		this.$Qd = [];
		var _g = 0;
		var _g1 = this.$Pd.$md.$Qd;
		while(_g < _g1.length) {
			var groupInfo = _g1[_g];
			++_g;
			var _this = groupInfo.$Wd;
			var f = $bind(this,this.$Sd);
			var result = new Array(_this.length);
			var _g2 = 0;
			var _g3 = _this.length;
			while(_g2 < _g3) {
				var i = _g2++;
				result[i] = f(_this[i]);
			}
			var _g4 = [];
			var _g5 = 0;
			while(_g5 < result.length) {
				var v = result[_g5];
				++_g5;
				if(v != null) {
					_g4.push(v);
				}
			}
			var group = new $CqE(groupInfo,_g4);
			this.$Qd.push(group);
			this.$Vd.h[groupInfo.$CP] = group;
		}
	}
	,$Sd: function(info) {
		var name = info.$hI;
		var cl = $hxClasses[name];
		if(cl == null) {
			return null;
		}
		var action = Type.createInstance(cl,[]);
		action.script = this;
		var key_keys = Object.keys(info.$LP.h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var type = $CzG.$Xm(cl,key);
			if(type != null) {
				var typedValue = this.$Td(type,info.$LP.h[key],info.$hI + "." + key);
				if(typedValue != null) {
					$CF.$m(action,key,typedValue);
				}
			}
		}
		var group = ((action) instanceof kit_creator_GroupAction) ? action : null;
		if(group != null) {
			var _this = info.$Ie;
			var f = $bind(this,this.$Sd);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			var _g = [];
			var _g1 = 0;
			var _g2 = result;
			while(_g1 < _g2.length) {
				var v = _g2[_g1];
				++_g1;
				if(v != null) {
					_g.push(v);
				}
			}
			group.subActions = _g;
		}
		return action;
	}
	,$Td: function(type,value,debugPath) {
		var typedValue = $CzG.$Td(type,value);
		if(typedValue != null) {
			return typedValue;
		}
		switch(type._hx_index) {
		case 4:
			var _g = type.elementType;
			var result = [];
			var _g1 = 0;
			var _g2 = value.split(",");
			while(_g1 < _g2.length) result.push(this.$Td(_g,$CJ.$MB(_g2[_g1++]),debugPath));
			return result;
		case 6:
			switch(type.type) {
			case $CwE:
				return this.$Pd.$rd(value,false);
			case $CwB:
				return this.$Pd.$td(value,false);
			default:
			}
			break;
		default:
		}
		return null;
	}
	,__class__: $CpE
});
var $CqE = function(info,actions) {
	this.$Jc = info;
	this.$Wd = actions;
};
$hxClasses["$CqE"] = $CqE;
$CqE.__name__ = "$CqE";
$CqE.prototype = {
	__class__: $CqE
};
var $CrE = function(object) {
	this.$dd = new $CRE();
	this.$Xd = new $CVE(null);
	$C6B.call(this);
	this.$cd = object;
};
$hxClasses["$CrE"] = $CrE;
$CrE.__name__ = "$CrE";
$CrE.__super__ = $C6B;
$CrE.prototype = $extend($C6B.prototype,{
	$Zd: function(state,restart) {
		if(restart == null) {
			restart = true;
		}
		if(!restart && this.$Xd.$Lb == state) {
			return this;
		}
		var oldSprite = this.$dd.$na[10];
		if(oldSprite != null) {
			oldSprite.dispose();
		}
		this.$ad(state,true);
		return this;
	}
	,$ad: function(stateName,loop) {
		if(this.$pO == null) {
			return null;
		}
		var fullName = this.$cd.$MP.h[stateName];
		if(fullName == null) {
			return null;
		}
		var assets = this.$pO.$Za(13);
		if(assets == null) {
			return null;
		}
		var slashIdx = fullName.lastIndexOf("/");
		if(slashIdx < 0) {
			slashIdx = fullName.length;
		}
		var texture = assets.getTexture(fullName,false);
		if(texture != null) {
			var sprite = new $ChF(texture);
			this.$bd(sprite,stateName);
			return sprite;
		}
		return null;
	}
	,$bd: function(sprite,stateName) {
		var tile = this.$cd.$KP;
		if(tile.$Ge == null) {
			sprite.$QC.set__(-parseFloat(tile.$LP.h["boundsX"]));
			sprite.$RC.set__(-parseFloat(tile.$LP.h["boundsY"]));
		}
		this.$dd.$8(sprite);
		this.$Xd.set__(stateName);
	}
	,$tO: function() {
		$C6B.prototype.$tO.call(this);
		if(this.$pO == null) {
			return;
		}
		this.$pO.$rB(this.$dd);
		if(this.$Xd.$Lb != null) {
			return;
		}
		var sprite = null;
		var tile = this.$cd.$KP;
		var offsetByBounds = false;
		if(tile.$Ge != null) {
			sprite = new $ChF(tile.$Ge);
		} else {
			var assets = this.$pO.$Za(13);
			if(tile.$LP.h["scene"] != null) {
				var symbol = assets.$wZ(tile.$LP.h["symbol"]);
				sprite = symbol.$NP();
				this.$dd.$8(symbol.$qd());
				if(parseFloat(tile.$LP.h["version"]) >= 2) {
					offsetByBounds = true;
				}
			}
		}
		this.$bd(sprite,null);
		if(offsetByBounds) {
			this.$dd.$Wa();
			sprite.$sQ(0,0);
			var bounds = $C6B.$HR(this.$dd);
			if(!bounds.get_empty()) {
				sprite.$sQ(-bounds.$QC,-bounds.$RC + (this.$cd.$JP - bounds.$JP));
			}
			this.$wQ(1);
		}
	}
	,__class__: $CrE
});
var $CsE = function() { };
$hxClasses["$CsE"] = $CsE;
$CsE.__name__ = "$CsE";
$CsE.__isInterface__ = true;
$CsE.prototype = {
	__class__: $CsE
};
var $CuE = function() {
	this.$fd = new $CcC();
	this.$Jb = new $CYE();
	$CtB.call(this);
};
$hxClasses["$CuE"] = $CuE;
$CuE.__name__ = "$CuE";
$CuE.$f = function(entity,property) {
	while(true) {
		if(entity == null) {
			return null;
		}
		var bag = entity.$Za(2);
		if(bag == null) {
			return null;
		}
		var value = bag.$jB(property);
		if(value != null) {
			return value;
		}
		entity = bag.$pO.$gB;
	}
};
$CuE.__super__ = $CtB;
$CuE.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 2;
	}
	,$jB: function(name) {
		var float = this.$ed(name);
		if(float != null) {
			return float.$Lb;
		}
		var value = this.$fd.h[name];
		if(value != null) {
			return value;
		} else {
			return null;
		}
	}
	,$kB: function(name,value) {
		var float = this.$ed(name);
		if(float != null) {
			if(float.$Lb != value) {
				float.set__(value);
				this.$Jb.$fb(name,value);
			}
		} else if(this.$fd.h[name] != value) {
			this.$fd.h[name] = value;
			this.$Jb.$fb(name,value);
		}
		return this;
	}
	,$ed: function(name) {
		switch(name) {
		case "alpha":case "anchorX":case "anchorY":case "rotation":case "scaleX":case "scaleY":case "x":case "y":
			var sprite = this.$pO.$na[10];
			if(sprite != null) {
				var value = $CF.$j(sprite,name);
				if(((value) instanceof $CbE)) {
					return value;
				} else {
					return null;
				}
			}
			break;
		}
		return null;
	}
	,__class__: $CuE
});
var $CvE = function(pack,name,isSymbol) {
	if(isSymbol == null) {
		isSymbol = false;
	}
	this.$zd = pack;
	this.$Ud = pack.getFile(name + (isSymbol ? ".symbol" : ".scene"));
	this.$nd = isSymbol;
	var idx = name.lastIndexOf("/");
	this.$0d = idx >= 0 ? HxOverrides.substr(name,0,idx + 1) : "";
	this.$Rd();
	this.$od = new $CVE(0);
};
$hxClasses["$CvE"] = $CvE;
$CvE.__name__ = "$CvE";
$CvE.$2d = function(sceneName) {
	var requiredPacks = $CF.$j($CvG.$jB("scenes"),sceneName);
	if(requiredPacks != null) {
		return requiredPacks;
	} else {
		return [];
	}
};
$CvE.$3d = function(obj) {
	var map = new $CcC();
	if(obj != null) {
		var _g = 0;
		var _g1 = $CF.$o(obj);
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			if($CJ.$HB(k,"//")) {
				continue;
			}
			var value = $CvE.$4d($CF.$j(obj,k));
			if(value != null) {
				map.h[k] = value;
			}
		}
	}
	return map;
};
$CvE.$4d = function(str) {
	if(str != null) {
		str = $CJ.$MB(str);
		if(str.length == 0) {
			str = null;
		}
	}
	return str;
};
$CvE.$5d = function(obj,defVal) {
	if(obj != null) {
		return obj;
	} else {
		return defVal;
	}
};
$CvE.prototype = {
	$pd: function() {
		this.$Ud.dispose();
		return this;
	}
	,$NP: function() {
		return new $C3E(this);
	}
	,$qd: function() {
		return new $CpE(this);
	}
	,$rd: function(name,required) {
		if(required == null) {
			required = true;
		}
		var _g = 0;
		var _g1 = this.$id;
		while(_g < _g1.length) {
			var layer = _g1[_g];
			++_g;
			if(layer.$CP == name) {
				return layer;
			}
		}
		return null;
	}
	,$td: function(name,required) {
		if(required == null) {
			required = true;
		}
		return this.$1d.h[name];
	}
	,$xd: function(path) {
		return this.$zd.getTexture(this.$0d + $CNJ.$H3(path),false);
	}
	,$yd: function(name) {
		return this.$zd.getTexture(name);
	}
	,$Rd: function() {
		var json = this.$Ud.toJson();
		this.$IP = json.width;
		this.$JP = json.height;
		this.$gd = json.tilewidth;
		this.$hd = json.tileheight;
		var _this = json.tilesets;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = new $CxE(this,_this[i]);
		}
		this.$jd = result;
		this.$ld = json.backgroundcolor != null ? $CG.$3($CJ.$K(json.backgroundcolor,"#","0x")) : 8421504;
		this.$kd = new $CUC();
		var _g = 0;
		var _g1 = this.$jd;
		while(_g < _g1.length) {
			var _g2 = 0;
			var _g3 = _g1[_g++].$kd;
			while(_g2 < _g3.length) {
				var tile = _g3[_g2];
				++_g2;
				this.$kd.h[tile.$AC] = tile;
			}
		}
		var _this = json.layers;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = new $CwE(this,_this[i]);
		}
		this.$id = result;
		this.$LP = $CvE.$3d(json.properties);
		this.$md = new $CzE(json.script);
		this.$1d = new $CcC();
		var _g = 0;
		var _g1 = this.$id;
		while(_g < _g1.length) {
			var layer = _g1[_g];
			++_g;
			if(layer.$7d != null) {
				var _g2 = 0;
				var _g3 = layer.$7d;
				while(_g2 < _g3.length) {
					var object = _g3[_g2];
					++_g2;
					if(object.$CP != null) {
						this.$1d.h[object.$CP] = object;
					}
				}
			}
		}
	}
	,__class__: $CvE
};
var kit_creator_LayerType = $hxEnums["kit.creator.LayerType"] = { __ename__:true,__constructs__:null
	,Tile: {_hx_name:"Tile",_hx_index:0,__enum__:"kit.creator.LayerType",toString:$estr}
	,Object: {_hx_name:"Object",_hx_index:1,__enum__:"kit.creator.LayerType",toString:$estr}
};
kit_creator_LayerType.__constructs__ = [kit_creator_LayerType.Tile,kit_creator_LayerType.Object];
var $CwE = function(scene,json) {
	this.$$d = 1;
	this.$9d = 1;
	this.$7d = null;
	this.$kd = null;
	this.$Pd = scene;
	this.$CP = $CvE.$4d(json.name);
	var tmp;
	switch(json.type) {
	case "objectgroup":
		tmp = kit_creator_LayerType.Object;
		break;
	case "tilelayer":
		tmp = kit_creator_LayerType.Tile;
		break;
	default:
		tmp = null;
	}
	this.$hI = tmp;
	this.$IP = json.width;
	this.$JP = json.height;
	this.$6d = json.opacity;
	this.$GP = json.visible;
	if(json.data != null) {
		var _this = json.data;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			var tile = _this[i];
			result[i] = tile != 0 ? scene.$kd.h[tile] : null;
		}
		this.$kd = result;
	}
	if(json.objects != null) {
		var _this = json.objects;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = new $CwB(this,_this[i]);
		}
		this.$7d = result;
		if(json.draworder != "index") {
			this.$7d.sort(function(o1,o2) {
				return $CF.$q(o1.$RC + o1.$JP,o2.$RC + o2.$JP);
			});
		}
	}
	if(json.parallaxX != null) {
		this.$9d = json.parallaxX;
		this.$$d = json.parallaxY;
	}
	this.$_d = json.collisions;
	this.$LP = $CvE.$3d(json.properties);
};
$hxClasses["$CwE"] = $CwE;
$CwE.__name__ = "$CwE";
$CwE.prototype = {
	__class__: $CwE
};
var kit_creator_ObjectShape = $hxEnums["kit.creator.ObjectShape"] = { __ename__:true,__constructs__:null
	,Rectangle: {_hx_name:"Rectangle",_hx_index:0,__enum__:"kit.creator.ObjectShape",toString:$estr}
	,Ellipse: {_hx_name:"Ellipse",_hx_index:1,__enum__:"kit.creator.ObjectShape",toString:$estr}
	,Polygon: {_hx_name:"Polygon",_hx_index:2,__enum__:"kit.creator.ObjectShape",toString:$estr}
	,Polyline: {_hx_name:"Polyline",_hx_index:3,__enum__:"kit.creator.ObjectShape",toString:$estr}
	,Tile: {_hx_name:"Tile",_hx_index:4,__enum__:"kit.creator.ObjectShape",toString:$estr}
};
kit_creator_ObjectShape.__constructs__ = [kit_creator_ObjectShape.Rectangle,kit_creator_ObjectShape.Ellipse,kit_creator_ObjectShape.Polygon,kit_creator_ObjectShape.Polyline,kit_creator_ObjectShape.Tile];
var $CxE = function(scene,json) {
	this.$Ee = 0;
	this.$De = 0;
	this.$Ae = null;
	this.$Pd = scene;
	this.$CP = $CvE.$4d(json.name);
	this.$Ce = json.spacing;
	this.$Be = json.margin;
	var offset = json.tileoffset;
	if(offset != null) {
		this.$De = offset.x;
		this.$Ee = offset.y;
	}
	this.$gd = json.tilewidth;
	this.$hd = json.tileheight;
	if(json.image != null) {
		this.$Ae = scene.$xd(json.image);
		if(this.$Ae == null) {
			this.$Ae = scene.$yd(this.$CP);
		}
		var availableWidth = this.$Ae.get_width() - 2 * this.$Be;
		var availableHeight = this.$Ae.get_height();
		var tilesWide = (availableWidth + this.$Ce) / (this.$gd + this.$Ce) | 0;
		var tilesHigh = (availableHeight - 2 * this.$Be + this.$Ce) / (this.$hd + this.$Ce) | 0;
		this.$kd = new Array(tilesWide * tilesHigh);
		var ii = 0;
		var _g = 0;
		while(_g < tilesHigh) {
			var y = _g++;
			var _g1 = 0;
			while(_g1 < tilesWide) {
				var tile = new $CyE(this,json,ii);
				tile.$Ge = this.$Ae.subTexture(_g1++ * (this.$gd + this.$Ce) + this.$Be,y * (this.$hd + this.$Ce) + this.$Be,this.$gd,this.$hd);
				this.$kd[ii] = tile;
				++ii;
			}
		}
	} else {
		this.$kd = [];
	}
	if(json.tiles != null) {
		var _g = 0;
		var _g1 = $CF.$o(json.tiles);
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var tileJson = $CF.$j(json.tiles,key);
			var id = $CG.$3(key);
			var tile = this.$kd[id];
			if(tile == null) {
				tile = this.$kd[id] = new $CyE(this,json,id);
			}
			if(tileJson.image != null) {
				if(tile.$LP.h["previewImage"] != "true") {
					tile.$Ge = scene.$xd(tileJson.image);
					if(tile.$Ge == null) {
						tile.$Ge = scene.$yd(this.$CP);
					}
				}
			}
			if(tileJson.objectgroup != null) {
				var _g2 = 0;
				var _g3 = tileJson.objectgroup.objects;
				while(_g2 < _g3.length) tile.$He.push(new $CwB(null,_g3[_g2++]));
			}
		}
	}
	this.$LP = $CvE.$3d(json.properties);
};
$hxClasses["$CxE"] = $CxE;
$CxE.__name__ = "$CxE";
$CxE.prototype = {
	__class__: $CxE
};
var $CyE = function(tileset,json,localId) {
	this.$He = [];
	this.$Ge = null;
	this.$AC = json.firstgid + localId;
	this.$Fe = tileset;
	this.$LP = $CvE.$3d(json.tileproperties != null ? $CF.$j(json.tileproperties,"" + localId) : null);
};
$hxClasses["$CyE"] = $CyE;
$CyE.__name__ = "$CyE";
$CyE.prototype = {
	get_width: function() {
		if(this.$Ge != null) {
			return this.$Ge.get_width();
		} else {
			return $CG.$3(this.$LP.h["boundsWidth"]);
		}
	}
	,get_height: function() {
		if(this.$Ge != null) {
			return this.$Ge.get_height();
		} else {
			return $CG.$3(this.$LP.h["boundsHeight"]);
		}
	}
	,__class__: $CyE
	,__properties__: {get_$JP:"get_$JP",get_$IP:"get_$IP"}
};
var $CzE = function(json) {
	var tmp;
	if(json != null) {
		var _this = json.groups;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = new $C0E(_this[i]);
		}
		tmp = result;
	} else {
		tmp = [];
	}
	this.$Qd = tmp;
};
$hxClasses["$CzE"] = $CzE;
$CzE.__name__ = "$CzE";
$CzE.prototype = {
	__class__: $CzE
};
var $C0E = function(json) {
	this.$Wd = [];
	this.$CP = json.name;
	var _this = json.actions;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = new $C1E(_this[i]);
	}
	this.$Wd = result;
};
$hxClasses["$C0E"] = $C0E;
$C0E.__name__ = "$C0E";
$C0E.prototype = {
	__class__: $C0E
};
var $C1E = function(json) {
	this.$hI = json.type;
	var tmp;
	if(json.subActions != null) {
		var _this = json.subActions;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = new $C1E(_this[i]);
		}
		tmp = result;
	} else {
		tmp = [];
	}
	this.$Ie = tmp;
	this.$LP = $CvE.$3d(json.properties);
};
$hxClasses["$C1E"] = $C1E;
$C1E.__name__ = "$C1E";
$C1E.prototype = {
	__class__: $C1E
};
var $C2E = function(x,y,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.$kB(x,y,width,height);
};
$hxClasses["$C2E"] = $C2E;
$C2E.__name__ = "$C2E";
$C2E.prototype = {
	$kB: function(x,y,width,height) {
		this.$QC = x;
		this.$RC = y;
		this.$IP = width;
		this.$JP = height;
	}
	,$GB: function(x,y) {
		x -= this.$QC;
		if(this.$IP >= 0) {
			if(x < 0 || x > this.$IP) {
				return false;
			}
		} else if(x > 0 || x < this.$IP) {
			return false;
		}
		y -= this.$RC;
		if(this.$JP >= 0) {
			if(y < 0 || y > this.$JP) {
				return false;
			}
		} else if(y > 0 || y < this.$JP) {
			return false;
		}
		return true;
	}
	,$HQ: function(result) {
		if(result == null) {
			result = new $C2E();
		}
		result.$kB(this.$QC,this.$RC,this.$IP,this.$JP);
		return result;
	}
	,$MQ: function(other) {
		if(this.$QC == other.$QC && this.$RC == other.$RC && this.$IP == other.$IP) {
			return this.$JP == other.$JP;
		} else {
			return false;
		}
	}
	,get_empty: function() {
		if(!(this.$IP <= 0)) {
			return this.$JP <= 0;
		} else {
			return true;
		}
	}
	,__class__: $C2E
	,__properties__: {get_$d:"get_$d"}
};
var $C3E = function(scene) {
	this.$Te = false;
	this.$7d = new $CaC();
	this.$id = new $CcC();
	this.$2b = null;
	$C6B.call(this);
	this.$Jc = scene;
	var contentSprite = new $C6B();
	this.$Pe = new $CbE(0,function(x,_) {
		contentSprite.$QC.set__(-x);
	});
	this.$Qe = new $CbE(0,function(y,_) {
		contentSprite.$RC.set__(-y);
	});
	this.$Re = new $CbE(scene.$gd * scene.$IP);
	this.$Se = new $CbE(scene.$hd * scene.$JP);
	this.$Oe = new $CRE().$8(contentSprite);
};
$hxClasses["$C3E"] = $C3E;
$C3E.__name__ = "$C3E";
$C3E.$ce = function(result) {
	if(result == null) {
		result = new $C2E();
	}
	var width = $CvG.$jB("width");
	var height = $CvG.$jB("height");
	var scale = Math.min($CcE.$Gc.$xa.get_width() / width,$CcE.$Gc.$xa.get_height() / height);
	if($CvG.$jB("scaleMode") == 1) {
		var overscanWidth = Math.max(width,$CvG.$jB("maxWidth") | 0);
		var overscanHeight = Math.max(height,$CvG.$jB("maxHeight") | 0);
		result.$IP = Math.min($CcE.$Gc.$xa.get_width() / scale,overscanWidth);
		result.$JP = Math.min($CcE.$Gc.$xa.get_height() / scale,overscanHeight);
	} else {
		result.$IP = $CcE.$Gc.$xa.get_width() / scale;
		result.$JP = $CcE.$Gc.$xa.get_height() / scale;
	}
	result.$QC = -(result.$IP / 2 - width / 2);
	result.$RC = -(result.$JP / 2 - height / 2);
	return result;
};
$C3E.__super__ = $C6B;
$C3E.prototype = $extend($C6B.prototype,{
	$tO: function() {
		$C6B.prototype.$tO.call(this);
		var _g = 0;
		var _g1 = this.$Jc.$id;
		while(_g < _g1.length) {
			var entity = new $CRE();
			this.$We(_g1[_g++],entity);
			this.$Oe.$rB(entity);
		}
	}
	,$Ue: function(x,y,width,height) {
		this.$Pe.set__(x);
		this.$Qe.set__(y);
		this.$Re.set__(width);
		this.$Se.set__(height);
		return this;
	}
	,$rO: function() {
		$C6B.prototype.$rO.call(this);
		this.$pO.$rB(this.$Oe);
	}
	,$1Q: function(g) {
		if(this.$2b != null) {
			this.$2b.$Od(this);
		}
		if(this.$Te) {
			var viewport = $C3E.$ce($C3E.$de);
			g.fillRect(this.$Jc.$ld,viewport.$QC,viewport.$RC,viewport.$IP,viewport.$JP);
		}
	}
	,$vO: function(dt) {
		$C6B.prototype.$vO.call(this,dt);
		this.$Pe.$5K(dt);
		this.$Qe.$5K(dt);
		this.$Re.$5K(dt);
		this.$Se.$5K(dt);
	}
	,$We: function(layer,container) {
		var sprite;
		switch(layer.$hI._hx_index) {
		case 0:
			sprite = new $C4E(this,this.$Jc,layer);
			break;
		case 1:
			sprite = new $C6B();
			break;
		}
		sprite.$PQ.set__(layer.$6d);
		sprite.set_visible(layer.$GP);
		container.$8(sprite);
		switch(layer.$hI._hx_index) {
		case 0:
			break;
		case 1:
			var _g = 0;
			var _g1 = layer.$7d;
			while(_g < _g1.length) {
				var object = _g1[_g];
				++_g;
				var editable = this.$ae(object,true);
				if(editable != null && !editable.spawned) {
					continue;
				}
				var entity = this.$7d.h[object.__id__];
				if(object.$jJ == kit_creator_ObjectShape.Tile) {
					if(entity == null) {
						entity = new $CRE();
						this.$7d.set(object,entity);
					}
					entity.$8(object.$NP());
					if(editable != null) {
						entity.$8(editable);
					}
				}
				if(entity != null) {
					container.$rB(entity);
				}
			}
			break;
		}
		this.$id.h[layer.$CP] = container;
	}
	,$hQ: function() {
		if(this.$Jc.$nd) {
			return 0;
		} else {
			return this.$Re.$Lb;
		}
	}
	,$iQ: function() {
		if(this.$Jc.$nd) {
			return 0;
		} else {
			return this.$Se.$Lb;
		}
	}
	,$ae: function(object,useCache) {
		if(object.$hI == null) {
			return null;
		}
		if(useCache) {
			var entity = this.$7d.h[object.__id__];
			if(entity != null) {
				var editable = entity.$na[5];
				if(editable != null) {
					return editable;
				}
			}
		}
		var name = object.$hI;
		var cl = $hxClasses[name];
		if(cl == null) {
			return null;
		}
		var editable = Type.createInstance(cl,[]);
		if(useCache) {
			this.$7d.set(object,new $CRE().$8(editable));
		}
		this.$be(object,editable,cl);
		return editable;
	}
	,$be: function(object,editable,cl) {
		var key_keys = Object.keys(object.$LP.h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var value = object.$LP.h[key];
			var type = $CzG.$Xm(cl,key);
			if(type != null) {
				var typedValue = this.$Td(type,value,object.$hI + "." + key);
				if(typedValue != null) {
					$CF.$m(editable,key,typedValue);
				}
			}
		}
		editable.info = object;
	}
	,$Td: function(type,value,debugPath) {
		var typedValue = $CzG.$Td(type,value);
		if(typedValue != null) {
			return typedValue;
		}
		switch(type._hx_index) {
		case 4:
			var elementType = type.elementType;
			var result = [];
			var _g = 0;
			var _g1 = value.split(",");
			while(_g < _g1.length) result.push(this.$Td(elementType,$CJ.$MB(_g1[_g++]),debugPath));
			return result;
		case 6:
			var _g = type.type;
			switch(_g) {
			case $CRE:
				var otherObject = this.$Jc.$td(value,false);
				if(otherObject == null) {
					return null;
				}
				var otherEditable = this.$ae(otherObject,true);
				if(otherEditable != null) {
					return otherEditable.$pO;
				} else {
					return null;
				}
				break;
			case $CwE:
				return this.$Jc.$rd(value,false);
			case $CwB:
				return this.$Jc.$td(value,false);
			default:
				var classType = _g;
				var otherObject = this.$Jc.$td(value,false);
				if(otherObject == null) {
					return null;
				}
				var otherEditable = this.$ae(otherObject,true);
				if(otherEditable != null) {
					if(js_Boot.__instanceof(otherEditable,classType)) {
						return otherEditable;
					} else {
						classType.__name__;
					}
				}
			}
			break;
		default:
		}
		return null;
	}
	,__class__: $C3E
});
var $C4E = function(sceneSprite,map,layer) {
	$C6B.call(this);
	this.$ee = sceneSprite;
	this.$fe = map;
	this.$ge = layer;
};
$hxClasses["$C4E"] = $C4E;
$C4E.__name__ = "$C4E";
$C4E.__super__ = $C6B;
$C4E.prototype = $extend($C6B.prototype,{
	$hQ: function() {
		return this.$fe.$gd * this.$ge.$IP;
	}
	,$iQ: function() {
		return this.$fe.$hd * this.$ge.$JP;
	}
	,$jQ: function(localX,localY) {
		var tileX = localX / this.$fe.$gd | 0;
		if(tileX < 0 || tileX >= this.$ge.$IP) {
			return false;
		}
		var tileY = localY / this.$fe.$hd | 0;
		if(tileY < 0 || tileY >= this.$ge.$JP) {
			return false;
		}
		return this.$ge.$kd[tileY * this.$ge.$IP + tileX] != null;
	}
	,$1Q: function(g) {
		var tileWidth = this.$fe.$gd;
		var tileHeight = this.$fe.$hd;
		var layerWidth = this.$ge.$IP;
		var layerHeight = this.$ge.$JP;
		var viewport = $C3E.$ce($C3E.$de);
		viewport.$QC = (viewport.$QC - this.$QC.$Lb) / this.$NQ.$Lb;
		viewport.$RC = (viewport.$RC - this.$RC.$Lb) / this.$OQ.$Lb;
		viewport.$IP /= this.$NQ.$Lb;
		viewport.$JP /= this.$OQ.$Lb;
		var minX = $CGG.$sG(viewport.$QC / tileWidth | 0,0,layerWidth);
		var minY = $CGG.$sG(viewport.$RC / tileHeight | 0,0,layerHeight);
		var maxX = $CGG.$sG(minX + Math.ceil(viewport.$IP / tileWidth) + 1,0,layerWidth);
		var maxY = $CGG.$sG(minY + Math.ceil(viewport.$JP / tileHeight) + 1,0,layerHeight);
		var _g = minY;
		while(_g < maxY) {
			var y = _g++;
			var _g1 = minX;
			while(_g1 < maxX) {
				var x = _g1++;
				var tile = this.$ge.$kd[y * layerWidth + x];
				if(tile != null) {
					var tileset = tile.$Fe;
					g.drawTexture(tile.$Ge,x * tileWidth + tileset.$De,y * tileHeight + tileset.$Ee - tileset.$hd + tileHeight);
				}
			}
		}
	}
	,__class__: $C4E
});
var kit_creator_ui_DockX = $hxEnums["kit.creator.ui.DockX"] = { __ename__:true,__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"kit.creator.ui.DockX",toString:$estr}
	,Left: {_hx_name:"Left",_hx_index:1,__enum__:"kit.creator.ui.DockX",toString:$estr}
	,Right: {_hx_name:"Right",_hx_index:2,__enum__:"kit.creator.ui.DockX",toString:$estr}
};
kit_creator_ui_DockX.__constructs__ = [kit_creator_ui_DockX.None,kit_creator_ui_DockX.Left,kit_creator_ui_DockX.Right];
var kit_creator_ui_DockY = $hxEnums["kit.creator.ui.DockY"] = { __ename__:true,__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"kit.creator.ui.DockY",toString:$estr}
	,Top: {_hx_name:"Top",_hx_index:1,__enum__:"kit.creator.ui.DockY",toString:$estr}
	,Bottom: {_hx_name:"Bottom",_hx_index:2,__enum__:"kit.creator.ui.DockY",toString:$estr}
};
kit_creator_ui_DockY.__constructs__ = [kit_creator_ui_DockY.None,kit_creator_ui_DockY.Top,kit_creator_ui_DockY.Bottom];
var kit_creator_ui_Widget = function() {
	this.dockY = kit_creator_ui_DockY.None;
	this.dockX = kit_creator_ui_DockX.None;
	this.onClick = null;
	this.onPointerUp = null;
	this.onPointerOut = null;
	this.onPointerIn = null;
	this.onPointerDown = null;
	this.pointerEnabled = true;
	kit_creator_CreatorObject.call(this);
};
$hxClasses["kit.creator.ui.Widget"] = kit_creator_ui_Widget;
kit_creator_ui_Widget.__name__ = "kit.creator.ui.Widget";
kit_creator_ui_Widget.__super__ = kit_creator_CreatorObject;
kit_creator_ui_Widget.prototype = $extend(kit_creator_CreatorObject.prototype,{
	$tO: function() {
		var _gthis = this;
		kit_creator_CreatorObject.prototype.$tO.call(this);
		var sprite = this.$pO.$na[10];
		if(sprite == null) {
			return;
		}
		sprite.set_pointerEnabled(this.pointerEnabled);
		if(this.onPointerDown != null) {
			this.$he(sprite.get_pointerDown(),this.onPointerDown);
		}
		if(this.onPointerIn != null) {
			this.$he(sprite.get_pointerIn(),this.onPointerIn);
		}
		if(this.onPointerOut != null) {
			this.$he(sprite.get_pointerOut(),this.onPointerOut);
		}
		if(this.onPointerUp != null) {
			this.$he(sprite.get_pointerUp(),this.onPointerUp);
		}
		if(this.onClick != null) {
			sprite.get_pointerDown().$eb(function(_) {
				_gthis.$he($CcE.$Gc.$va.up,_gthis.onClick).$Ob();
			});
		}
		this.$pO.$Za(10,$C3E);
		var layout = function() {
			var preferredWidth = $CvG.$jB("width");
			var preferredHeight = $CvG.$jB("height");
			var viewport = $C3E.$ce(kit_creator_ui_Widget.$de);
			switch(_gthis.dockX._hx_index) {
			case 0:
				break;
			case 1:
				sprite.$QC.set__(_gthis.info.$QC + viewport.$QC);
				break;
			case 2:
				sprite.$QC.set__(_gthis.info.$QC + viewport.$IP - preferredWidth + viewport.$QC);
				break;
			}
			switch(_gthis.dockY._hx_index) {
			case 0:
				break;
			case 1:
				sprite.$RC.set__(_gthis.info.$RC + viewport.$RC);
				break;
			case 2:
				sprite.$RC.set__(_gthis.info.$RC + viewport.$JP - preferredHeight + viewport.$RC);
				break;
			}
		};
		if(this.dockX != kit_creator_ui_DockX.None || this.dockY != kit_creator_ui_DockY.None) {
			layout();
			this.$yO($CcE.$Gc.$xa.resize,layout);
		}
	}
	,$he: function(signal,message) {
		var _gthis = this;
		return signal.$eb(function(_) {
			if(_gthis.$pO != null) {
				_gthis.$pO.$Oa(message,_gthis.$pO);
			}
		});
	}
	,__class__: kit_creator_ui_Widget
});
var kit_creator_ui_Button = function() {
	this.pressDistance = 10;
	kit_creator_ui_Widget.call(this);
};
$hxClasses["kit.creator.ui.Button"] = kit_creator_ui_Button;
kit_creator_ui_Button.__name__ = "kit.creator.ui.Button";
kit_creator_ui_Button.__super__ = kit_creator_ui_Widget;
kit_creator_ui_Button.prototype = $extend(kit_creator_ui_Widget.prototype,{
	$tO: function() {
		var _gthis = this;
		var sprite = this.$pO.$na[10];
		var objectSprite = ((sprite) instanceof $CrE) ? sprite : null;
		var pressed = false;
		var hovering = false;
		sprite.get_pointerIn().$eb(function(_) {
			hovering = true;
			if(objectSprite != null) {
				objectSprite.$Zd(pressed ? "down" : "hover",false);
			}
		});
		sprite.get_pointerOut().$eb(function(_) {
			hovering = false;
			if(objectSprite != null) {
				objectSprite.$Zd("up");
			}
		});
		sprite.get_pointerDown().$eb(function(_) {
			pressed = true;
			var fh = sprite.$RC;
			fh.set__(fh.$Lb + _gthis.pressDistance);
			if(objectSprite != null) {
				objectSprite.$Zd("down");
			}
			$CcE.$Gc.$va.up.$eb(function(_) {
				pressed = false;
				var fh = sprite.$RC;
				fh.set__(fh.$Lb - _gthis.pressDistance);
				if(objectSprite != null) {
					objectSprite.$Zd(hovering ? "hover" : "up");
				}
			}).$Ob();
		});
		kit_creator_ui_Widget.prototype.$tO.call(this);
	}
	,__class__: kit_creator_ui_Button
});
var kit_creator_ui_Image = function() {
	kit_creator_ui_Widget.call(this);
};
$hxClasses["kit.creator.ui.Image"] = kit_creator_ui_Image;
kit_creator_ui_Image.__name__ = "kit.creator.ui.Image";
kit_creator_ui_Image.__super__ = kit_creator_ui_Widget;
kit_creator_ui_Image.prototype = $extend(kit_creator_ui_Widget.prototype,{
	__class__: kit_creator_ui_Image
});
var kit_display_TextAlign = $hxEnums["kit.display.TextAlign"] = { __ename__:true,__constructs__:null
	,Left: {_hx_name:"Left",_hx_index:0,__enum__:"kit.display.TextAlign",toString:$estr}
	,Center: {_hx_name:"Center",_hx_index:1,__enum__:"kit.display.TextAlign",toString:$estr}
	,Right: {_hx_name:"Right",_hx_index:2,__enum__:"kit.display.TextAlign",toString:$estr}
};
kit_display_TextAlign.__constructs__ = [kit_display_TextAlign.Left,kit_display_TextAlign.Center,kit_display_TextAlign.Right];
var kit_creator_ui_Text = function() {
	this.textAlign = kit_display_TextAlign.Left;
	this.lineSpacing = 0;
	this.strokeWidth = 0;
	this.strokeColor = 16777215;
	this.color = 0;
	this.italic = false;
	this.bold = false;
	this.fontSize = 24;
	this.text = "Your text";
	this.systemFont = null;
	this.font = null;
	kit_creator_ui_Widget.call(this);
};
$hxClasses["kit.creator.ui.Text"] = kit_creator_ui_Text;
kit_creator_ui_Text.__name__ = "kit.creator.ui.Text";
kit_creator_ui_Text.__super__ = kit_creator_ui_Widget;
kit_creator_ui_Text.prototype = $extend(kit_creator_ui_Widget.prototype,{
	$tO: function() {
		var fontAsset;
		if(this.font != null) {
			fontAsset = this.$pO.$Za(13).getVectorFont(this.font);
		} else {
			fontAsset = $CcE.$Gc.$wa.createSystemFont(this.systemFont != null ? this.systemFont : "sans");
		}
		var sprite = new $CsF(fontAsset,$CJ.$K(this.text,"\\n","\n"));
		sprite.$_f.set__(this.fontSize);
		sprite.set_bold(this.bold);
		sprite.set_italic(this.italic);
		sprite.set_color(this.color);
		sprite.set_strokeColor(this.strokeColor);
		sprite.$Dg.set__(this.strokeWidth);
		sprite.$vf.set__(this.lineSpacing);
		sprite.set_align(this.textAlign);
		sprite.$tf.set__(this.info.$IP);
		this.$pO.$8(sprite);
		this.info.$OP(sprite);
		this.$ie(true);
		kit_creator_ui_Widget.prototype.$tO.call(this);
	}
	,$ie: function(addListeners) {
		var _gthis = this;
		var value = this.$pO.$na[10];
		var sprite = ((value) instanceof $CsF) ? value : null;
		if(this.$pO.$Za(0) == null) {
			return;
		}
		var escapedText = $CJ.$K(this.text,"\\n","\n");
		var bags = null;
		sprite.set_text(new $CB("\\{(.+?)\\}","g").$L(escapedText,function(m) {
			var name = m.$E(1);
			if(bags == null) {
				bags = [];
				var entity = _gthis.$pO;
				while(entity != null) {
					var bag = entity.$na[2];
					if(bag != null) {
						bags.push(bag);
					}
					entity = entity.$gB;
				}
			}
			if(addListeners) {
				var _g = 0;
				while(_g < bags.length) _gthis.$0O(bags[_g++].$Jb,function(changedName,_) {
					if(changedName == name) {
						_gthis.$ie(false);
					}
				});
			}
			var _g = 0;
			while(_g < bags.length) {
				var value = bags[_g++].$jB(name);
				if(value != null) {
					return "" + $CG.$1(value);
				}
			}
			return "0";
		}));
	}
	,__class__: kit_creator_ui_Text
});
var kit_display_BlendMode = $hxEnums["kit.display.BlendMode"] = { __ename__:true,__constructs__:null
	,Normal: {_hx_name:"Normal",_hx_index:0,__enum__:"kit.display.BlendMode",toString:$estr}
	,Add: {_hx_name:"Add",_hx_index:1,__enum__:"kit.display.BlendMode",toString:$estr}
	,Multiply: {_hx_name:"Multiply",_hx_index:2,__enum__:"kit.display.BlendMode",toString:$estr}
	,Screen: {_hx_name:"Screen",_hx_index:3,__enum__:"kit.display.BlendMode",toString:$estr}
	,Mask: {_hx_name:"Mask",_hx_index:4,__enum__:"kit.display.BlendMode",toString:$estr}
	,Copy: {_hx_name:"Copy",_hx_index:5,__enum__:"kit.display.BlendMode",toString:$estr}
};
kit_display_BlendMode.__constructs__ = [kit_display_BlendMode.Normal,kit_display_BlendMode.Add,kit_display_BlendMode.Multiply,kit_display_BlendMode.Screen,kit_display_BlendMode.Mask,kit_display_BlendMode.Copy];
var $C5E = function() { };
$hxClasses["$C5E"] = $C5E;
$C5E.__name__ = "$C5E";
$C5E.__isInterface__ = true;
$C5E.prototype = {
	__class__: $C5E
};
var $C6E = function() {
	this.$je = [];
};
$hxClasses["$C6E"] = $C6E;
$C6E.__name__ = "$C6E";
$C6E.__interfaces__ = [$C5E];
$C6E.prototype = {
	save: function() {
		this.$8(new $C8E());
	}
	,translate: function(x,y) {
		this.$8(new $C9E(x,y));
	}
	,scale: function(x,y) {
		this.$8(new $C$E(x,y));
	}
	,rotate: function(rotation) {
		this.$8(new $C_$E(rotation));
	}
	,transform: function(m00,m10,m01,m11,m02,m12) {
		this.$8(new $CAF(m00,m10,m01,m11,m02,m12));
	}
	,multiplyAlpha: function(factor) {
		this.$8(new $CBF(factor));
	}
	,setAlpha: function(alpha) {
		this.$8(new $CCF(alpha));
	}
	,tint: function(red,green,blue) {
		this.$8(new $CDF(red,green,blue));
	}
	,setBlendMode: function(blendMode) {
		this.$8(new $CEF(blendMode));
	}
	,beginMask: function() {
		this.$8(new $CGF());
	}
	,endMask: function() {
		this.$8(new $CHF());
	}
	,applyScissor: function(x,y,width,height) {
		this.$8(new $CFF(x,y,width,height));
	}
	,restore: function() {
		this.$8(new $CIF());
	}
	,drawTexture: function(texture,destX,destY) {
		this.$8(new $CJF(texture,destX,destY));
	}
	,drawSubTexture: function(texture,destX,destY,sourceX,sourceY,sourceW,sourceH) {
		this.$8(new $CKF(texture,destX,destY,sourceX,sourceY,sourceW,sourceH));
	}
	,drawPattern: function(texture,destX,destY,width,height) {
		this.$8(new $CLF(texture,destX,destY,width,height));
	}
	,fillRect: function(color,x,y,width,height) {
		this.$8(new $CaF(color,x,y,width,height));
	}
	,fillTriangles: function(color,verts,indices) {
		this.$8(new $CMF(color,verts.slice(),indices.slice()));
	}
	,drawTriangles: function(texture,verts,indices,uvs) {
		this.$8(new $CNF(texture,verts.slice(),indices.slice(),uvs != null ? uvs.slice() : null));
	}
	,fillPolygon: function(color,points) {
		this.$8(new $COF(color,points.slice()));
	}
	,drawPolygon: function(texture,points) {
		this.$8(new $CPF(texture,points.slice()));
	}
	,drawCircle: function(texture,centerX,centerY,radius,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$8(new $CQF(texture,centerX,centerY,radius,edges));
	}
	,fillCircle: function(color,centerX,centerY,radius,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$8(new $CRF(color,centerX,centerY,radius,edges));
	}
	,strokeCircle: function(color,centerX,centerY,radius,strokeWidth,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$8(new $CSF(color,centerX,centerY,radius,strokeWidth,edges));
	}
	,drawEllipse: function(texture,centerX,centerY,radiusX,radiusY,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$8(new $CUF(texture,centerX,centerY,radiusX,radiusY,edges));
	}
	,fillEllipse: function(color,centerX,centerY,radiusX,radiusY,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$8(new $CTF(color,centerX,centerY,radiusX,radiusY,edges));
	}
	,strokeEllipse: function(color,centerX,centerY,radiusX,radiusY,strokeWidth,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$8(new $CVF(color,centerX,centerY,radiusX,radiusY,strokeWidth,edges));
	}
	,fillArc: function(color,centerX,centerY,radius,startAngle,angle,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$8(new $CWF(color,centerX,centerY,radius,startAngle,angle,edges));
	}
	,strokeArc: function(color,centerX,centerY,radius,startAngle,angle,strokeWidth,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$8(new $CXF(color,centerX,centerY,radius,startAngle,angle,strokeWidth,edges));
	}
	,strokeLines: function(color,points,thickness) {
		this.$8(new $CYF(color,points.slice(),thickness));
	}
	,drawLines: function(texture,points,thickness) {
		this.$8(new $CZF(texture,points.slice(),thickness));
	}
	,$JR: function(g) {
		var ll = this.$je.length;
		var _g = 0;
		while(_g < ll) this.$je[_g++].$JR(g);
	}
	,$8: function(command) {
		this.$je.push(command);
	}
	,__class__: $C6E
};
var $C7E = function() { };
$hxClasses["$C7E"] = $C7E;
$C7E.__name__ = "$C7E";
$C7E.prototype = {
	$JR: function(g) {
	}
	,__class__: $C7E
};
var $C8E = function() {
};
$hxClasses["$C8E"] = $C8E;
$C8E.__name__ = "$C8E";
$C8E.__super__ = $C7E;
$C8E.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.save();
	}
	,__class__: $C8E
});
var $C9E = function(x,y) {
	this.$ke = x;
	this.$le = y;
};
$hxClasses["$C9E"] = $C9E;
$C9E.__name__ = "$C9E";
$C9E.__super__ = $C7E;
$C9E.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.translate(this.$ke,this.$le);
	}
	,__class__: $C9E
});
var $C$E = function(x,y) {
	this.$ke = x;
	this.$le = y;
};
$hxClasses["$C$E"] = $C$E;
$C$E.__name__ = "$C$E";
$C$E.__super__ = $C7E;
$C$E.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.scale(this.$ke,this.$le);
	}
	,__class__: $C$E
});
var $C_$E = function(rotation) {
	this.$me = rotation;
};
$hxClasses["$C_E"] = $C_$E;
$C_$E.__name__ = "$C_E";
$C_$E.__super__ = $C7E;
$C_$E.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.rotate(this.$me);
	}
	,__class__: $C_$E
});
var $CAF = function(m00,m10,m01,m11,m02,m12) {
	this.$ne = m00;
	this.$oe = m10;
	this.$pe = m01;
	this.$qe = m11;
	this.$re = m02;
	this.$se = m12;
};
$hxClasses["$CAF"] = $CAF;
$CAF.__name__ = "$CAF";
$CAF.__super__ = $C7E;
$CAF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.transform(this.$ne,this.$oe,this.$pe,this.$qe,this.$re,this.$se);
	}
	,__class__: $CAF
});
var $CBF = function(factor) {
	this.$te = factor;
};
$hxClasses["$CBF"] = $CBF;
$CBF.__name__ = "$CBF";
$CBF.__super__ = $C7E;
$CBF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.multiplyAlpha(this.$te);
	}
	,__class__: $CBF
});
var $CCF = function(alpha) {
	this.$ue = alpha;
};
$hxClasses["$CCF"] = $CCF;
$CCF.__name__ = "$CCF";
$CCF.__super__ = $C7E;
$CCF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.setAlpha(this.$ue);
	}
	,__class__: $CCF
});
var $CDF = function(red,green,blue) {
	this.$ve = red;
	this.$we = green;
	this.$xe = blue;
};
$hxClasses["$CDF"] = $CDF;
$CDF.__name__ = "$CDF";
$CDF.__super__ = $C7E;
$CDF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.tint(this.$ve,this.$we,this.$xe);
	}
	,__class__: $CDF
});
var $CEF = function(blendMode) {
	this.$ye = blendMode;
};
$hxClasses["$CEF"] = $CEF;
$CEF.__name__ = "$CEF";
$CEF.__super__ = $C7E;
$CEF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.setBlendMode(this.$ye);
	}
	,__class__: $CEF
});
var $CFF = function(x,y,width,height) {
	this.$ke = x;
	this.$le = y;
	this.$ze = width;
	this.$mT = height;
};
$hxClasses["$CFF"] = $CFF;
$CFF.__name__ = "$CFF";
$CFF.__super__ = $C7E;
$CFF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.applyScissor(this.$ke,this.$le,this.$ze,this.$mT);
	}
	,__class__: $CFF
});
var $CGF = function() {
};
$hxClasses["$CGF"] = $CGF;
$CGF.__name__ = "$CGF";
$CGF.__super__ = $C7E;
$CGF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.beginMask();
	}
	,__class__: $CGF
});
var $CHF = function() {
};
$hxClasses["$CHF"] = $CHF;
$CHF.__name__ = "$CHF";
$CHF.__super__ = $C7E;
$CHF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.endMask();
	}
	,__class__: $CHF
});
var $CIF = function() {
};
$hxClasses["$CIF"] = $CIF;
$CIF.__name__ = "$CIF";
$CIF.__super__ = $C7E;
$CIF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.restore();
	}
	,__class__: $CIF
});
var $CJF = function(texture,destX,destY) {
	this.$0e = texture;
	this.$1e = destX;
	this.$2e = destY;
};
$hxClasses["$CJF"] = $CJF;
$CJF.__name__ = "$CJF";
$CJF.__super__ = $C7E;
$CJF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.drawTexture(this.$0e,this.$1e,this.$2e);
	}
	,__class__: $CJF
});
var $CKF = function(texture,destX,destY,sourceX,sourceY,sourceW,sourceH) {
	this.$0e = texture;
	this.$1e = destX;
	this.$2e = destY;
	this.$3e = sourceX;
	this.$4e = sourceY;
	this.$5e = sourceW;
	this.$6e = sourceH;
};
$hxClasses["$CKF"] = $CKF;
$CKF.__name__ = "$CKF";
$CKF.__super__ = $C7E;
$CKF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.drawSubTexture(this.$0e,this.$1e,this.$2e,this.$3e,this.$4e,this.$5e,this.$6e);
	}
	,__class__: $CKF
});
var $CLF = function(texture,destX,destY,width,height) {
	this.$0e = texture;
	this.$1e = destX;
	this.$2e = destY;
	this.$ze = width;
	this.$mT = height;
};
$hxClasses["$CLF"] = $CLF;
$CLF.__name__ = "$CLF";
$CLF.__super__ = $C7E;
$CLF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.drawPattern(this.$0e,this.$1e,this.$2e,this.$ze,this.$mT);
	}
	,__class__: $CLF
});
var $CMF = function(color,points,indices) {
	this.$7e = color;
	this.$8e = points;
	this.$9e = indices;
};
$hxClasses["$CMF"] = $CMF;
$CMF.__name__ = "$CMF";
$CMF.__super__ = $C7E;
$CMF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.fillTriangles(this.$7e,this.$8e,this.$9e);
	}
	,__class__: $CMF
});
var $CNF = function(texture,points,indices,uvs) {
	this.$0e = texture;
	this.$8e = points;
	this.$9e = indices;
	this.$$e = uvs;
};
$hxClasses["$CNF"] = $CNF;
$CNF.__name__ = "$CNF";
$CNF.__super__ = $C7E;
$CNF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.drawTriangles(this.$0e,this.$8e,this.$9e,this.$$e);
	}
	,__class__: $CNF
});
var $COF = function(color,points) {
	this.$7e = color;
	this.$8e = points;
};
$hxClasses["$COF"] = $COF;
$COF.__name__ = "$COF";
$COF.__super__ = $C7E;
$COF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.fillPolygon(this.$7e,this.$8e);
	}
	,__class__: $COF
});
var $CPF = function(texture,points) {
	this.$0e = texture;
	this.$8e = points;
};
$hxClasses["$CPF"] = $CPF;
$CPF.__name__ = "$CPF";
$CPF.__super__ = $C7E;
$CPF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.drawPolygon(this.$0e,this.$8e);
	}
	,__class__: $CPF
});
var $CQF = function(texture,centerX,centerY,radius,edges) {
	this.$0e = texture;
	this.$_e = centerX;
	this.$Af = centerY;
	this.$Bf = radius;
	this.$Cf = edges;
};
$hxClasses["$CQF"] = $CQF;
$CQF.__name__ = "$CQF";
$CQF.__super__ = $C7E;
$CQF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.drawCircle(this.$0e,this.$_e,this.$Af,this.$Bf,this.$Cf);
	}
	,__class__: $CQF
});
var $CRF = function(color,centerX,centerY,radius,edges) {
	this.$7e = color;
	this.$_e = centerX;
	this.$Af = centerY;
	this.$Bf = radius;
	this.$Cf = edges;
};
$hxClasses["$CRF"] = $CRF;
$CRF.__name__ = "$CRF";
$CRF.__super__ = $C7E;
$CRF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.fillCircle(this.$7e,this.$_e,this.$Af,this.$Bf,this.$Cf);
	}
	,__class__: $CRF
});
var $CSF = function(color,centerX,centerY,radius,strokeWidth,edges) {
	this.$7e = color;
	this.$_e = centerX;
	this.$Af = centerY;
	this.$Bf = radius;
	this.$Df = strokeWidth;
	this.$Cf = edges;
};
$hxClasses["$CSF"] = $CSF;
$CSF.__name__ = "$CSF";
$CSF.__super__ = $C7E;
$CSF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.strokeCircle(this.$7e,this.$_e,this.$Af,this.$Bf,this.$Df,this.$Cf);
	}
	,__class__: $CSF
});
var $CTF = function(color,centerX,centerY,radiusX,radiusY,edges) {
	this.$7e = color;
	this.$_e = centerX;
	this.$Af = centerY;
	this.$Ef = radiusX;
	this.$Ff = radiusY;
	this.$Cf = edges;
};
$hxClasses["$CTF"] = $CTF;
$CTF.__name__ = "$CTF";
$CTF.__super__ = $C7E;
$CTF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.fillEllipse(this.$7e,this.$_e,this.$Af,this.$Ef,this.$Ff,this.$Cf);
	}
	,__class__: $CTF
});
var $CUF = function(texture,centerX,centerY,radiusX,radiusY,edges) {
	this.$0e = texture;
	this.$_e = centerX;
	this.$Af = centerY;
	this.$Ef = radiusX;
	this.$Ff = radiusY;
	this.$Cf = edges;
};
$hxClasses["$CUF"] = $CUF;
$CUF.__name__ = "$CUF";
$CUF.__super__ = $C7E;
$CUF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.drawEllipse(this.$0e,this.$_e,this.$Af,this.$Ef,this.$Ff,this.$Cf);
	}
	,__class__: $CUF
});
var $CVF = function(color,centerX,centerY,radiusX,radiusY,strokeWidth,edges) {
	this.$7e = color;
	this.$_e = centerX;
	this.$Af = centerY;
	this.$Ef = radiusX;
	this.$Ff = radiusY;
	this.$Df = strokeWidth;
	this.$Cf = edges;
};
$hxClasses["$CVF"] = $CVF;
$CVF.__name__ = "$CVF";
$CVF.__super__ = $C7E;
$CVF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.strokeEllipse(this.$7e,this.$_e,this.$Af,this.$Ef,this.$Ff,this.$Df,this.$Cf);
	}
	,__class__: $CVF
});
var $CWF = function(color,centerX,centerY,radius,startAngle,angle,edges) {
	this.$7e = color;
	this.$_e = centerX;
	this.$Af = centerY;
	this.$Bf = radius;
	this.$Gf = startAngle;
	this.$Hf = angle;
	this.$Cf = edges;
};
$hxClasses["$CWF"] = $CWF;
$CWF.__name__ = "$CWF";
$CWF.__super__ = $C7E;
$CWF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.fillArc(this.$7e,this.$_e,this.$Af,this.$Bf,this.$Gf,this.$Hf,this.$Cf);
	}
	,__class__: $CWF
});
var $CXF = function(color,centerX,centerY,radius,startAngle,angle,strokeWidth,edges) {
	this.$7e = color;
	this.$_e = centerX;
	this.$Af = centerY;
	this.$Bf = radius;
	this.$Gf = startAngle;
	this.$Hf = angle;
	this.$Df = strokeWidth;
	this.$Cf = edges;
};
$hxClasses["$CXF"] = $CXF;
$CXF.__name__ = "$CXF";
$CXF.__super__ = $C7E;
$CXF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.strokeArc(this.$7e,this.$_e,this.$Af,this.$Bf,this.$Gf,this.$Hf,this.$Df,this.$Cf);
	}
	,__class__: $CXF
});
var $CYF = function(color,points,thickness) {
	this.$7e = color;
	this.$8e = points;
	this.$If = thickness;
};
$hxClasses["$CYF"] = $CYF;
$CYF.__name__ = "$CYF";
$CYF.__super__ = $C7E;
$CYF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.strokeLines(this.$7e,this.$8e,this.$If);
	}
	,__class__: $CYF
});
var $CZF = function(texture,points,thickness) {
	this.$0e = texture;
	this.$8e = points;
	this.$If = thickness;
};
$hxClasses["$CZF"] = $CZF;
$CZF.__name__ = "$CZF";
$CZF.__super__ = $C7E;
$CZF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.drawLines(this.$0e,this.$8e,this.$If);
	}
	,__class__: $CZF
});
var $CaF = function(color,x,y,width,height) {
	this.$7e = color;
	this.$ke = x;
	this.$le = y;
	this.$ze = width;
	this.$mT = height;
};
$hxClasses["$CaF"] = $CaF;
$CaF.__name__ = "$CaF";
$CaF.__super__ = $C7E;
$CaF.prototype = $extend($C7E.prototype,{
	$JR: function(g) {
		g.fillRect(this.$7e,this.$ke,this.$le,this.$ze,this.$mT);
	}
	,__class__: $CaF
});
var $CbF = function(color,width,height) {
	$C6B.call(this);
	this.$Jf = color;
	this.$IP = new $CbE(width);
	this.$JP = new $CbE(height);
};
$hxClasses["$CbF"] = $CbF;
$CbF.__name__ = "$CbF";
$CbF.__super__ = $C6B;
$CbF.prototype = $extend($C6B.prototype,{
	$1Q: function(g) {
		g.fillRect(this.$Jf,0,0,this.$IP.$Lb,this.$JP.$Lb);
	}
	,$hQ: function() {
		return this.$IP.$Lb;
	}
	,$iQ: function() {
		return this.$JP.$Lb;
	}
	,$Kf: function(width,height) {
		this.$IP.set__(width);
		this.$JP.set__(height);
		return this;
	}
	,$vO: function(dt) {
		$C6B.prototype.$vO.call(this,dt);
		this.$IP.$5K(dt);
		this.$JP.$5K(dt);
	}
	,__class__: $CbF
});
var $CcF = function(charCode) {
	this.$Sf = null;
	this.$Pf = 0;
	this.$Of = 0;
	this.$Nf = 0;
	this.$Mf = null;
	this.$JP = 0;
	this.$IP = 0;
	this.$RC = 0;
	this.$QC = 0;
	this.$Lf = charCode;
};
$hxClasses["$CcF"] = $CcF;
$CcF.__name__ = "$CcF";
$CcF.prototype = {
	$1Q: function(g,destX,destY) {
		if(this.$IP > 0) {
			g.drawSubTexture(this.$Mf,destX + this.$Nf,destY + this.$Of,this.$QC,this.$RC,this.$IP,this.$JP);
		}
	}
	,$Qf: function(nextCharCode) {
		if(this.$Sf != null) {
			return this.$Sf.h[nextCharCode] | 0;
		} else {
			return 0;
		}
	}
	,$Rf: function(nextCharCode,amount) {
		if(this.$Sf == null) {
			this.$Sf = new $CUC();
		}
		this.$Sf.h[nextCharCode] = amount;
	}
	,__class__: $CcF
};
var $CdF = function(pack,name) {
	this.$CP = name;
	this.$zd = pack;
	this.$Ud = pack.getFile(name + ".fnt");
	this.$Rd();
};
$hxClasses["$CdF"] = $CdF;
$CdF.__name__ = "$CdF";
$CdF.prototype = {
	$Yf: function(text,align,wrapWidth,letterSpacing,lineSpacing) {
		if(lineSpacing == null) {
			lineSpacing = 0;
		}
		if(letterSpacing == null) {
			letterSpacing = 0;
		}
		if(wrapWidth == null) {
			wrapWidth = 0;
		}
		if(align == null) {
			align = kit_display_TextAlign.Left;
		}
		return new $CeF(this,text,align,wrapWidth,letterSpacing,lineSpacing);
	}
	,$Rd: function() {
		this.$af = new $CUC();
		this.$af.h[$CdF.$bf.$Lf] = $CdF.$bf;
		var parser = new $CfF(this.$Ud.toString());
		var pages_h = { };
		var idx = this.$CP.lastIndexOf("/");
		var basePath = idx >= 0 ? HxOverrides.substr(this.$CP,0,idx + 1) : "";
		var keyword = parser.$if();
		while(keyword.hasNext()) switch(keyword.next()) {
		case "char":
			var glyph = null;
			var pair = parser.$jf();
			while(pair.hasNext()) {
				var pair1 = pair.next();
				switch(pair1.$TC) {
				case "height":
					glyph.$JP = pair1.$of();
					break;
				case "id":
					glyph = new $CcF(pair1.$of());
					break;
				case "page":
					glyph.$Mf = pages_h[pair1.$of()];
					break;
				case "width":
					glyph.$IP = pair1.$of();
					break;
				case "x":
					glyph.$QC = pair1.$of();
					break;
				case "xadvance":
					glyph.$Pf = pair1.$of();
					break;
				case "xoffset":
					glyph.$Nf = pair1.$of();
					break;
				case "y":
					glyph.$RC = pair1.$of();
					break;
				case "yoffset":
					glyph.$Of = pair1.$of();
					break;
				}
			}
			this.$af.h[glyph.$Lf] = glyph;
			break;
		case "common":
			var pair2 = parser.$jf();
			while(pair2.hasNext()) {
				var pair3 = pair2.next();
				if(pair3.$TC == "lineHeight") {
					this.$Vf = pair3.$of();
				}
			}
			break;
		case "info":
			var pair4 = parser.$jf();
			while(pair4.hasNext()) {
				var pair5 = pair4.next();
				switch(pair5.$TC) {
				case "face":
					this.$Uf = pair5.$UU();
					break;
				case "size":
					this.$Tf = pair5.$of();
					break;
				}
			}
			break;
		case "kerning":
			var first = null;
			var second = 0;
			var amount = 0;
			var pair6 = parser.$jf();
			while(pair6.hasNext()) {
				var pair7 = pair6.next();
				switch(pair7.$TC) {
				case "amount":
					amount = pair7.$of();
					break;
				case "first":
					var this1 = this.$af;
					var key = pair7.$of();
					first = this1.h[key];
					break;
				case "second":
					second = pair7.$of();
					break;
				}
			}
			if(first != null && amount != 0) {
				first.$Rf(second,amount);
			}
			break;
		case "page":
			var pageId = 0;
			var file = null;
			var pair8 = parser.$jf();
			while(pair8.hasNext()) {
				var pair9 = pair8.next();
				switch(pair9.$TC) {
				case "file":
					file = pair9.$UU();
					break;
				case "id":
					pageId = pair9.$of();
					break;
				}
			}
			pages_h[pageId] = this.$zd.getTexture(basePath + $CNJ.$H3(file));
			break;
		}
	}
	,__class__: $CdF
};
var $CeF = function(font,text,align,wrapWidth,letterSpacing,lineSpacing) {
	this.$df = 0;
	var _gthis = this;
	this.$ef = font;
	this.$af = [];
	this.$ff = [];
	this.$gf = Math.round(font.$Vf + lineSpacing);
	this.$cf = new $C2E();
	var lineWidths = [];
	var ll = text.length;
	var _g = 0;
	while(_g < ll) {
		var charCode = text.charCodeAt(_g++);
		var glyph = font.$af.h[charCode];
		if(glyph != null) {
			this.$af.push(glyph);
		}
	}
	var lastSpaceIdx = -1;
	var lineWidth = 0.0;
	var lineHeight = 0.0;
	var newline = font.$af.h[10];
	var addLine = function() {
		var a = _gthis.$cf.$IP;
		_gthis.$cf.$IP = a > lineWidth ? a : lineWidth;
		_gthis.$cf.$JP += lineHeight;
		lineWidths[_gthis.$df] = lineWidth;
		lineWidth = 0;
		lineHeight = 0;
		++_gthis.$df;
	};
	var ii = 0;
	while(ii < this.$af.length) {
		var glyph = this.$af[ii];
		this.$ff[ii] = Math.round(lineWidth);
		var wordWrap = wrapWidth > 0 && lineWidth + glyph.$IP > wrapWidth;
		if(wordWrap || glyph == newline) {
			if(wordWrap) {
				if(lastSpaceIdx >= 0) {
					this.$af[lastSpaceIdx] = newline;
					lineWidth = this.$ff[lastSpaceIdx];
					ii = lastSpaceIdx;
				} else {
					this.$af.splice(ii,0,newline);
				}
			}
			lastSpaceIdx = -1;
			lineHeight = this.$gf;
			addLine();
		} else {
			if(glyph.$Lf == 32) {
				lastSpaceIdx = ii;
			}
			lineWidth += glyph.$Pf + letterSpacing;
			var b = glyph.$JP + glyph.$Of;
			if(!(lineHeight > b)) {
				lineHeight = b;
			}
			if(ii + 1 < this.$af.length) {
				lineWidth += glyph.$Qf(this.$af[ii + 1].$Lf);
			}
		}
		++ii;
	}
	addLine();
	var lineY = 0.0;
	var alignOffset = $CeF.$hf(align,lineWidths[0],wrapWidth);
	var top = 1.79769313486231e+308;
	var bottom = -1.79769313486231e+308;
	var line = 0;
	var ii = 0;
	var ll = this.$af.length;
	while(ii < ll) {
		var glyph = this.$af[ii];
		if(glyph.$Lf == 10) {
			lineY += this.$gf;
			++line;
			alignOffset = $CeF.$hf(align,lineWidths[line],wrapWidth);
		}
		this.$ff[ii] += alignOffset;
		var glyphY = lineY + glyph.$Of;
		if(!(top < glyphY)) {
			top = glyphY;
		}
		var b = glyphY + glyph.$JP;
		if(!(bottom > b)) {
			bottom = b;
		}
		++ii;
	}
	this.$cf.$QC = $CeF.$hf(align,this.$cf.$IP,wrapWidth);
	this.$cf.$RC = top;
	this.$cf.$JP = bottom - top;
};
$hxClasses["$CeF"] = $CeF;
$CeF.__name__ = "$CeF";
$CeF.$hf = function(align,lineWidth,totalWidth) {
	switch(align._hx_index) {
	case 0:
		return 0;
	case 1:
		return Math.round((totalWidth - lineWidth) / 2);
	case 2:
		return totalWidth - lineWidth;
	}
};
$CeF.prototype = {
	$1Q: function(g) {
		var y = 0.0;
		var ii = 0;
		var ll = this.$af.length;
		while(ii < ll) {
			var glyph = this.$af[ii];
			if(glyph.$Lf == 10) {
				y += this.$gf;
			} else {
				glyph.$1Q(g,this.$ff[ii],y);
			}
			++ii;
		}
	}
	,__class__: $CeF
};
var $CfF = function(config) {
	this.$kf = config;
	this.$mf = new $CB("([A-Za-z]+)(.*)","");
	this.$nf = new $CB("([A-Za-z]+)=(\"[^\"]*\"|[^\\s]+)","");
};
$hxClasses["$CfF"] = $CfF;
$CfF.__name__ = "$CfF";
$CfF.$8G = function(text,expr) {
	var m = expr.$H();
	return HxOverrides.substr(text,m.pos + m.len,text.length);
};
$CfF.prototype = {
	$if: function() {
		var _gthis = this;
		var text = this.$kf;
		return { next : function() {
			text = $CfF.$8G(text,_gthis.$mf);
			_gthis.$lf = _gthis.$mf.$E(2);
			return _gthis.$mf.$E(1);
		}, hasNext : function() {
			return _gthis.$mf.$D(text);
		}};
	}
	,$jf: function() {
		var _gthis = this;
		var text = this.$lf;
		return { next : function() {
			text = $CfF.$8G(text,_gthis.$nf);
			return new $CgF(_gthis.$nf.$E(1),_gthis.$nf.$E(2));
		}, hasNext : function() {
			return _gthis.$nf.$D(text);
		}};
	}
	,__class__: $CfF
};
var $CgF = function(key,value) {
	this.$TC = key;
	this.$Lb = value;
};
$hxClasses["$CgF"] = $CgF;
$CgF.__name__ = "$CgF";
$CgF.prototype = {
	$of: function() {
		return $CG.$3(this.$Lb);
	}
	,$UU: function() {
		if(this.$Lb.charCodeAt(0) != 34) {
			return null;
		}
		return HxOverrides.substr(this.$Lb,1,this.$Lb.length - 2);
	}
	,__class__: $CgF
};
var $ChF = function(texture) {
	$C6B.call(this);
	this.$Ge = texture;
};
$hxClasses["$ChF"] = $ChF;
$ChF.__name__ = "$ChF";
$ChF.__super__ = $C6B;
$ChF.prototype = $extend($C6B.prototype,{
	$1Q: function(g) {
		if(this.$Ge != null) {
			g.drawTexture(this.$Ge,0,0);
		}
	}
	,$hQ: function() {
		if(this.$Ge != null) {
			return this.$Ge.get_width();
		} else {
			return 0;
		}
	}
	,$iQ: function() {
		if(this.$Ge != null) {
			return this.$Ge.get_height();
		} else {
			return 0;
		}
	}
	,__class__: $ChF
});
var kit_display_Orientation = $hxEnums["kit.display.Orientation"] = { __ename__:true,__constructs__:null
	,Portrait: {_hx_name:"Portrait",_hx_index:0,__enum__:"kit.display.Orientation",toString:$estr}
	,Landscape: {_hx_name:"Landscape",_hx_index:1,__enum__:"kit.display.Orientation",toString:$estr}
};
kit_display_Orientation.__constructs__ = [kit_display_Orientation.Portrait,kit_display_Orientation.Landscape];
var $CiF = function(texture,width,height) {
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	$C6B.call(this);
	this.$Ge = texture;
	if(width < 0) {
		width = texture != null ? texture.get_width() : 0;
	}
	this.$IP = new $CbE(width);
	if(height < 0) {
		height = texture != null ? texture.get_height() : 0;
	}
	this.$JP = new $CbE(height);
};
$hxClasses["$CiF"] = $CiF;
$CiF.__name__ = "$CiF";
$CiF.__super__ = $C6B;
$CiF.prototype = $extend($C6B.prototype,{
	$1Q: function(g) {
		if(this.$Ge != null) {
			g.drawPattern(this.$Ge,0,0,this.$IP.$Lb,this.$JP.$Lb);
		}
	}
	,$hQ: function() {
		return this.$IP.$Lb;
	}
	,$iQ: function() {
		return this.$JP.$Lb;
	}
	,$vO: function(dt) {
		$C6B.prototype.$vO.call(this,dt);
		this.$IP.$5K(dt);
		this.$JP.$5K(dt);
	}
	,__class__: $CiF
});
var $CjF = function() {
	this.$aQ = null;
	this.$ZQ = [];
	this.$pf = null;
	this.$WQ = null;
	this.$VQ = null;
	this.$SQ = new $CbE(1);
	this.$RQ = new $CbE(1);
	this.$QQ = new $CbE(1);
	this.$UQ = null;
	this.$TQ = null;
};
$hxClasses["$CjF"] = $CjF;
$CjF.__name__ = "$CjF";
$CjF.prototype = {
	__class__: $CjF
};
var $ClF = function() { };
$hxClasses["$ClF"] = $ClF;
$ClF.__name__ = "$ClF";
$ClF.__isInterface__ = true;
$ClF.__interfaces__ = [$CkE];
$ClF.prototype = {
	__class__: $ClF
	,__properties__: {get_graphics:"get_graphics",get_height:"get_height",get_width:"get_width"}
};
var $CmF = function() { };
$hxClasses["$CmF"] = $CmF;
$CmF.__name__ = "$CmF";
$CmF.__isInterface__ = true;
$CmF.__interfaces__ = [$ClF];
var $CnF = function(font,text) {
	if(text == null) {
		text = "";
	}
	this.$4f = null;
	var _gthis = this;
	$C6B.call(this);
	this.$ef = font;
	this.$2f = text;
	this.$3f = kit_display_TextAlign.Left;
	this.$4O |= 256;
	var dirtyText = function(_,_1) {
		_gthis.$4O |= 256;
	};
	this.$tf = new $CbE(0,dirtyText);
	this.$uf = new $CbE(0,dirtyText);
	this.$vf = new $CbE(0,dirtyText);
};
$hxClasses["$CnF"] = $CnF;
$CnF.__name__ = "$CnF";
$CnF.__super__ = $C6B;
$CnF.prototype = $extend($C6B.prototype,{
	$1Q: function(g) {
		this.$1f();
		this.$4f.$1Q(g);
	}
	,$hQ: function() {
		this.$1f();
		if(this.$tf.$Lb > 0) {
			return this.$tf.$Lb;
		} else {
			return this.$4f.$cf.$IP;
		}
	}
	,$iQ: function() {
		this.$1f();
		var paddedHeight = this.$4f.$df * (this.$ef.$Vf + this.$vf.$Lb);
		var boundsHeight = this.$4f.$cf.$JP;
		if(paddedHeight > boundsHeight) {
			return paddedHeight;
		} else {
			return boundsHeight;
		}
	}
	,$jQ: function(localX,localY) {
		this.$1f();
		return this.$4f.$cf.$GB(localX,localY);
	}
	,set_text: function(text) {
		if(text != this.$2f) {
			this.$2f = text;
			this.$4O |= 256;
		}
		return text;
	}
	,set_align: function(align) {
		if(align != this.$3f) {
			this.$3f = align;
			this.$4O |= 256;
		}
		return align;
	}
	,$1f: function() {
		if((this.$4O & 256) != 0) {
			this.$4O &= -257;
			this.$4f = this.$ef.$Yf(this.$2f,this.$3f,this.$tf.$Lb,this.$uf.$Lb,this.$vf.$Lb);
		}
	}
	,$vO: function(dt) {
		$C6B.prototype.$vO.call(this,dt);
		this.$tf.$5K(dt);
		this.$uf.$5K(dt);
		this.$vf.$5K(dt);
	}
	,__class__: $CnF
	,__properties__: $extend($C6B.prototype.__properties__,{set_align:"set_align",set_text:"set_text"})
});
var kit_display_TextureFormat = $hxEnums["kit.display.TextureFormat"] = { __ename__:true,__constructs__:null
	,RGBA: {_hx_name:"RGBA",_hx_index:0,__enum__:"kit.display.TextureFormat",toString:$estr}
	,RGBA_4444: {_hx_name:"RGBA_4444",_hx_index:1,__enum__:"kit.display.TextureFormat",toString:$estr}
	,RGB: {_hx_name:"RGB",_hx_index:2,__enum__:"kit.display.TextureFormat",toString:$estr}
	,RGB_565: {_hx_name:"RGB_565",_hx_index:3,__enum__:"kit.display.TextureFormat",toString:$estr}
	,COMPRESSED: {_hx_name:"COMPRESSED",_hx_index:4,__enum__:"kit.display.TextureFormat",toString:$estr}
};
kit_display_TextureFormat.__constructs__ = [kit_display_TextureFormat.RGBA,kit_display_TextureFormat.RGBA_4444,kit_display_TextureFormat.RGB,kit_display_TextureFormat.RGB_565,kit_display_TextureFormat.COMPRESSED];
var $CqF = function() { };
$hxClasses["$CqF"] = $CqF;
$CqF.__name__ = "$CqF";
$CqF.__isInterface__ = true;
$CqF.__interfaces__ = [$CkE];
$CqF.prototype = {
	__class__: $CqF
};
var $CrF = function() {
	this.$wf = kit_display_TextAlign.Left;
	this.$tf = 0;
	this.$vf = 0;
	this.$Dg = 0;
	this.$Cg = 16777215;
	this.$Jf = 0;
	this.$Bg = false;
	this.$Ag = false;
	this.$_f = 18;
};
$hxClasses["$CrF"] = $CrF;
$CrF.__name__ = "$CrF";
$CrF.prototype = {
	__class__: $CrF
};
var $CsF = function(font,text) {
	if(text == null) {
		text = "";
	}
	this.$0e = null;
	this.$3f = kit_display_TextAlign.Left;
	this.$Ng = 16777215;
	this.$7e = 0;
	this.$Mg = false;
	this.$Lg = false;
	this.$Fg = 0;
	this.$Eg = 0;
	var _gthis = this;
	$C6B.call(this);
	this.$ef = font;
	this.$2f = text;
	this.$4O |= 256;
	var dirtyText = function(_,_1) {
		_gthis.$4O |= 256;
	};
	this.$_f = new $CbE(18,dirtyText);
	this.$Dg = new $CbE(0,dirtyText);
	this.$tf = new $CbE(0,dirtyText);
	this.$vf = new $CbE(0,dirtyText);
};
$hxClasses["$CsF"] = $CsF;
$CsF.__name__ = "$CsF";
$CsF.__super__ = $C6B;
$CsF.prototype = $extend($C6B.prototype,{
	$hQ: function() {
		this.$Kg();
		if(this.$0e != null) {
			return this.$0e.get_width() * 1.0;
		} else {
			return 0;
		}
	}
	,$iQ: function() {
		this.$Kg();
		if(this.$0e != null) {
			return this.$0e.get_height() * 1.0;
		} else {
			return 0;
		}
	}
	,$jQ: function(localX,localY) {
		this.$Kg();
		if(this.$0e == null) {
			return false;
		}
		var offsetX = this.$Ig();
		var offsetY = this.$Jg();
		if(localX >= offsetX && localX <= offsetX + this.$0e.get_width() * 1.0 && localY >= offsetY) {
			return localY <= offsetY + this.$0e.get_height() * 1.0;
		} else {
			return false;
		}
	}
	,$1Q: function(g) {
		this.$Kg();
		if(this.$0e != null) {
			g.scale(1.0,1.0);
			g.drawTexture(this.$0e,this.$Ig(),this.$Jg());
		}
	}
	,$vO: function(dt) {
		$C6B.prototype.$vO.call(this,dt);
		this.$_f.$5K(dt);
		this.$Dg.$5K(dt);
	}
	,dispose: function() {
		$C6B.prototype.dispose.call(this);
		if(this.$0e != null) {
			this.$0e.dispose();
			this.$0e = null;
		}
		this.$4O |= 256;
	}
	,$Gg: function() {
		if(this.$tf.$Lb > 0) {
			return 0;
		}
		switch(this.$3f._hx_index) {
		case 0:
			return 0;
		case 1:
			return -this.$0e.get_width() / 2;
		case 2:
			return -this.$0e.get_width();
		}
	}
	,$Ig: function() {
		return this.$Eg / 1.0 + this.$Gg();
	}
	,$Jg: function() {
		return this.$Fg / 1.0 + 0;
	}
	,$Kg: function() {
		if((this.$4O & 256) != 0) {
			this.$4O &= -257;
			if(this.$0e != null) {
				this.$0e.dispose();
				this.$0e = null;
			}
			if(this.$2f.length > 0) {
				var style = new $CrF();
				style.$_f = this.$_f.$Lb / 1.0;
				style.$Ag = this.$Lg;
				style.$Bg = this.$Mg;
				style.$Jf = this.$7e;
				style.$Cg = this.$Ng;
				style.$Dg = this.$Dg.$Lb / 1.0;
				style.$vf = this.$vf.$Lb / 1.0;
				style.$tf = this.$tf.$Lb / 1.0;
				style.$wf = this.$3f;
				this.$0e = this.$ef.createTexture(this.$2f,style);
			}
		}
	}
	,set_text: function(text) {
		if(text != this.$2f) {
			this.$2f = text;
			this.$4O |= 256;
		}
		return text;
	}
	,set_bold: function(bold) {
		if(bold != this.$Lg) {
			this.$Lg = bold;
			this.$4O |= 256;
		}
		return bold;
	}
	,set_italic: function(italic) {
		if(italic != this.$Mg) {
			this.$Mg = italic;
			this.$4O |= 256;
		}
		return italic;
	}
	,set_color: function(color) {
		if(color != this.$7e) {
			this.$7e = color;
			this.$4O |= 256;
		}
		return color;
	}
	,set_strokeColor: function(strokeColor) {
		if(strokeColor != this.$Ng) {
			this.$Ng = strokeColor;
			this.$4O |= 256;
		}
		return strokeColor;
	}
	,set_align: function(align) {
		if(align != this.$3f) {
			this.$3f = align;
			this.$4O |= 256;
		}
		return align;
	}
	,__class__: $CsF
	,__properties__: $extend($C6B.prototype.__properties__,{set_align:"set_align",set_strokeColor:"set_strokeColor",set_color:"set_color",set_italic:"set_italic",set_bold:"set_bold",set_text:"set_text"})
});
var $CtF = function() {
	this.$qg = null;
	this.$pg = null;
	this.$og = null;
	this.$ng = new $CcC();
	this.$Tg = 0;
	this.$Sg = 0;
	this.$Rg = 0;
	this.$Qg = 0;
	this.$Pg = false;
	this.$rI = true;
};
$hxClasses["$CtF"] = $CtF;
$CtF.__name__ = "$CtF";
$CtF.prototype = {
	$Vg: function(fragmentShader) {
		this.$og = fragmentShader;
		this.$qg = null;
	}
	,$Wg: function(ctx) {
		ctx.render(this);
	}
	,$Xg: function(name,value) {
		this.$lg(name,0,value);
	}
	,$Yg: function(name,x,y) {
		this.$lg(name,1,[x,y]);
	}
	,$kg: function(name,texture) {
		this.$lg(name,11,texture);
	}
	,$5K: function(dt) {
	}
	,$lg: function(name,type,value) {
		var uniform = this.$ng.h[name];
		if(uniform == null) {
			uniform = new $CuF(name);
			this.$ng.h[name] = uniform;
		}
		uniform.$hI = type;
		uniform.$bT = value;
	}
	,$mg: function() {
		if(this.$qg == null) {
			this.$qg = this.$pg != null ? this.$pg + "@" + this.$og : this.$og;
		}
		return this.$qg;
	}
	,__class__: $CtF
};
var $CuF = function(name) {
	this.$hI = 0;
	this.$bT = null;
	this.$CP = name;
};
$hxClasses["$CuF"] = $CuF;
$CuF.__name__ = "$CuF";
$CuF.prototype = {
	__class__: $CuF
};
var kit_input_Key = $hxEnums["kit.input.Key"] = { __ename__:true,__constructs__:null
	,A: {_hx_name:"A",_hx_index:0,__enum__:"kit.input.Key",toString:$estr}
	,B: {_hx_name:"B",_hx_index:1,__enum__:"kit.input.Key",toString:$estr}
	,C: {_hx_name:"C",_hx_index:2,__enum__:"kit.input.Key",toString:$estr}
	,D: {_hx_name:"D",_hx_index:3,__enum__:"kit.input.Key",toString:$estr}
	,E: {_hx_name:"E",_hx_index:4,__enum__:"kit.input.Key",toString:$estr}
	,F: {_hx_name:"F",_hx_index:5,__enum__:"kit.input.Key",toString:$estr}
	,G: {_hx_name:"G",_hx_index:6,__enum__:"kit.input.Key",toString:$estr}
	,H: {_hx_name:"H",_hx_index:7,__enum__:"kit.input.Key",toString:$estr}
	,I: {_hx_name:"I",_hx_index:8,__enum__:"kit.input.Key",toString:$estr}
	,J: {_hx_name:"J",_hx_index:9,__enum__:"kit.input.Key",toString:$estr}
	,K: {_hx_name:"K",_hx_index:10,__enum__:"kit.input.Key",toString:$estr}
	,L: {_hx_name:"L",_hx_index:11,__enum__:"kit.input.Key",toString:$estr}
	,M: {_hx_name:"M",_hx_index:12,__enum__:"kit.input.Key",toString:$estr}
	,N: {_hx_name:"N",_hx_index:13,__enum__:"kit.input.Key",toString:$estr}
	,O: {_hx_name:"O",_hx_index:14,__enum__:"kit.input.Key",toString:$estr}
	,P: {_hx_name:"P",_hx_index:15,__enum__:"kit.input.Key",toString:$estr}
	,Q: {_hx_name:"Q",_hx_index:16,__enum__:"kit.input.Key",toString:$estr}
	,R: {_hx_name:"R",_hx_index:17,__enum__:"kit.input.Key",toString:$estr}
	,S: {_hx_name:"S",_hx_index:18,__enum__:"kit.input.Key",toString:$estr}
	,T: {_hx_name:"T",_hx_index:19,__enum__:"kit.input.Key",toString:$estr}
	,U: {_hx_name:"U",_hx_index:20,__enum__:"kit.input.Key",toString:$estr}
	,V: {_hx_name:"V",_hx_index:21,__enum__:"kit.input.Key",toString:$estr}
	,W: {_hx_name:"W",_hx_index:22,__enum__:"kit.input.Key",toString:$estr}
	,X: {_hx_name:"X",_hx_index:23,__enum__:"kit.input.Key",toString:$estr}
	,Y: {_hx_name:"Y",_hx_index:24,__enum__:"kit.input.Key",toString:$estr}
	,Z: {_hx_name:"Z",_hx_index:25,__enum__:"kit.input.Key",toString:$estr}
	,Number0: {_hx_name:"Number0",_hx_index:26,__enum__:"kit.input.Key",toString:$estr}
	,Number1: {_hx_name:"Number1",_hx_index:27,__enum__:"kit.input.Key",toString:$estr}
	,Number2: {_hx_name:"Number2",_hx_index:28,__enum__:"kit.input.Key",toString:$estr}
	,Number3: {_hx_name:"Number3",_hx_index:29,__enum__:"kit.input.Key",toString:$estr}
	,Number4: {_hx_name:"Number4",_hx_index:30,__enum__:"kit.input.Key",toString:$estr}
	,Number5: {_hx_name:"Number5",_hx_index:31,__enum__:"kit.input.Key",toString:$estr}
	,Number6: {_hx_name:"Number6",_hx_index:32,__enum__:"kit.input.Key",toString:$estr}
	,Number7: {_hx_name:"Number7",_hx_index:33,__enum__:"kit.input.Key",toString:$estr}
	,Number8: {_hx_name:"Number8",_hx_index:34,__enum__:"kit.input.Key",toString:$estr}
	,Number9: {_hx_name:"Number9",_hx_index:35,__enum__:"kit.input.Key",toString:$estr}
	,Numpad0: {_hx_name:"Numpad0",_hx_index:36,__enum__:"kit.input.Key",toString:$estr}
	,Numpad1: {_hx_name:"Numpad1",_hx_index:37,__enum__:"kit.input.Key",toString:$estr}
	,Numpad2: {_hx_name:"Numpad2",_hx_index:38,__enum__:"kit.input.Key",toString:$estr}
	,Numpad3: {_hx_name:"Numpad3",_hx_index:39,__enum__:"kit.input.Key",toString:$estr}
	,Numpad4: {_hx_name:"Numpad4",_hx_index:40,__enum__:"kit.input.Key",toString:$estr}
	,Numpad5: {_hx_name:"Numpad5",_hx_index:41,__enum__:"kit.input.Key",toString:$estr}
	,Numpad6: {_hx_name:"Numpad6",_hx_index:42,__enum__:"kit.input.Key",toString:$estr}
	,Numpad7: {_hx_name:"Numpad7",_hx_index:43,__enum__:"kit.input.Key",toString:$estr}
	,Numpad8: {_hx_name:"Numpad8",_hx_index:44,__enum__:"kit.input.Key",toString:$estr}
	,Numpad9: {_hx_name:"Numpad9",_hx_index:45,__enum__:"kit.input.Key",toString:$estr}
	,NumpadAdd: {_hx_name:"NumpadAdd",_hx_index:46,__enum__:"kit.input.Key",toString:$estr}
	,NumpadDecimal: {_hx_name:"NumpadDecimal",_hx_index:47,__enum__:"kit.input.Key",toString:$estr}
	,NumpadDivide: {_hx_name:"NumpadDivide",_hx_index:48,__enum__:"kit.input.Key",toString:$estr}
	,NumpadEnter: {_hx_name:"NumpadEnter",_hx_index:49,__enum__:"kit.input.Key",toString:$estr}
	,NumpadMultiply: {_hx_name:"NumpadMultiply",_hx_index:50,__enum__:"kit.input.Key",toString:$estr}
	,NumpadSubtract: {_hx_name:"NumpadSubtract",_hx_index:51,__enum__:"kit.input.Key",toString:$estr}
	,F1: {_hx_name:"F1",_hx_index:52,__enum__:"kit.input.Key",toString:$estr}
	,F2: {_hx_name:"F2",_hx_index:53,__enum__:"kit.input.Key",toString:$estr}
	,F3: {_hx_name:"F3",_hx_index:54,__enum__:"kit.input.Key",toString:$estr}
	,F4: {_hx_name:"F4",_hx_index:55,__enum__:"kit.input.Key",toString:$estr}
	,F5: {_hx_name:"F5",_hx_index:56,__enum__:"kit.input.Key",toString:$estr}
	,F6: {_hx_name:"F6",_hx_index:57,__enum__:"kit.input.Key",toString:$estr}
	,F7: {_hx_name:"F7",_hx_index:58,__enum__:"kit.input.Key",toString:$estr}
	,F8: {_hx_name:"F8",_hx_index:59,__enum__:"kit.input.Key",toString:$estr}
	,F9: {_hx_name:"F9",_hx_index:60,__enum__:"kit.input.Key",toString:$estr}
	,F10: {_hx_name:"F10",_hx_index:61,__enum__:"kit.input.Key",toString:$estr}
	,F11: {_hx_name:"F11",_hx_index:62,__enum__:"kit.input.Key",toString:$estr}
	,F12: {_hx_name:"F12",_hx_index:63,__enum__:"kit.input.Key",toString:$estr}
	,F13: {_hx_name:"F13",_hx_index:64,__enum__:"kit.input.Key",toString:$estr}
	,F14: {_hx_name:"F14",_hx_index:65,__enum__:"kit.input.Key",toString:$estr}
	,F15: {_hx_name:"F15",_hx_index:66,__enum__:"kit.input.Key",toString:$estr}
	,Left: {_hx_name:"Left",_hx_index:67,__enum__:"kit.input.Key",toString:$estr}
	,Up: {_hx_name:"Up",_hx_index:68,__enum__:"kit.input.Key",toString:$estr}
	,Right: {_hx_name:"Right",_hx_index:69,__enum__:"kit.input.Key",toString:$estr}
	,Down: {_hx_name:"Down",_hx_index:70,__enum__:"kit.input.Key",toString:$estr}
	,Alt: {_hx_name:"Alt",_hx_index:71,__enum__:"kit.input.Key",toString:$estr}
	,Backquote: {_hx_name:"Backquote",_hx_index:72,__enum__:"kit.input.Key",toString:$estr}
	,Backslash: {_hx_name:"Backslash",_hx_index:73,__enum__:"kit.input.Key",toString:$estr}
	,Backspace: {_hx_name:"Backspace",_hx_index:74,__enum__:"kit.input.Key",toString:$estr}
	,CapsLock: {_hx_name:"CapsLock",_hx_index:75,__enum__:"kit.input.Key",toString:$estr}
	,Comma: {_hx_name:"Comma",_hx_index:76,__enum__:"kit.input.Key",toString:$estr}
	,Command: {_hx_name:"Command",_hx_index:77,__enum__:"kit.input.Key",toString:$estr}
	,Control: {_hx_name:"Control",_hx_index:78,__enum__:"kit.input.Key",toString:$estr}
	,Delete: {_hx_name:"Delete",_hx_index:79,__enum__:"kit.input.Key",toString:$estr}
	,End: {_hx_name:"End",_hx_index:80,__enum__:"kit.input.Key",toString:$estr}
	,Enter: {_hx_name:"Enter",_hx_index:81,__enum__:"kit.input.Key",toString:$estr}
	,Equals: {_hx_name:"Equals",_hx_index:82,__enum__:"kit.input.Key",toString:$estr}
	,Escape: {_hx_name:"Escape",_hx_index:83,__enum__:"kit.input.Key",toString:$estr}
	,Home: {_hx_name:"Home",_hx_index:84,__enum__:"kit.input.Key",toString:$estr}
	,Insert: {_hx_name:"Insert",_hx_index:85,__enum__:"kit.input.Key",toString:$estr}
	,LeftBracket: {_hx_name:"LeftBracket",_hx_index:86,__enum__:"kit.input.Key",toString:$estr}
	,Minus: {_hx_name:"Minus",_hx_index:87,__enum__:"kit.input.Key",toString:$estr}
	,PageDown: {_hx_name:"PageDown",_hx_index:88,__enum__:"kit.input.Key",toString:$estr}
	,PageUp: {_hx_name:"PageUp",_hx_index:89,__enum__:"kit.input.Key",toString:$estr}
	,Period: {_hx_name:"Period",_hx_index:90,__enum__:"kit.input.Key",toString:$estr}
	,Quote: {_hx_name:"Quote",_hx_index:91,__enum__:"kit.input.Key",toString:$estr}
	,RightBracket: {_hx_name:"RightBracket",_hx_index:92,__enum__:"kit.input.Key",toString:$estr}
	,Semicolon: {_hx_name:"Semicolon",_hx_index:93,__enum__:"kit.input.Key",toString:$estr}
	,Shift: {_hx_name:"Shift",_hx_index:94,__enum__:"kit.input.Key",toString:$estr}
	,Slash: {_hx_name:"Slash",_hx_index:95,__enum__:"kit.input.Key",toString:$estr}
	,Space: {_hx_name:"Space",_hx_index:96,__enum__:"kit.input.Key",toString:$estr}
	,Tab: {_hx_name:"Tab",_hx_index:97,__enum__:"kit.input.Key",toString:$estr}
	,Menu: {_hx_name:"Menu",_hx_index:98,__enum__:"kit.input.Key",toString:$estr}
	,Search: {_hx_name:"Search",_hx_index:99,__enum__:"kit.input.Key",toString:$estr}
	,Unknown: ($_=function(keyCode) { return {_hx_index:100,keyCode:keyCode,__enum__:"kit.input.Key",toString:$estr}; },$_._hx_name="Unknown",$_.__params__ = ["keyCode"],$_)
};
kit_input_Key.__constructs__ = [kit_input_Key.A,kit_input_Key.B,kit_input_Key.C,kit_input_Key.D,kit_input_Key.E,kit_input_Key.F,kit_input_Key.G,kit_input_Key.H,kit_input_Key.I,kit_input_Key.J,kit_input_Key.K,kit_input_Key.L,kit_input_Key.M,kit_input_Key.N,kit_input_Key.O,kit_input_Key.P,kit_input_Key.Q,kit_input_Key.R,kit_input_Key.S,kit_input_Key.T,kit_input_Key.U,kit_input_Key.V,kit_input_Key.W,kit_input_Key.X,kit_input_Key.Y,kit_input_Key.Z,kit_input_Key.Number0,kit_input_Key.Number1,kit_input_Key.Number2,kit_input_Key.Number3,kit_input_Key.Number4,kit_input_Key.Number5,kit_input_Key.Number6,kit_input_Key.Number7,kit_input_Key.Number8,kit_input_Key.Number9,kit_input_Key.Numpad0,kit_input_Key.Numpad1,kit_input_Key.Numpad2,kit_input_Key.Numpad3,kit_input_Key.Numpad4,kit_input_Key.Numpad5,kit_input_Key.Numpad6,kit_input_Key.Numpad7,kit_input_Key.Numpad8,kit_input_Key.Numpad9,kit_input_Key.NumpadAdd,kit_input_Key.NumpadDecimal,kit_input_Key.NumpadDivide,kit_input_Key.NumpadEnter,kit_input_Key.NumpadMultiply,kit_input_Key.NumpadSubtract,kit_input_Key.F1,kit_input_Key.F2,kit_input_Key.F3,kit_input_Key.F4,kit_input_Key.F5,kit_input_Key.F6,kit_input_Key.F7,kit_input_Key.F8,kit_input_Key.F9,kit_input_Key.F10,kit_input_Key.F11,kit_input_Key.F12,kit_input_Key.F13,kit_input_Key.F14,kit_input_Key.F15,kit_input_Key.Left,kit_input_Key.Up,kit_input_Key.Right,kit_input_Key.Down,kit_input_Key.Alt,kit_input_Key.Backquote,kit_input_Key.Backslash,kit_input_Key.Backspace,kit_input_Key.CapsLock,kit_input_Key.Comma,kit_input_Key.Command,kit_input_Key.Control,kit_input_Key.Delete,kit_input_Key.End,kit_input_Key.Enter,kit_input_Key.Equals,kit_input_Key.Escape,kit_input_Key.Home,kit_input_Key.Insert,kit_input_Key.LeftBracket,kit_input_Key.Minus,kit_input_Key.PageDown,kit_input_Key.PageUp,kit_input_Key.Period,kit_input_Key.Quote,kit_input_Key.RightBracket,kit_input_Key.Semicolon,kit_input_Key.Shift,kit_input_Key.Slash,kit_input_Key.Space,kit_input_Key.Tab,kit_input_Key.Menu,kit_input_Key.Search,kit_input_Key.Unknown];
var $C1F = function() {
	this.$3g(0,null);
};
$hxClasses["$C1F"] = $C1F;
$C1F.__name__ = "$C1F";
$C1F.prototype = {
	$3g: function(id,key) {
		this.$AC = id;
		this.$TC = key;
	}
	,__class__: $C1F
};
var kit_input_MouseButton = $hxEnums["kit.input.MouseButton"] = { __ename__:true,__constructs__:null
	,Left: {_hx_name:"Left",_hx_index:0,__enum__:"kit.input.MouseButton",toString:$estr}
	,Middle: {_hx_name:"Middle",_hx_index:1,__enum__:"kit.input.MouseButton",toString:$estr}
	,Right: {_hx_name:"Right",_hx_index:2,__enum__:"kit.input.MouseButton",toString:$estr}
	,Unknown: ($_=function(buttonCode) { return {_hx_index:3,buttonCode:buttonCode,__enum__:"kit.input.MouseButton",toString:$estr}; },$_._hx_name="Unknown",$_.__params__ = ["buttonCode"],$_)
};
kit_input_MouseButton.__constructs__ = [kit_input_MouseButton.Left,kit_input_MouseButton.Middle,kit_input_MouseButton.Right,kit_input_MouseButton.Unknown];
var kit_input_MouseCursor = $hxEnums["kit.input.MouseCursor"] = { __ename__:true,__constructs__:null
	,Default: {_hx_name:"Default",_hx_index:0,__enum__:"kit.input.MouseCursor",toString:$estr}
	,Button: {_hx_name:"Button",_hx_index:1,__enum__:"kit.input.MouseCursor",toString:$estr}
	,None: {_hx_name:"None",_hx_index:2,__enum__:"kit.input.MouseCursor",toString:$estr}
};
kit_input_MouseCursor.__constructs__ = [kit_input_MouseCursor.Default,kit_input_MouseCursor.Button,kit_input_MouseCursor.None];
var $C2F = function() {
	this.$3g(0,0,0,null);
};
$hxClasses["$C2F"] = $C2F;
$C2F.__name__ = "$C2F";
$C2F.prototype = {
	$3g: function(id,viewX,viewY,button) {
		this.$AC = id;
		this.$9g = viewX;
		this.$$g = viewY;
		this.$8g = button;
	}
	,__class__: $C2F
};
var kit_input_EventSource = $hxEnums["kit.input.EventSource"] = { __ename__:true,__constructs__:null
	,Mouse: ($_=function(event) { return {_hx_index:0,event:event,__enum__:"kit.input.EventSource",toString:$estr}; },$_._hx_name="Mouse",$_.__params__ = ["event"],$_)
	,Touch: ($_=function(point) { return {_hx_index:1,point:point,__enum__:"kit.input.EventSource",toString:$estr}; },$_._hx_name="Touch",$_.__params__ = ["point"],$_)
};
kit_input_EventSource.__constructs__ = [kit_input_EventSource.Mouse,kit_input_EventSource.Touch];
var $C3F = function() {
	this.$3g(0,0,0,null,null);
};
$hxClasses["$C3F"] = $C3F;
$C3F.__name__ = "$C3F";
$C3F.prototype = {
	$3g: function(id,viewX,viewY,hit,source) {
		this.$AC = id;
		this.$9g = viewX;
		this.$$g = viewY;
		this.$_g = hit;
		this.$Ah = source;
		this.$Ch = false;
	}
	,__class__: $C3F
};
var $C4F = function(id) {
	this.$AC = id;
	this.$Dh = kit_input_EventSource.Touch(this);
};
$hxClasses["$C4F"] = $C4F;
$C4F.__name__ = "$C4F";
$C4F.prototype = {
	$3g: function(viewX,viewY) {
		this.$9g = viewX;
		this.$$g = viewY;
	}
	,__class__: $C4F
};
var $CGG = function() { };
$hxClasses["$CGG"] = $CGG;
$CGG.__name__ = "$CGG";
$CGG.$sG = function(value,min,max) {
	if(value < min) {
		return min;
	} else if(value > max) {
		return max;
	} else {
		return value;
	}
};
var $CHG = function() { };
$hxClasses["$CHG"] = $CHG;
$CHG.__name__ = "$CHG";
$CHG.__isInterface__ = true;
$CHG.prototype = {
	__class__: $CHG
};
var $CIG = function(json,atlas) {
	this.$nP = json.symbol;
	var rect = json.rect;
	this.$Ge = atlas.subTexture(rect[0],rect[1],rect[2],rect[3]);
	var origin = json.origin;
	if(origin != null) {
		this.$DP = origin[0];
		this.$EP = origin[1];
	} else {
		this.$DP = 0;
		this.$EP = 0;
	}
	var scale = json.scale;
	if(scale != null) {
		this.$NQ = scale[0];
		this.$OQ = scale[1];
	} else {
		this.$NQ = 1;
		this.$OQ = 1;
	}
};
$hxClasses["$CIG"] = $CIG;
$CIG.__name__ = "$CIG";
$CIG.__interfaces__ = [$CHG];
$CIG.prototype = {
	createSprite: function() {
		var sprite = new $ChF(this.$Ge);
		sprite.$qQ(this.$DP,this.$EP);
		sprite.$xQ(this.$NQ,this.$OQ);
		return sprite;
	}
	,__class__: $CIG
};
var $CMG = function(pack,baseDir) {
	this.$ci = new $CcC();
	this.$bi = [];
	var _gthis = this;
	this.$Ud = pack.getFile(baseDir + "/library.json");
	var json = this.$Ud.toJson();
	this.$fi = new $CcC();
	this.$Zi = json.frameRate;
	this.$ld = json.backgroundColor != null ? json.backgroundColor : 0;
	this.$ai = json.backgroundAlpha != null ? json.backgroundAlpha : 1;
	this.$IP = json.width != null ? json.width : 0;
	this.$JP = json.height != null ? json.height : 0;
	this.$YQ = json.pixelSnapping != null ? json.pixelSnapping : true;
	if(json.sounds != null) {
		var _g = 0;
		var _g1 = json.sounds;
		while(_g < _g1.length) {
			var soundObject = _g1[_g];
			++_g;
			var kitSound = pack.getSound(baseDir + "/" + $CNJ.$H3(soundObject.file),false);
			var symbolName = soundObject.id;
			this.$ci.h[symbolName] = new $CVG(symbolName,kitSound);
		}
	}
	if(json.videos != null) {
		var _g = 0;
		var _g1 = json.videos;
		while(_g < _g1.length) {
			var videoObject = _g1[_g];
			++_g;
			var kitVideo = pack.getVideo(baseDir + "/" + $CNJ.$H3(videoObject.file),false);
			var symbolName = videoObject.id;
			this.$fi.h[symbolName] = new $CWG(symbolName,kitVideo);
		}
	}
	var movies = [];
	var _g = 0;
	var _g1 = json.movies;
	while(_g < _g1.length) {
		var movie = new $CSG(this,_g1[_g++]);
		movies.push(movie);
		this.$fi.h[movie.$nP] = movie;
	}
	if(json.scenes != null) {
		var _g = 0;
		var _g1 = json.scenes;
		while(_g < _g1.length) {
			var scene = new $CSG(this,_g1[_g++]);
			movies.push(scene);
			this.$bi.push(scene);
		}
	}
	var atlases = json.textureGroups[0].atlases;
	var _g = 0;
	while(_g < atlases.length) {
		var atlasObject = atlases[_g];
		++_g;
		var atlas = pack.getTexture(baseDir + "/" + $CNJ.$H3(atlasObject.file));
		if(atlasObject.mask != null) {
			var mask = pack.getTexture(baseDir + "/" + $CNJ.$H3(atlasObject.mask));
			var newAtlas = $CcE.$Gc.$wa.createTexture(atlas.get_width(),atlas.get_height());
			var g = newAtlas.get_graphics();
			g.save();
			g.setBlendMode(kit_display_BlendMode.Copy);
			g.drawTexture(atlas,0,0);
			g.setBlendMode(kit_display_BlendMode.Mask);
			g.drawTexture(mask,0,0);
			g.restore();
			atlas.dispose();
			mask.dispose();
			atlas = newAtlas;
		}
		var _g1 = 0;
		var _g2 = atlasObject.textures;
		while(_g1 < _g2.length) {
			var bitmap = new $CIG(_g2[_g1++],atlas);
			this.$fi.h[bitmap.$nP] = bitmap;
		}
	}
	var processLayer = null;
	processLayer = function(layer) {
		var keyframes = layer.$Yj;
		var ll = keyframes.length;
		var _g = 0;
		while(_g < ll) {
			var ii = _g++;
			var kf = keyframes[ii];
			if(kf.$bj != null) {
				kf.$nd = _gthis.$fi.h[kf.$bj];
			}
			if(kf.$hj && kf.$Ui == 1 && ii + 1 < ll) {
				var nextKf = keyframes[ii + 1];
				if(!nextKf.$GP || nextKf.$bj == null) {
					kf.$GP = false;
				}
			}
		}
		var _g = 0;
		var _g1 = layer.$Zj;
		while(_g < _g1.length) processLayer(_g1[_g++]);
	};
	var _g = 0;
	while(_g < movies.length) {
		var _g1 = 0;
		var _g2 = movies[_g++].$id;
		while(_g1 < _g2.length) processLayer(_g2[_g1++]);
	}
};
$hxClasses["$CMG"] = $CMG;
$CMG.__name__ = "$CMG";
$CMG.prototype = {
	__class__: $CMG
};
var $CNG = function(lib) {
	this.$pi = null;
	this.$oi = null;
	$CtB.call(this);
	this.$9f = lib;
	this.$ni = new $CRE();
	this.$hi = new $CVE(null);
	this.$ji(true);
};
$hxClasses["$CNG"] = $CNG;
$CNG.__name__ = "$CNG";
$CNG.__super__ = $CtB;
$CNG.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 14;
	}
	,$ji: function(cache) {
		this.$ri = cache ? new $CcC() : null;
		return this;
	}
	,$rO: function() {
		this.$pO.$rB(this.$ni);
	}
	,$sO: function() {
		this.$ni.dispose();
		this.$oi = this.$pi = null;
		this.$hi.set__(null);
	}
	,$vO: function(dt) {
		if(this.$oi != null && this.$oi.$3i + dt > this.$oi.$nd.$Ui) {
			this.$oi = null;
			this.$mi(this.$pi);
		}
	}
	,$mi: function(current) {
		this.$ni.$8(current);
		return this.$hi.set__(current);
	}
	,__class__: $CNG
});
var $COG = function(symbol) {
	this.$8i = null;
	this.$7i = null;
	this.$6i = null;
	this.$5i = 0;
	var _gthis = this;
	$C6B.call(this);
	this.$nd = symbol;
	this.$si = new $CbE(1);
	this.$2i = new Array(symbol.$id.length);
	var _g = 0;
	var _g1 = this.$2i.length;
	while(_g < _g1) {
		var ii = _g++;
		this.$2i[ii] = new $CPG(symbol.$id[ii]);
	}
	this.$3i = 0;
	this.$4i = -1;
	this.$zi(0);
	if(symbol.$8g) {
		var upPosition = 0 / symbol.$Zi;
		var overPosition = 1 / symbol.$Zi;
		var downPosition = 2 / symbol.$Zi;
		var pressed = false;
		var hovering = false;
		var hitArea = new $C2E(1.79769313486231e+308,1.79769313486231e+308,-1.79769313486231e+308,-1.79769313486231e+308);
		var _g = 0;
		var _g1 = symbol.$id;
		while(_g < _g1.length) $COG.$_i(_g1[_g++],hitArea);
		if(hitArea.$QC < hitArea.$IP && hitArea.$RC < hitArea.$JP) {
			this.$8i = hitArea;
		}
		this.$4O |= 4096;
		this.get_pointerDown().$eb(function(_) {
			pressed = true;
			_gthis.set_position(downPosition);
			$CcE.$Gc.$va.up.$eb(function(_) {
				pressed = false;
				_gthis.set_position(hovering ? overPosition : upPosition);
			}).$Ob();
		});
		var moveHandler = null;
		this.get_pointerIn().$eb(function(_) {
			hovering = true;
			_gthis.set_position(pressed ? downPosition : overPosition);
			if($CcE.$Gc.$ua.get_cursor() == kit_input_MouseCursor.Default) {
				$CcE.$Gc.$ua.set_cursor(kit_input_MouseCursor.Button);
			}
			if(moveHandler != null) {
				moveHandler.dispose();
			}
			moveHandler = $CcE.$Gc.$va.move.$eb(function(event) {
				if(_gthis.$pO == null) {
					moveHandler.dispose();
					if($CcE.$Gc.$ua.get_cursor() == kit_input_MouseCursor.Button) {
						$CcE.$Gc.$ua.set_cursor(kit_input_MouseCursor.Default);
					}
				}
			});
		});
		this.get_pointerOut().$eb(function(_) {
			hovering = false;
			_gthis.set_position(upPosition);
			if($CcE.$Gc.$ua.get_cursor() == kit_input_MouseCursor.Button) {
				$CcE.$Gc.$ua.set_cursor(kit_input_MouseCursor.Default);
			}
		});
	}
};
$hxClasses["$COG"] = $COG;
$COG.__name__ = "$COG";
$COG.$_i = function(layer,result) {
	var _g = 0;
	var _g1 = layer.$Yj;
	while(_g < _g1.length) {
		var kf = _g1[_g];
		++_g;
		if(kf.$eU == 3 && kf.$nd != null) {
			var sprite = kf.$nd.createSprite();
			var x2 = sprite.$hQ();
			var y2 = sprite.$iQ();
			if(x2 > 0.0 && y2 > 0.0) {
				var scaleX = sprite.$NQ.$Lb * kf.$NQ;
				var scaleY = sprite.$OQ.$Lb * kf.$OQ;
				var matrix = sprite.$kQ();
				matrix.$kB(Math.cos(kf.$ej) * scaleX,Math.sin(kf.$ej) * scaleX,-Math.sin(kf.$dj) * scaleY,Math.cos(kf.$dj) * scaleY,kf.$QC,kf.$RC);
				matrix.$$P(-kf.$fj,-kf.$gj);
				$C6B.$QR(matrix,0.0,0.0,result);
				$C6B.$QR(matrix,x2,0.0,result);
				$C6B.$QR(matrix,x2,y2,result);
				$C6B.$QR(matrix,0.0,y2,result);
			}
		}
	}
	var _g = 0;
	var _g1 = layer.$Zj;
	while(_g < _g1.length) $COG.$_i(_g1[_g++],result);
};
$COG.__super__ = $C6B;
$COG.prototype = $extend($C6B.prototype,{
	$jQ: function(localX,localY) {
		if(this.$8i != null && localX >= this.$8i.$QC && localX < this.$8i.$IP && localY >= this.$8i.$RC) {
			return localY < this.$8i.$JP;
		} else {
			return false;
		}
	}
	,$rO: function() {
		$C6B.prototype.$rO.call(this);
		var _g = 0;
		var _g1 = this.$2i;
		while(_g < _g1.length) this.$pO.$rB(_g1[_g++].$Oe);
	}
	,$sO: function() {
		$C6B.prototype.$sO.call(this);
		var _g = 0;
		var _g1 = this.$2i;
		while(_g < _g1.length) this.$pO.$sB(_g1[_g++].$Oe);
	}
	,$vO: function(dt) {
		$C6B.prototype.$vO.call(this,dt);
		this.$si.$5K(dt);
		switch(this.$4O & 6912) {
		case 0:
			if(this.$si.$Lb >= 0) {
				this.$3i += this.$si.$Lb * dt;
				if(this.$3i > this.$nd.$Ui) {
					if((this.$4O & 1024) != 0) {
						this.$3i = this.$nd.$Ui;
						this.$4O |= 2048;
					} else {
						this.$3i %= this.$nd.$Ui;
						if(this.$6i != null) {
							this.$6i.$fb();
						}
					}
				}
			}
			break;
		case 512:
			this.$4O &= -513;
			break;
		}
		this.$zi(this.$3i * this.$nd.$Zi);
	}
	,$zi: function(newFrame) {
		if(this.$4i == newFrame) {
			return;
		}
		if(newFrame < this.$4i) {
			var _g = 0;
			var _g1 = this.$2i;
			while(_g < _g1.length) if(_g1[_g++].$Lj(this.$7i)) {
				return;
			}
		}
		var _g = 0;
		var _g1 = this.$2i;
		while(_g < _g1.length) if(_g1[_g++].$Nj(newFrame,this.$7i,this.$5i)) {
			return;
		}
		switch(this.$5i) {
		case 0:
			this.$5i = 1;
			break;
		case 1:case 2:
			this.$5i = 3;
			break;
		case 3:
			break;
		}
		this.$4i = newFrame;
	}
	,set_position: function(position) {
		this.$KH(position,true);
		return position;
	}
	,$KH: function(position,runActions) {
		var position1 = $CGG.$sG(position,0,this.$nd.$Ui);
		this.$3i = position1;
		this.$5i = 3;
		var newFrame = position1 * this.$nd.$Zi;
		var actionBehavior = runActions ? 2 : 0;
		var _g = 0;
		var _g1 = this.$2i;
		while(_g < _g1.length) if(_g1[_g++].$Mj(newFrame,this.$7i,actionBehavior)) {
			return position1;
		}
		this.$4i = newFrame;
		return position1;
	}
	,set_paused: function(paused) {
		this.$4O = $CHJ.$kB(this.$4O,256,paused);
		return paused;
	}
	,$0i: function(kf) {
		this.$3i = kf.$kj / this.$nd.$Zi;
		this.set_paused(kf.$jj == kit_movie_PlayMode.SingleFrame);
		this.$4O = (this.$4O | 512) & -2049;
		var _g = 0;
		var _g1 = this.$2i;
		while(_g < _g1.length) _g1[_g++].$0i();
	}
	,__class__: $COG
	,__properties__: $extend($C6B.prototype.__properties__,{set_paused:"set_paused",set_position:"set_position"})
});
var $CPG = function(layer) {
	this.$Qj = [];
	this.$Ij = null;
	this.$Hj = true;
	this.$Gj = -1;
	this.$Fj = 0;
	this.$Ej = false;
	this.$BP = layer;
	this.$Oe = new $CRE();
	if(layer.$d) {
		this.$Pj = null;
	} else {
		this.$Pj = new Array(layer.$Yj.length);
		var lastVisibleKf = null;
		var lastVisibleSprite = null;
		var _g = 0;
		var _g1 = this.$Pj.length;
		while(_g < _g1) {
			var ii = _g++;
			var kf = layer.$Yj[ii];
			if(lastVisibleKf != null && $CPG.$Rj(lastVisibleKf,kf)) {
				this.$Pj[ii] = lastVisibleSprite;
			} else if(kf.$nd != null) {
				var sprite = kf.$nd.createSprite();
				this.$Pj[ii] = sprite;
				if(kf.$kj > 0 || kf.$jj != kit_movie_PlayMode.Loop) {
					var movieSprite = ((sprite) instanceof $COG) ? sprite : null;
					if(movieSprite != null) {
						switch(kf.$jj._hx_index) {
						case 0:
							break;
						case 1:
							movieSprite.$4O |= 1024;
							break;
						case 2:
							movieSprite.set_paused(true);
							break;
						}
						movieSprite.$3i = kf.$kj / movieSprite.$nd.$Zi;
					}
				}
				lastVisibleKf = kf;
				lastVisibleSprite = sprite;
			} else {
				this.$Pj[ii] = new $C6B();
			}
		}
		this.$Oe.$8(this.$Pj[0]);
	}
	this.$Oj = this.$Oe;
	if(layer.$Zj.length > 0) {
		var mainSprite = new $C6B();
		var mainContainer = new $CRE().$8(mainSprite);
		mainContainer.$rB(this.$Oe);
		var root = new $CRE();
		this.$Oe = root;
		var childrenContainer = new $CRE();
		if(layer.$WQ) {
			this.$Ij = new $C6B();
			this.$Ij.set_mask(mainSprite);
			childrenContainer.$8(this.$Ij);
		}
		root.$rB(childrenContainer);
		root.$rB(mainContainer);
		var _g = 0;
		var _g1 = layer.$Zj;
		while(_g < _g1.length) {
			var childAnimator = new $CPG(_g1[_g++]);
			this.$Qj.push(childAnimator);
			childrenContainer.$rB(childAnimator.$Oe);
		}
	}
};
$hxClasses["$CPG"] = $CPG;
$CPG.__name__ = "$CPG";
$CPG.$Rj = function(kf1,kf2) {
	if(kf1.$nd != kf2.$nd || kf1.$jj != kf2.$jj) {
		return false;
	}
	if(kf1.$jj._hx_index == 2) {
		return kf1.$kj == kf2.$kj;
	} else if(kf1.$kj != kf2.$kj) {
		return kf1.$kj + kf1.$Ui == kf2.$kj;
	} else {
		return true;
	}
};
$CPG.prototype = {
	$Kj: function(kf,labelPassed) {
		if(kf.$lj != null && kf.$lj.$lj != null) {
			if(!this.$Oe.$Oa("MovieSprite.FRAME_SOUND",new $CRG(this.$Oe,kf)).$Da) {
				kf.$lj.$lj.play();
			}
		}
		if(labelPassed != null) {
			var label = kf.$Vi;
			if(label != null) {
				labelPassed.$fb(label);
			}
		}
		if(kf.$Wd != null) {
			this.$Oe.$Oa("MovieSprite.FRAME_ACTION",new $CRG(this.$Oe,kf));
		}
	}
	,$Lj: function(labelPassed) {
		var _g = 0;
		var _g1 = this.$Qj;
		while(_g < _g1.length) if(_g1[_g++].$Lj(labelPassed)) {
			return true;
		}
		if(this.$Gj >= 0) {
			var keyframes = this.$BP.$Yj;
			var oldJumpCount = this.$Fj;
			var _g = this.$Gj + 1;
			var _g1 = keyframes.length;
			while(_g < _g1) {
				this.$Kj(keyframes[_g++],labelPassed);
				if(oldJumpCount != this.$Fj) {
					return true;
				}
			}
			this.$Gj = -1;
		}
		this.$Ej = true;
		return false;
	}
	,$Mj: function(frame,labelPassed,actionBehavior) {
		var _g = 0;
		var _g1 = this.$Qj;
		while(_g < _g1.length) if(_g1[_g++].$Mj(frame,labelPassed,actionBehavior)) {
			return true;
		}
		++this.$Fj;
		var keyframes = this.$BP.$Yj;
		var finalFrame = keyframes.length - 1;
		var oldKeyframeIdx = this.$Gj;
		this.$Gj = -1;
		while(this.$Gj < finalFrame && keyframes[this.$Gj + 1].$eU <= frame) ++this.$Gj;
		if(this.$Gj != oldKeyframeIdx) {
			this.$Ej = true;
		}
		return this.$Nj(frame,labelPassed,actionBehavior);
	}
	,$Nj: function(frame,labelPassed,actionBehavior) {
		var _g = 0;
		var _g1 = this.$Qj;
		while(_g < _g1.length) if(_g1[_g++].$Nj(frame,labelPassed,actionBehavior)) {
			return true;
		}
		var keyframes = this.$BP.$Yj;
		var finalFrame = keyframes.length - 1;
		var prevIdx = this.$Gj;
		if(frame > this.$BP.$Si) {
			this.$Gj = finalFrame;
			this.$Ej = true;
		} else {
			while(this.$Gj < finalFrame && keyframes[this.$Gj + 1].$eU <= frame) {
				++this.$Gj;
				this.$Ej = true;
			}
		}
		if(this.$Pj != null) {
			var kf = keyframes[this.$Gj];
			var sprite;
			if(this.$Ej) {
				this.$Ej = false;
				sprite = this.$Pj[this.$Gj];
				if(sprite != this.$Oj.$na[10]) {
					var movie = ((sprite) instanceof $COG) ? sprite : null;
					if(movie != null) {
						movie.$0i(kf);
					}
					this.$Oj.$8(sprite);
				}
			} else {
				sprite = this.$Oj.$na[10];
			}
			if(this.$Hj) {
				var visible = kf.$GP && kf.$nd != null && frame <= this.$BP.$Si;
				sprite.set_visible(visible);
				if(this.$Ij != null) {
					this.$Ij.set_maskEnabled(visible);
				}
				if(visible) {
					var x = kf.$QC;
					var y = kf.$RC;
					var scaleX = kf.$NQ;
					var scaleY = kf.$OQ;
					var skewX = kf.$dj;
					var skewY = kf.$ej;
					var alpha = kf.$PQ;
					var tint = kf.$HP;
					if(kf.$hj && this.$Gj < finalFrame) {
						var interp = (frame - kf.$eU) / kf.$Ui;
						var ease = kf.$ij;
						if(ease != 0) {
							var t;
							if(ease < 0) {
								var inv = 1 - interp;
								t = 1 - inv * inv;
								ease = -ease;
							} else {
								t = interp * interp;
							}
							interp = ease * t + (1 - ease) * interp;
						}
						var nextKf = keyframes[this.$Gj + 1];
						x += (nextKf.$QC - x) * interp;
						y += (nextKf.$RC - y) * interp;
						scaleX += (nextKf.$NQ - scaleX) * interp;
						scaleY += (nextKf.$OQ - scaleY) * interp;
						skewX += (nextKf.$dj - skewX) * interp;
						skewY += (nextKf.$ej - skewY) * interp;
						alpha += (nextKf.$PQ - alpha) * interp;
						var nextTint = nextKf.$HP;
						if(nextTint != 16777215 || tint != 16777215) {
							var currR = (tint & 16711680) >> 16;
							var currG = (tint & 65280) >> 8;
							var currB = tint & 255;
							currR += (((nextTint & 16711680) >> 16) - currR) * interp | 0;
							currG += (((nextTint & 65280) >> 8) - currG) * interp | 0;
							currB += ((nextTint & 255) - currB) * interp | 0;
							tint = currR << 16 | currG << 8 | currB;
						}
					}
					var value = kf.$nd;
					var bitmap = ((value) instanceof $CIG) ? value : null;
					if(bitmap != null) {
						scaleX *= bitmap.$NQ;
						scaleY *= bitmap.$OQ;
					}
					var matrix = sprite.$kQ();
					matrix.$kB(Math.cos(skewY) * scaleX,Math.sin(skewY) * scaleX,-Math.sin(skewX) * scaleY,Math.cos(skewX) * scaleY,x,y);
					matrix.$$P(-kf.$fj,-kf.$gj);
					sprite.$4O |= 16;
					sprite.$PQ.set__(alpha);
					sprite.$uQ(tint);
					if(kf.$TQ != null || sprite.get_blendMode() != null) {
						sprite.set_blendMode(kf.$TQ);
					}
				}
			}
		}
		if(actionBehavior != 0) {
			if(actionBehavior == 1) {
				prevIdx = -1;
			} else if(actionBehavior == 2 && this.$Gj >= 0 && keyframes[this.$Gj].$eU == frame) {
				prevIdx = this.$Gj - 1;
			}
			var oldJumpCount = this.$Fj;
			var _g = prevIdx;
			var _g1 = this.$Gj;
			while(_g < _g1) {
				this.$Kj(keyframes[_g++ + 1],labelPassed);
				if(this.$Fj != oldJumpCount) {
					return true;
				}
			}
		}
		return false;
	}
	,$0i: function() {
		var _g = 0;
		var _g1 = this.$Qj;
		while(_g < _g1.length) _g1[_g++].$0i();
		this.$Ej = true;
		this.$Gj = -1;
		if(this.$Pj != null) {
			var _g = 0;
			var _g1 = this.$Pj.length;
			while(_g < _g1) {
				var ii = _g++;
				var value = this.$Pj[ii];
				var movieSprite = ((value) instanceof $COG) ? value : null;
				if(movieSprite != null) {
					movieSprite.$0i(this.$BP.$Yj[ii]);
				}
			}
		}
	}
	,__class__: $CPG
};
var $CRG = function(layer,keyframe) {
	this.$BP = layer;
	this.$Wj = keyframe;
};
$hxClasses["$CRG"] = $CRG;
$CRG.__name__ = "$CRG";
$CRG.prototype = {
	__class__: $CRG
};
var $CSG = function(lib,json) {
	this.$nP = json.id;
	this.$Zi = lib.$Zi;
	this.$Si = 0.0;
	this.$id = new Array(json.layers.length);
	var _g = 0;
	var _g1 = this.$id.length;
	while(_g < _g1) {
		var ii = _g++;
		var layer = new $CTG(lib,json.layers[ii]);
		this.$Si = Math.max(layer.$Si,this.$Si);
		this.$id[ii] = layer;
	}
	this.$Ui = this.$Si / this.$Zi;
	this.$8g = json.button == true;
};
$hxClasses["$CSG"] = $CSG;
$CSG.__name__ = "$CSG";
$CSG.__interfaces__ = [$CHG];
$CSG.prototype = {
	createSprite: function() {
		return new $COG(this);
	}
	,__class__: $CSG
};
var $CTG = function(lib,json) {
	this.$WQ = false;
	this.$Zj = [];
	this.$d = true;
	this.$CP = json.name;
	var prevKf = null;
	this.$Yj = new Array(json.keyframes.length);
	var _g = 0;
	var _g1 = this.$Yj.length;
	while(_g < _g1) {
		var ii = _g++;
		prevKf = new $CUG(lib,json.keyframes[ii],prevKf);
		this.$Yj[ii] = prevKf;
		this.$d = this.$d && prevKf.$bj == null;
	}
	this.$Si = prevKf != null ? prevKf.$eU + prevKf.$Ui : 0;
	if(json.mask != null) {
		this.$WQ = json.mask;
	}
	if(json.childLayers != null) {
		var _g = 0;
		var _g1 = json.childLayers;
		while(_g < _g1.length) {
			var childLayer = new $CTG(lib,_g1[_g++]);
			if(childLayer.$Si > this.$Si) {
				this.$Si = childLayer.$Si;
			}
			this.$Zj.push(childLayer);
		}
	}
};
$hxClasses["$CTG"] = $CTG;
$CTG.__name__ = "$CTG";
$CTG.prototype = {
	__class__: $CTG
};
var kit_movie_PlayMode = $hxEnums["kit.movie.PlayMode"] = { __ename__:true,__constructs__:null
	,Loop: {_hx_name:"Loop",_hx_index:0,__enum__:"kit.movie.PlayMode",toString:$estr}
	,PlayOnce: {_hx_name:"PlayOnce",_hx_index:1,__enum__:"kit.movie.PlayMode",toString:$estr}
	,SingleFrame: {_hx_name:"SingleFrame",_hx_index:2,__enum__:"kit.movie.PlayMode",toString:$estr}
};
kit_movie_PlayMode.__constructs__ = [kit_movie_PlayMode.Loop,kit_movie_PlayMode.PlayOnce,kit_movie_PlayMode.SingleFrame];
var $CUG = function(lib,json,prevKf) {
	this.$lj = null;
	this.$Wd = null;
	this.$kj = 0;
	this.$jj = kit_movie_PlayMode.Loop;
	this.$TQ = null;
	this.$ij = 0;
	this.$hj = true;
	this.$GP = true;
	this.$HP = 16777215;
	this.$PQ = 1;
	this.$gj = 0;
	this.$fj = 0;
	this.$ej = 0;
	this.$dj = 0;
	this.$OQ = 1;
	this.$NQ = 1;
	this.$RC = 0;
	this.$QC = 0;
	this.$cj = null;
	this.$nd = null;
	this.$eU = prevKf != null ? prevKf.$eU + prevKf.$Ui : 0;
	this.$Ui = json.duration;
	this.$Vi = json.label;
	this.$bj = json.ref;
	var loc = json.loc;
	if(loc != null) {
		this.$QC = loc[0];
		this.$RC = loc[1];
	}
	var scale = json.scale;
	if(scale != null) {
		this.$NQ = scale[0];
		this.$OQ = scale[1];
	}
	var skew = json.skew;
	if(skew != null) {
		this.$dj = skew[0];
		this.$ej = skew[1];
	}
	var pivot = json.pivot;
	if(pivot != null) {
		this.$fj = pivot[0];
		this.$gj = pivot[1];
	}
	if(json.alpha != null) {
		this.$PQ = json.alpha;
	}
	if(json.tint != null) {
		this.$HP = json.tint;
	}
	if(json.visible != null) {
		this.$GP = json.visible;
	}
	if(json.tweened != null) {
		this.$hj = json.tweened;
	}
	if(json.ease != null) {
		this.$ij = json.ease;
	}
	if(json.blendMode != null) {
		var _g = json.blendMode;
		var tmp;
		if(_g == null) {
			tmp = null;
		} else {
			switch(_g) {
			case "add":
				tmp = kit_display_BlendMode.Add;
				break;
			case "layer":
				tmp = kit_display_BlendMode.Mask;
				break;
			case "multiply":
				tmp = kit_display_BlendMode.Multiply;
				break;
			case "screen":
				tmp = kit_display_BlendMode.Screen;
				break;
			default:
				tmp = null;
			}
		}
		this.$TQ = tmp;
	}
	if(json.firstFrame != null) {
		this.$kj = json.firstFrame;
	}
	if(json.playMode != null) {
		var _g = json.playMode;
		var tmp;
		if(_g == null) {
			tmp = kit_movie_PlayMode.Loop;
		} else {
			switch(_g) {
			case "once":
				tmp = kit_movie_PlayMode.PlayOnce;
				break;
			case "stop":
				tmp = kit_movie_PlayMode.SingleFrame;
				break;
			default:
				tmp = kit_movie_PlayMode.Loop;
			}
		}
		this.$jj = tmp;
	}
	if(json.actions != null) {
		this.$Wd = json.actions;
	}
	if(json.sound != null) {
		this.$lj = lib.$ci.h[json.sound];
	}
	if(json.refName != null) {
		this.$cj = json.refName;
	}
};
$hxClasses["$CUG"] = $CUG;
$CUG.__name__ = "$CUG";
$CUG.prototype = {
	__class__: $CUG
};
var $CVG = function(name,sound) {
	this.$CP = name;
	this.$lj = sound;
};
$hxClasses["$CVG"] = $CVG;
$CVG.__name__ = "$CVG";
$CVG.prototype = {
	__class__: $CVG
};
var $CWG = function(name,video) {
	this.$nP = name;
	this.$oj = video;
};
$hxClasses["$CWG"] = $CWG;
$CWG.__name__ = "$CWG";
$CWG.__interfaces__ = [$CHG];
$CWG.prototype = {
	createSprite: function() {
		return new $CYG(this);
	}
	,__class__: $CWG
};
var $CXG = function(playback) {
	$C6B.call(this);
	this.$qj = playback;
};
$hxClasses["$CXG"] = $CXG;
$CXG.__name__ = "$CXG";
$CXG.__super__ = $C6B;
$CXG.prototype = $extend($C6B.prototype,{
	$1Q: function(g) {
		if(this.$qj != null) {
			g.drawTexture(this.$qj.get_texture(),0,0);
		}
	}
	,$hQ: function() {
		if(this.$qj != null) {
			return this.$qj.get_video().get_width();
		} else {
			return 0;
		}
	}
	,$iQ: function() {
		if(this.$qj != null) {
			return this.$qj.get_video().get_height();
		} else {
			return 0;
		}
	}
	,dispose: function() {
		$C6B.prototype.dispose.call(this);
		this.set_playback(null);
	}
	,set_playback: function(playback) {
		if(this.$qj != null && this.$qj != playback) {
			this.$qj.dispose();
		}
		return this.$qj = playback;
	}
	,__class__: $CXG
	,__properties__: $extend($C6B.prototype.__properties__,{set_playback:"set_playback"})
});
var $CYG = function(symbol) {
	$CXG.call(this,null);
	this.$nd = symbol;
};
$hxClasses["$CYG"] = $CYG;
$CYG.__name__ = "$CYG";
$CYG.__super__ = $CXG;
$CYG.prototype = $extend($CXG.prototype,{
	$rO: function() {
		$CXG.prototype.$rO.call(this);
		this.set_playback(this.$nd.$oj.play());
	}
	,$sO: function() {
		$CXG.prototype.$sO.call(this);
		this.set_playback(null);
	}
	,__class__: $CYG
});
var $CZG = function(mold) {
	this.$dk = 0;
	this.$ck = 0;
	this.$Hj = true;
	this.$rj = 0;
	$C6B.call(this);
	this.$Ge = mold.$Ge;
	this.set_blendMode(mold.$TQ);
	this.$hI = mold.$hI;
	this.$0j = new $CbE(mold.$0j);
	this.$1j = new $CbE(mold.$1j);
	this.$yj = new $CbE(mold.$yj);
	this.$zj = new $CbE(mold.$zj);
	this.$iI = new $CbE(mold.$iI);
	this.$2j = new $CbE(mold.$2j);
	this.$tj = new $CZE();
	this.$Ui = mold.$Ui;
	this.$vj = new $CbE(mold.$vj);
	this.$xj = new $CbE(mold.$xj);
	this.$3j = new $CbE(mold.$3j);
	this.$4j = new $CbE(mold.$4j);
	this.$5j = new $CbE(mold.$5j);
	this.$6j = new $CbE(mold.$6j);
	this.$7j = new $CbE(mold.$7j);
	this.$9j = new $CbE(mold.$9j);
	this.$8j = new $CbE(mold.$8j);
	this.$Jk = new $CbE(mold.$Jk);
	this.$Kk = new $CbE(mold.$Kk);
	this.$$j = new $CbE(mold.$$j);
	this.$_j = new $CbE(mold.$_j);
	this.$Ck = new $CbE(mold.$Ck);
	this.$Dk = new $CbE(mold.$Dk);
	this.$Ak = new $CbE(mold.$Ak);
	this.$Bk = new $CbE(mold.$Bk);
	this.$Gk = new $CbE(mold.$Gk);
	this.$Hk = new $CbE(mold.$Hk);
	this.$Ek = new $CbE(mold.$Ek);
	this.$Fk = new $CbE(mold.$Fk);
	this.$si = new $CbE(mold.$si);
	this.$Ik = new $CbE(mold.$Ik);
	this.$Lk = new $CbE(mold.$Lk);
	this.$Mk = new $CbE(mold.$Mk);
	this.$Nk = new $CbE(mold.$Nk);
	this.$Ok = new $CbE(mold.$Ok);
	this.$Pk = new $CbE(mold.$Pk);
	this.$Qk = new $CbE(mold.$Qk);
	this.$Rk = new $CbE(mold.$Rk);
	this.$Sk = new $CbE(mold.$Sk);
	this.$Tk = new $CbE(mold.$Tk);
	this.$Uk = new $CbE(mold.$Uk);
	this.$Vk = new $CbE(mold.$Vk);
	this.$Wk = new $CbE(mold.$Wk);
	this.$Xk = new $CbE(mold.$Xk);
	this.$Yk = new $CbE(mold.$Yk);
	this.$uj = new $CbE(0);
	this.$wj = new $CbE(0);
	this.$bk = new Array(mold.$sj);
	var ii = 0;
	var ll = this.$bk.length;
	while(ii < ll) {
		this.$bk[ii] = new $CaG();
		++ii;
	}
};
$hxClasses["$CZG"] = $CZG;
$CZG.__name__ = "$CZG";
$CZG.$5 = function(base,variance) {
	if(variance != 0) {
		base += variance * (2 * Math.random() - 1);
	}
	return base;
};
$CZG.__super__ = $C6B;
$CZG.prototype = $extend($C6B.prototype,{
	$vO: function(dt) {
		$C6B.prototype.$vO.call(this,dt);
		this.$0j.$5K(dt);
		this.$1j.$5K(dt);
		this.$yj.$5K(dt);
		this.$zj.$5K(dt);
		this.$iI.$5K(dt);
		this.$2j.$5K(dt);
		this.$uj.$5K(dt);
		this.$vj.$5K(dt);
		this.$wj.$5K(dt);
		this.$xj.$5K(dt);
		this.$3j.$5K(dt);
		this.$4j.$5K(dt);
		this.$9j.$5K(dt);
		this.$8j.$5K(dt);
		this.$5j.$5K(dt);
		this.$6j.$5K(dt);
		this.$7j.$5K(dt);
		this.$Jk.$5K(dt);
		this.$Kk.$5K(dt);
		this.$$j.$5K(dt);
		this.$_j.$5K(dt);
		this.$Ck.$5K(dt);
		this.$Dk.$5K(dt);
		this.$Ak.$5K(dt);
		this.$Bk.$5K(dt);
		this.$Gk.$5K(dt);
		this.$Hk.$5K(dt);
		this.$Ek.$5K(dt);
		this.$Fk.$5K(dt);
		this.$si.$5K(dt);
		this.$Ik.$5K(dt);
		this.$Lk.$5K(dt);
		this.$Mk.$5K(dt);
		this.$Nk.$5K(dt);
		this.$Ok.$5K(dt);
		this.$Pk.$5K(dt);
		this.$Qk.$5K(dt);
		this.$Rk.$5K(dt);
		this.$Sk.$5K(dt);
		this.$Tk.$5K(dt);
		this.$Uk.$5K(dt);
		this.$Vk.$5K(dt);
		this.$Wk.$5K(dt);
		this.$Xk.$5K(dt);
		this.$Yk.$5K(dt);
		var gravityType = this.$hI == kit_particle_EmitterType.Gravity;
		var ii = 0;
		while(ii < this.$rj) {
			var particle = this.$bk[ii];
			if(particle.$tk > dt) {
				if(gravityType) {
					particle.$QC += particle.$ek * dt;
					particle.$RC += particle.$fk * dt;
					var accelX = this.$3j.$Lb;
					var accelY = -this.$4j.$Lb;
					if(particle.$Jk != 0 || particle.$Lk != 0) {
						var dx = particle.$QC - particle.$uj;
						var dy = particle.$RC - particle.$wj;
						var distance = Math.sqrt(dx * dx + dy * dy);
						var radialX = dx / distance;
						var radialY = dy / distance;
						accelX += radialX * particle.$Jk;
						accelY += radialY * particle.$Jk;
						accelX += -radialY * particle.$Lk;
						accelY += radialX * particle.$Lk;
					}
					particle.$ek += accelX * dt;
					particle.$fk += accelY * dt;
				} else {
					particle.$ik += particle.$jk * dt;
					var radius = particle.$gk += particle.$hk * dt;
					particle.$QC = this.$uj.$Lb - Math.cos(particle.$ik) * radius;
					particle.$RC = this.$wj.$Lb - Math.sin(particle.$ik) * radius;
					if(radius < this.$7j.$Lb) {
						particle.$tk = 0;
					}
				}
				particle.$_P += particle.$kk * dt;
				particle.$FP += particle.$lk * dt;
				particle.$PQ += particle.$mk * dt;
				particle.$nk += particle.$ok * dt;
				particle.$pk += particle.$qk * dt;
				particle.$rk += particle.$sk * dt;
				particle.$tk -= dt;
				++ii;
			} else {
				--this.$rj;
				if(ii != this.$rj) {
					this.$bk[ii] = this.$bk[this.$rj];
					this.$bk[this.$rj] = particle;
				}
				if(!this.$Hj && this.$rj == 0) {
					this.$tj.$fb();
				}
			}
		}
		if(!this.$Hj) {
			return;
		}
		if(this.$Ui > 0) {
			this.$dk += dt;
			if(this.$dk >= this.$Ui) {
				this.$Hj = false;
				return;
			}
		}
		var emitDelay = this.$9j.$Lb / this.$bk.length;
		this.$ck += dt;
		while(this.$ck >= emitDelay) {
			if(this.$rj < this.$bk.length) {
				if(this.$ak(this.$bk[this.$rj])) {
					++this.$rj;
				}
			}
			this.$ck -= emitDelay;
		}
	}
	,$1Q: function(g) {
		var offset = -this.$Ge.get_width() / 2;
		var ii = 0;
		var ll = this.$rj;
		while(ii < ll) {
			var particle = this.$bk[ii];
			g.save();
			g.translate(particle.$QC,particle.$RC);
			if(particle.$PQ < 1) {
				g.multiplyAlpha(particle.$PQ);
			}
			if(particle.$nk != 1 || particle.$pk != 1 || particle.$rk != 1) {
				g.tint(particle.$nk,particle.$pk,particle.$rk);
			}
			if(particle.$FP != 0) {
				g.rotate(particle.$FP);
			}
			if(particle.$_P != 1) {
				g.scale(particle.$_P,particle.$_P);
			}
			g.drawTexture(this.$Ge,offset,offset);
			g.restore();
			++ii;
		}
	}
	,$ak: function(particle) {
		particle.$tk = $CZG.$5(this.$9j.$Lb,this.$8j.$Lb);
		if(particle.$tk <= 0) {
			return false;
		}
		particle.$uj = this.$uj.$Lb;
		particle.$wj = this.$wj.$Lb;
		var angle = -($CZG.$5(this.$iI.$Lb,this.$2j.$Lb) * 3.141592653589793 / 180);
		var speed = $CZG.$5(this.$si.$Lb,this.$Ik.$Lb);
		particle.$ek = speed * Math.cos(angle);
		particle.$fk = speed * Math.sin(angle);
		particle.$Jk = $CZG.$5(this.$Jk.$Lb,this.$Kk.$Lb);
		particle.$Lk = $CZG.$5(this.$Lk.$Lb,this.$Mk.$Lb);
		particle.$gk = $CZG.$5(this.$5j.$Lb,this.$6j.$Lb);
		particle.$hk = -particle.$gk / particle.$tk;
		particle.$ik = angle;
		particle.$jk = $CZG.$5(this.$$j.$Lb,this.$_j.$Lb) * 3.141592653589793 / 180;
		if(this.$hI == kit_particle_EmitterType.Gravity) {
			particle.$QC = $CZG.$5(this.$uj.$Lb,this.$vj.$Lb);
			particle.$RC = $CZG.$5(this.$wj.$Lb,this.$xj.$Lb);
		} else {
			var radius = particle.$gk;
			particle.$QC = this.$uj.$Lb - Math.cos(particle.$ik) * radius;
			particle.$RC = this.$wj.$Lb - Math.sin(particle.$ik) * radius;
		}
		var width = this.$Ge.get_width();
		var scaleStart = $CZG.$5(this.$Ek.$Lb,this.$Fk.$Lb) / width;
		var scaleEnd = $CZG.$5(this.$Gk.$Lb,this.$Hk.$Lb) / width;
		particle.$_P = scaleStart;
		particle.$kk = (scaleEnd - scaleStart) / particle.$tk;
		var rotationStart = $CZG.$5(this.$Ak.$Lb,this.$Bk.$Lb);
		var rotationEnd = $CZG.$5(this.$Ck.$Lb,this.$Dk.$Lb);
		particle.$FP = rotationStart;
		particle.$lk = (rotationEnd - rotationStart) / particle.$tk;
		var alphaStart = $CZG.$5(this.$yj.$Lb,this.$zj.$Lb);
		var alphaEnd = $CZG.$5(this.$0j.$Lb,this.$1j.$Lb);
		particle.$PQ = alphaStart;
		particle.$mk = (alphaEnd - alphaStart) / particle.$tk;
		var redStart = $CZG.$5(this.$Nk.$Lb,this.$Ok.$Lb);
		var redEnd = $CZG.$5(this.$Pk.$Lb,this.$Qk.$Lb);
		particle.$nk = redStart;
		particle.$ok = (redEnd - redStart) / particle.$tk;
		var greenStart = $CZG.$5(this.$Rk.$Lb,this.$Sk.$Lb);
		var greenEnd = $CZG.$5(this.$Tk.$Lb,this.$Uk.$Lb);
		particle.$pk = greenStart;
		particle.$qk = (greenEnd - greenStart) / particle.$tk;
		var blueStart = $CZG.$5(this.$Vk.$Lb,this.$Wk.$Lb);
		var blueEnd = $CZG.$5(this.$Xk.$Lb,this.$Yk.$Lb);
		particle.$rk = blueStart;
		particle.$sk = (blueEnd - blueStart) / particle.$tk;
		return true;
	}
	,set_maxParticles: function(maxParticles) {
		var oldLength = this.$bk.length;
		this.$bk.length = maxParticles;
		while(oldLength < maxParticles) {
			this.$bk[oldLength] = new $CaG();
			++oldLength;
		}
		if(this.$rj > maxParticles) {
			this.$rj = maxParticles;
		}
		return maxParticles;
	}
	,__class__: $CZG
	,__properties__: $extend($C6B.prototype.__properties__,{set_maxParticles:"set_maxParticles"})
});
var $CaG = function() {
	this.$tk = 0;
	this.$sk = 0;
	this.$rk = 0;
	this.$qk = 0;
	this.$pk = 0;
	this.$ok = 0;
	this.$nk = 0;
	this.$mk = 0;
	this.$PQ = 0;
	this.$lk = 0;
	this.$FP = 0;
	this.$kk = 0;
	this.$_P = 0;
	this.$Lk = 0;
	this.$Jk = 0;
	this.$jk = 0;
	this.$ik = 0;
	this.$hk = 0;
	this.$gk = 0;
	this.$fk = 0;
	this.$RC = 0;
	this.$ek = 0;
	this.$QC = 0;
	this.$wj = 0;
	this.$uj = 0;
};
$hxClasses["$CaG"] = $CaG;
$CaG.__name__ = "$CaG";
$CaG.prototype = {
	__class__: $CaG
};
var kit_particle_EmitterType = $hxEnums["kit.particle.EmitterType"] = { __ename__:true,__constructs__:null
	,Gravity: {_hx_name:"Gravity",_hx_index:0,__enum__:"kit.particle.EmitterType",toString:$estr}
	,Radial: {_hx_name:"Radial",_hx_index:1,__enum__:"kit.particle.EmitterType",toString:$estr}
};
kit_particle_EmitterType.__constructs__ = [kit_particle_EmitterType.Gravity,kit_particle_EmitterType.Radial];
var $CbG = function(pack,name) {
	this.$Ud = pack.getFile(name + ".pex");
	var xml = this.$Ud.toXml();
	var blendFuncSource = 0;
	var blendFuncDestination = 0;
	var idx = name.lastIndexOf("/");
	var basePath = idx >= 0 ? HxOverrides.substr(name,0,idx + 1) : "";
	var element = xml.$qB().$nB();
	while(element.hasNext()) {
		var element1 = element.next();
		if(element1.$dB != $CL.$WB) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (element1.$dB == null ? "null" : $CK.toString(element1.$dB)));
		}
		switch(element1.$eB.toLowerCase()) {
		case "angle":
			this.$iI = $CbG.$LU(element1,"value");
			break;
		case "anglevariance":
			this.$2j = $CbG.$LU(element1,"value");
			break;
		case "blendfuncdestination":
			blendFuncDestination = $CbG.$LU(element1,"value") | 0;
			break;
		case "blendfuncsource":
			blendFuncSource = $CbG.$LU(element1,"value") | 0;
			break;
		case "duration":
			this.$Ui = $CbG.$LU(element1,"value");
			break;
		case "emittertype":
			this.$hI = ($CbG.$LU(element1,"value") | 0) == 0 ? kit_particle_EmitterType.Gravity : kit_particle_EmitterType.Radial;
			break;
		case "finishcolor":
			this.$0j = $CbG.$LU(element1,"alpha");
			this.$Pk = $CbG.$LU(element1,"red");
			this.$Tk = $CbG.$LU(element1,"green");
			this.$Xk = $CbG.$LU(element1,"blue");
			break;
		case "finishcolorvariance":
			this.$1j = $CbG.$LU(element1,"alpha");
			this.$Qk = $CbG.$LU(element1,"red");
			this.$Uk = $CbG.$LU(element1,"green");
			this.$Yk = $CbG.$LU(element1,"blue");
			break;
		case "finishparticlesize":
			this.$Gk = $CbG.$LU(element1,"value");
			break;
		case "finishparticlesizevariance":
			this.$Hk = $CbG.$LU(element1,"value");
			break;
		case "gravity":
			this.$3j = $CbG.$LU(element1,"x");
			this.$4j = $CbG.$LU(element1,"y");
			break;
		case "maxparticles":
			this.$sj = $CbG.$LU(element1,"value") | 0;
			break;
		case "maxradius":
			this.$5j = $CbG.$LU(element1,"value");
			break;
		case "maxradiusvariance":
			this.$6j = $CbG.$LU(element1,"value");
			break;
		case "minradius":
			this.$7j = $CbG.$LU(element1,"value");
			break;
		case "particlelifespan":
			this.$9j = $CbG.$LU(element1,"value");
			break;
		case "particlelifespanvariance":
			this.$8j = $CbG.$LU(element1,"value");
			break;
		case "radialacceleration":
			this.$Jk = $CbG.$LU(element1,"value");
			break;
		case "radialaccelvariance":
			this.$Kk = $CbG.$LU(element1,"value");
			break;
		case "rotatepersecond":
			this.$$j = $CbG.$LU(element1,"value");
			break;
		case "rotatepersecondvariance":
			this.$_j = $CbG.$LU(element1,"value");
			break;
		case "rotationend":
			this.$Ck = $CbG.$LU(element1,"value");
			break;
		case "rotationendvariance":
			this.$Dk = $CbG.$LU(element1,"value");
			break;
		case "rotationstart":
			this.$Ak = $CbG.$LU(element1,"value");
			break;
		case "rotationstartvariance":
			this.$Bk = $CbG.$LU(element1,"value");
			break;
		case "sourcepositionvariance":
			this.$vj = $CbG.$LU(element1,"x");
			this.$xj = $CbG.$LU(element1,"y");
			break;
		case "speed":
			this.$si = $CbG.$LU(element1,"value");
			break;
		case "speedvariance":
			this.$Ik = $CbG.$LU(element1,"value");
			break;
		case "startcolor":
			this.$yj = $CbG.$LU(element1,"alpha");
			this.$Nk = $CbG.$LU(element1,"red");
			this.$Rk = $CbG.$LU(element1,"green");
			this.$Vk = $CbG.$LU(element1,"blue");
			break;
		case "startcolorvariance":
			this.$zj = $CbG.$LU(element1,"alpha");
			this.$Ok = $CbG.$LU(element1,"red");
			this.$Sk = $CbG.$LU(element1,"green");
			this.$Wk = $CbG.$LU(element1,"blue");
			break;
		case "startparticlesize":
			this.$Ek = $CbG.$LU(element1,"value");
			break;
		case "startparticlesizevariance":
			this.$Fk = $CbG.$LU(element1,"value");
			break;
		case "tangentialacceleration":
			this.$Lk = $CbG.$LU(element1,"value");
			break;
		case "tangentialaccelvariance":
			this.$Mk = $CbG.$LU(element1,"value");
			break;
		case "texture":
			this.$Ge = pack.getTexture(basePath + $CNJ.$H3(element1.$jB("name")));
			break;
		}
	}
	if(this.$9j <= 0) {
		this.$9j = this.$Ui;
	}
	if(blendFuncSource == 1 && blendFuncDestination == 1) {
		this.$TQ = kit_display_BlendMode.Add;
	} else if(blendFuncSource == 1 && blendFuncDestination == 771) {
		this.$TQ = null;
	}
};
$hxClasses["$CbG"] = $CbG;
$CbG.__name__ = "$CbG";
$CbG.$LU = function(xml,name) {
	return parseFloat(xml.$jB(name));
};
$CbG.prototype = {
	$pd: function() {
		this.$Ud.dispose();
		return this;
	}
	,$uk: function() {
		return new $CZG(this);
	}
	,__class__: $CbG
};
var $CcG = function(world) {
	this.$7k = null;
	this.$6k = 0;
	this.$5k = 0;
	this.$4I = new $CYE();
	this.$3I = new $CYE();
	this.$2I = new $CaE();
	this.$1I = new $CaE();
	this.$5J = 8;
	this.$6J = 3;
	this.$_P = 50;
	$CtB.call(this);
	if(world == null) {
		world = new $CEB(new $CO(0,10),true);
	}
	this.$vk = world;
};
$hxClasses["$CcG"] = $CcG;
$CcG.__name__ = "$CcG";
$CcG.__super__ = $CtB;
$CcG.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 15;
	}
	,$tO: function() {
		this.$vk.$eK.$BJ = new $CdG(this);
	}
	,$uO: function() {
		this.$vk.$eK.$BJ = $C8.$5I;
	}
	,$vO: function(dt) {
		var a = this.$5k + dt;
		this.$5k = a < 0.0666666666666666657 ? a : 0.0666666666666666657;
		while(this.$5k >= 0.0333333333333333329) {
			this.$5k -= 0.0333333333333333329;
			if(this.$5k < 0.0333333333333333329) {
				var body = this.$vk.$gK;
				while(body != null) {
					var physics = body.$ZI;
					if(physics != null) {
						physics.$Dl();
					}
					body = body.$II;
				}
			}
			this.$vk.$RK(0.0333333333333333329,this.$6J,this.$5J);
		}
		this.$6k = this.$5k / 0.0333333333333333329;
		this.$vk.$SK();
		if(this.$7k != null) {
			var _g = 0;
			var _g1 = this.$7k;
			while(_g < _g1.length) _g1[_g++]();
			this.$7k = null;
		}
	}
	,$Vb: function(fn) {
		if((this.$vk.$$H & 2) == 0) {
			fn();
			return false;
		}
		if(this.$7k == null) {
			this.$7k = [fn];
		} else {
			this.$7k.push(fn);
		}
		return true;
	}
	,__class__: $CcG
});
var $CdG = function(box2d) {
	$C8.call(this);
	this.$9k = box2d;
};
$hxClasses["$CdG"] = $CdG;
$CdG.__name__ = "$CdG";
$CdG.__super__ = $C8;
$CdG.prototype = $extend($C8.prototype,{
	$1I: function(contact) {
		var a = contact.$9K.$cJ.$ZI;
		if(a != null && a.$El != null) {
			a.$El.$fb(contact);
		}
		var b = contact.$$K.$cJ.$ZI;
		if(b != null && b.$El != null) {
			b.$El.$fb(contact);
		}
		this.$9k.$1I.$fb(contact);
	}
	,$2I: function(contact) {
		var a = contact.$9K.$cJ.$ZI;
		if(a != null && a.$Fl != null) {
			a.$Fl.$fb(contact);
		}
		var b = contact.$$K.$cJ.$ZI;
		if(b != null && b.$Fl != null) {
			b.$Fl.$fb(contact);
		}
		this.$9k.$2I.$fb(contact);
	}
	,$3I: function(contact,oldManifold) {
		var a = contact.$9K.$cJ.$ZI;
		if(a != null && a.$Gl != null) {
			a.$Gl.$fb(contact,oldManifold);
		}
		var b = contact.$$K.$cJ.$ZI;
		if(b != null && b.$Gl != null) {
			b.$Gl.$fb(contact,oldManifold);
		}
		this.$9k.$3I.$fb(contact,oldManifold);
	}
	,$4I: function(contact,impulse) {
		var a = contact.$9K.$cJ.$ZI;
		if(a != null && a.$Hl != null) {
			a.$Hl.$fb(contact,impulse);
		}
		var b = contact.$$K.$cJ.$ZI;
		if(b != null && b.$Hl != null) {
			b.$Hl.$fb(contact,impulse);
		}
		this.$9k.$4I.$fb(contact,impulse);
	}
	,__class__: $CdG
});
var $CeG = function(box2d,body) {
	this.$Ml = 0;
	this.$Ll = 0;
	this.$Kl = 0;
	this.$Jl = 0;
	this.$Il = 0;
	this.$Hl = null;
	this.$Gl = null;
	this.$Fl = null;
	this.$El = null;
	$CtB.call(this);
	this.$$k = box2d;
	this.$2L = body;
};
$hxClasses["$CeG"] = $CeG;
$CeG.__name__ = "$CeG";
$CeG.__super__ = $CtB;
$CeG.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 16;
	}
	,$vO: function(dt) {
		if((this.$2L.$$H & 34) != 34) {
			return;
		}
		var sprite = this.$pO.$na[10];
		if(sprite != null) {
			var scale = this.$$k.$_P;
			var pos = this.$2L.$AI.$4C;
			var x = pos.$QC;
			var y = pos.$RC;
			var angle = this.$2L.$BI.$TD;
			if(this.$2L.$RE != 0) {
				var ratio = this.$$k.$6k;
				var invRatio = 1 - ratio;
				x = x * ratio + this.$Il * invRatio;
				y = y * ratio + this.$Jl * invRatio;
				angle = angle * ratio + this.$Kl * invRatio;
			}
			sprite.$QC.set__(scale * x + this.$Ll);
			sprite.$RC.set__(scale * y + this.$Ml);
			sprite.$FP.set__(angle * 180 / 3.141592653589793);
		}
	}
	,$rO: function() {
		var entity = this.$pO.$gB;
		var rootEntity = this.$$k.$pO;
		while(entity != rootEntity && entity != null) {
			var sprite = entity.$na[10];
			if(sprite != null) {
				this.$Ll -= sprite.$QC.$Lb;
				this.$Ml -= sprite.$RC.$Lb;
			}
			entity = entity.$gB;
		}
		var sprite = this.$pO.$na[10];
		if(sprite != null) {
			var pos = this.$2L.$AI.$4C;
			pos.$QC = (sprite.$QC.$Lb - this.$Ll) / this.$$k.$_P;
			pos.$RC = (sprite.$RC.$Lb - this.$Ml) / this.$$k.$_P;
			this.$2L.$HH(pos,sprite.$FP.$Lb * 3.141592653589793 / 180);
		}
		this.$Dl();
	}
	,dispose: function() {
		var _gthis = this;
		$CtB.prototype.dispose.call(this);
		this.$2L.$ZI = null;
		var snapshot = this.$2L;
		this.$2L = null;
		this.$$k.$Vb(function() {
			_gthis.$$k.$vk.$CK(snapshot);
		});
	}
	,$Dl: function() {
		if(this.$2L.$RE != 0) {
			var pos = this.$2L.$AI.$4C;
			this.$Il = pos.$QC;
			this.$Jl = pos.$RC;
			this.$Kl = this.$2L.$BI.$TD;
		}
	}
	,__class__: $CeG
});
var $CfG = function() {
	this.$Sl = false;
};
$hxClasses["$CfG"] = $CfG;
$CfG.__name__ = "$CfG";
$CfG.__interfaces__ = [$CkE];
$CfG.prototype = {
	dispose: function() {
		if(!this.$Sl) {
			this.$Sl = true;
			this.$Ql();
		}
	}
	,$Ql: function() {
	}
	,__class__: $CfG
};
var $CgG = function(platform,manifest) {
	this.$hl = 0;
	var _gthis = this;
	this.$Vl = manifest;
	this.$Gc = platform;
	this.$_Z = new $CKJ();
	this.$zd = new $ChG(manifest,this);
	this.$gl = new $CcC();
	var entries = $CE.$Q(manifest);
	if(entries.length == 0) {
		this.$dl();
	} else {
		var groups = new $CcC();
		var _g = 0;
		while(_g < entries.length) {
			var entry = entries[_g];
			++_g;
			var group = groups.h[entry.$CP];
			if(group == null) {
				group = [];
				groups.h[entry.$CP] = group;
			}
			group.push(entry);
		}
		this.$fl = $CE.$c(groups);
		var h = groups.h;
		var group_keys = Object.keys(h);
		var group_length = group_keys.length;
		var group_current = 0;
		while(group_current < group_length) {
			var group = [h[group_keys[group_current++]]];
			this.$Xl(group[0],(function(group) {
				return function(bestEntry) {
					if(bestEntry != null) {
						_gthis.$gl.h[bestEntry.$CP] = new $CiG(0,bestEntry.$Bd);
						var url = manifest.$Ed(bestEntry);
						try {
							_gthis.$Yl(url,bestEntry);
						} catch( _g ) {
							var _g1 = haxe_Exception.caught(_g).unwrap();
							_gthis.$el(bestEntry,"Unexpected error: " + $CG.$1(_g1));
						}
					} else {
						var badEntry = group[0][0];
						_gthis.$gl.h[badEntry.$CP] = new $CiG(0,0);
						switch(badEntry.$Ad._hx_index) {
						case 8:case 9:case 10:case 11:case 12:
							_gthis.$bl(badEntry,$C7G.$Zm());
							break;
						case 18:case 19:
							_gthis.$bl(badEntry,$CCH.$Zm());
							break;
						default:
							_gthis.$el(badEntry,"Could not find a supported format to load");
						}
					}
				};
			})(group));
		}
	}
};
$hxClasses["$CgG"] = $CgG;
$CgG.__name__ = "$CgG";
$CgG.prototype = {
	$Xl: function(entries,fn) {
		this.$Zl(function(formats) {
			var _g = 0;
			while(_g < formats.length) {
				var format = formats[_g++];
				var _g1 = 0;
				while(_g1 < entries.length) {
					var entry = entries[_g1];
					++_g1;
					if(entry.$Ad == format) {
						fn(entry);
						return;
					}
				}
			}
			fn(null);
		});
	}
	,$Yl: function(url,entry) {
	}
	,$Zl: function(fn) {
	}
	,$bl: function(entry,asset) {
		if(this.$zd.$nl) {
			asset.dispose();
			return;
		}
		var load = this.$gl.h[entry.$CP];
		load.$XP = load.$ql;
		var map;
		switch(entry.$Ad._hx_index) {
		case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:
			map = this.$zd.$jl;
			break;
		case 8:case 9:case 10:case 11:case 12:
			map = this.$zd.$ci;
			break;
		case 13:case 14:case 15:case 16:
			map = this.$zd.$ll;
			break;
		case 17:case 18:case 19:case 20:
			map = this.$zd.$ml;
			break;
		case 21:
			map = this.$zd.$kl;
			break;
		}
		map.h[entry.$CP] = asset;
		this.$fl -= 1;
		if(this.$fl == 0) {
			this.$dl();
		}
	}
	,$cl: function(entry,bytesLoaded,bytesTotal) {
		var load = this.$gl.h[entry.$CP];
		if(bytesTotal > 0) {
			load.$ql = bytesTotal;
		}
		var b = load.$ql;
		load.$XP = bytesLoaded < b ? bytesLoaded : b;
		var sumLoaded = 0;
		var sumTotal = 0;
		var h = this.$gl.h;
		var load_keys = Object.keys(h);
		var load_length = load_keys.length;
		var load_current = 0;
		while(load_current < load_length) {
			var load = h[load_keys[load_current++]];
			if(load.$ql == 0) {
				return;
			}
			sumLoaded += load.$XP;
			sumTotal += load.$ql;
		}
		var progress = sumTotal > 0 ? sumLoaded / sumTotal : 0;
		if(progress != this.$hl) {
			this.$hl = progress;
			this.$_Z.$52(progress);
		}
	}
	,$dl: function() {
		var atlasFile = this.$zd.getFile("_2DKit/atlas.json",false);
		if(atlasFile != null) {
			var atlasJson = atlasFile.toJson();
			var _this = this.$zd.$kl;
			if(Object.prototype.hasOwnProperty.call(_this.h,"_2DKit/atlas.json")) {
				delete(_this.h["_2DKit/atlas.json"]);
			}
			atlasFile.dispose();
			var _g = 0;
			var _g1 = atlasJson.textures;
			while(_g < _g1.length) {
				var textureJson = _g1[_g];
				++_g;
				var textureName = "_2DKit/" + textureJson.name;
				var texture = this.$zd.getTexture(textureName);
				var _this = this.$zd.$jl;
				if(Object.prototype.hasOwnProperty.call(_this.h,textureName)) {
					delete(_this.h[textureName]);
				}
				var _g2 = 0;
				var _g3 = textureJson.regions;
				while(_g2 < _g3.length) {
					var regionJson = _g3[_g2];
					++_g2;
					var regionTexture = texture.subTexture(regionJson.x,regionJson.y,regionJson.width,regionJson.height);
					this.$zd.$jl.h[regionJson.name] = regionTexture;
				}
			}
		}
		this.$_Z.$22(this.$zd);
	}
	,$el: function(entry,message) {
		this.$zd.dispose();
		this.$_Z.$12($CNJ.$M3(message,["url",entry.$_c]));
	}
	,__class__: $CgG
};
var $ChG = function(manifest,loader) {
	this.$nl = false;
	this.$ml = new $CcC();
	this.$ll = new $CcC();
	this.$kl = new $CcC();
	this.$ci = new $CcC();
	this.$jl = new $CcC();
	this.$ol = manifest;
};
$hxClasses["$ChG"] = $ChG;
$ChG.__name__ = "$ChG";
$ChG.__interfaces__ = [$CKE];
$ChG.prototype = {
	getTexture: function(name,required) {
		if(required == null) {
			required = true;
		}
		return this.$jl.h[name];
	}
	,getSound: function(name,required) {
		if(required == null) {
			required = true;
		}
		return this.$ci.h[name];
	}
	,getFile: function(name,required) {
		if(required == null) {
			required = true;
		}
		return this.$kl.h[name];
	}
	,getVectorFont: function(name,required) {
		if(required == null) {
			required = true;
		}
		return this.$ll.h[name];
	}
	,getVideo: function(name,required) {
		if(required == null) {
			required = true;
		}
		return this.$ml.h[name];
	}
	,dispose: function() {
		if(!this.$nl) {
			this.$nl = true;
			var h = this.$jl.h;
			var texture_keys = Object.keys(h);
			var texture_length = texture_keys.length;
			var texture_current = 0;
			while(texture_current < texture_length) h[texture_keys[texture_current++]].dispose();
			this.$jl = null;
			var h = this.$ci.h;
			var sound_keys = Object.keys(h);
			var sound_length = sound_keys.length;
			var sound_current = 0;
			while(sound_current < sound_length) h[sound_keys[sound_current++]].dispose();
			this.$ci = null;
			var h = this.$kl.h;
			var file_keys = Object.keys(h);
			var file_length = file_keys.length;
			var file_current = 0;
			while(file_current < file_length) h[file_keys[file_current++]].dispose();
			this.$kl = null;
			var h = this.$ll.h;
			var font_keys = Object.keys(h);
			var font_length = font_keys.length;
			var font_current = 0;
			while(font_current < font_length) h[font_keys[font_current++]].dispose();
			this.$ll = null;
			var h = this.$ml.h;
			var video_keys = Object.keys(h);
			var video_length = video_keys.length;
			var video_current = 0;
			while(video_current < video_length) h[video_keys[video_current++]].dispose();
			this.$ml = null;
		}
	}
	,__class__: $ChG
};
var $CiG = function(loaded,total) {
	this.$XP = loaded;
	this.$ql = total;
};
$hxClasses["$CiG"] = $CiG;
$CiG.__name__ = "$CiG";
$CiG.prototype = {
	__class__: $CiG
};
var $CjG = function(content) {
	$CfG.call(this);
	this.$dd = content;
};
$hxClasses["$CjG"] = $CjG;
$CjG.__name__ = "$CjG";
$CjG.__interfaces__ = [$CmE];
$CjG.__super__ = $CfG;
$CjG.prototype = $extend($CfG.prototype,{
	toString: function() {
		return this.$dd;
	}
	,toJson: function() {
		return JSON.parse(this.toString());
	}
	,toXml: function() {
		return $CL.$vB(this.toString());
	}
	,$Ql: function() {
		this.$dd = null;
	}
	,__class__: $CjG
});
var $CkG = function() { };
$hxClasses["$CkG"] = $CkG;
$CkG.__name__ = "$CkG";
$CkG.__isInterface__ = true;
$CkG.prototype = {
	__class__: $CkG
};
var $ClG = function() {
	this.down = new $CaE();
	this.up = new $CaE();
	this.backButton = new $CZE();
	this.$ul = new $CUC();
};
$hxClasses["$ClG"] = $ClG;
$ClG.__name__ = "$ClG";
$ClG.__interfaces__ = [$CkG];
$ClG.prototype = {
	$sl: function(keyCode) {
		if(keyCode == 16777238) {
			if(this.backButton.$bb != null) {
				this.backButton.$fb();
				return true;
			}
			return false;
		}
		if(!this.$ul.h.hasOwnProperty(keyCode)) {
			this.$ul.h[keyCode] = true;
			$ClG.$vl.$3g($ClG.$vl.$AC + 1,$CPH.$Ho(keyCode));
			this.down.$fb($ClG.$vl);
		}
		return true;
	}
	,$tl: function(keyCode) {
		if(this.$ul.h.hasOwnProperty(keyCode)) {
			this.$ul.remove(keyCode);
			$ClG.$vl.$3g($ClG.$vl.$AC + 1,$CPH.$Ho(keyCode));
			this.up.$fb($ClG.$vl);
		}
	}
	,__class__: $ClG
};
var $CmG = function() { };
$hxClasses["$CmG"] = $CmG;
$CmG.__name__ = "$CmG";
$CmG.__isInterface__ = true;
$CmG.prototype = {
	__class__: $CmG
	,__properties__: {set_cursor:"set_cursor",get_cursor:"get_cursor"}
};
var $CnG = function(pointer) {
	this.$va = pointer;
	this.$Dh = kit_input_EventSource.Mouse($CnG.$vl);
	this.down = new $CaE();
	this.move = new $CaE();
	this.up = new $CaE();
	this.scroll = new $CaE();
	this.$ke = 0;
	this.$le = 0;
	this.$yl = kit_input_MouseCursor.Default;
	this.$zl = new $CUC();
};
$hxClasses["$CnG"] = $CnG;
$CnG.__name__ = "$CnG";
$CnG.__interfaces__ = [$CmG];
$CnG.prototype = {
	get_cursor: function() {
		return this.$yl;
	}
	,set_cursor: function(cursor) {
		return this.$yl = cursor;
	}
	,$sl: function(viewX,viewY,buttonCode) {
		if(!this.$zl.h.hasOwnProperty(buttonCode)) {
			this.$zl.h[buttonCode] = true;
			this.$NR(viewX,viewY,$CSH.$Zo(buttonCode));
			this.$va.$sl(viewX,viewY,this.$Dh);
			this.down.$fb($CnG.$vl);
		}
	}
	,$wl: function(viewX,viewY) {
		this.$NR(viewX,viewY,null);
		this.$va.$wl(viewX,viewY,this.$Dh);
		this.move.$fb($CnG.$vl);
	}
	,$tl: function(viewX,viewY,buttonCode) {
		if(this.$zl.h.hasOwnProperty(buttonCode)) {
			this.$zl.remove(buttonCode);
			this.$NR(viewX,viewY,$CSH.$Zo(buttonCode));
			this.$va.$tl(viewX,viewY,this.$Dh);
			this.up.$fb($CnG.$vl);
		}
	}
	,$xl: function(viewX,viewY,velocity) {
		this.$ke = viewX;
		this.$le = viewY;
		if(this.scroll.$bb == null) {
			return false;
		}
		this.scroll.$fb(velocity);
		return true;
	}
	,$NR: function(viewX,viewY,button) {
		this.$ke = viewX;
		this.$le = viewY;
		$CnG.$vl.$3g($CnG.$vl.$AC + 1,viewX,viewY,button);
	}
	,__class__: $CnG
	,__properties__: {set_cursor:"set_cursor",get_cursor:"get_cursor"}
};
var $CoG = function() { };
$hxClasses["$CoG"] = $CoG;
$CoG.__name__ = "$CoG";
$CoG.__isInterface__ = true;
$CoG.prototype = {
	__class__: $CoG
};
var $CpG = function(x,y,isDown) {
	if(isDown == null) {
		isDown = false;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.down = new $CaE();
	this.move = new $CaE();
	this.up = new $CaE();
	this.$ke = x;
	this.$le = y;
	this.$0l = isDown;
};
$hxClasses["$CpG"] = $CpG;
$CpG.__name__ = "$CpG";
$CpG.__interfaces__ = [$CoG];
$CpG.prototype = {
	$sl: function(viewX,viewY,source) {
		if(!$CpG.$1l) {
			$CpG.$1l = true;
		}
		if(this.$0l) {
			return;
		}
		this.$wl(viewX,viewY,source);
		this.$0l = true;
		var chain = [];
		var hit = $C6B.$GR($CcE.$cT,viewX,viewY);
		if(hit != null) {
			var entity = hit.$pO;
			while(true) {
				var sprite = entity.$na[10];
				if(sprite != null) {
					chain.push(sprite);
				}
				entity = entity.$gB;
				if(!(entity != null)) {
					break;
				}
			}
		}
		this.$NR(viewX,viewY,hit,source);
		var _g = 0;
		while(_g < chain.length) {
			chain[_g++].$kP($CpG.$vl);
			if($CpG.$vl.$Ch) {
				return;
			}
		}
		this.down.$fb($CpG.$vl);
	}
	,$wl: function(viewX,viewY,source) {
		if(viewX == this.$ke && viewY == this.$le) {
			return;
		}
		var chain = [];
		var hit = $C6B.$GR($CcE.$cT,viewX,viewY);
		if(hit != null) {
			var entity = hit.$pO;
			while(true) {
				var sprite = entity.$na[10];
				if(sprite != null) {
					chain.push(sprite);
				}
				entity = entity.$gB;
				if(!(entity != null)) {
					break;
				}
			}
		}
		this.$NR(viewX,viewY,hit,source);
		var _g = 0;
		while(_g < chain.length) {
			chain[_g++].$5Q($CpG.$vl);
			if($CpG.$vl.$Ch) {
				return;
			}
		}
		this.move.$fb($CpG.$vl);
	}
	,$tl: function(viewX,viewY,source) {
		if(!this.$0l) {
			return;
		}
		this.$wl(viewX,viewY,source);
		this.$0l = false;
		var chain = [];
		var hit = $C6B.$GR($CcE.$cT,viewX,viewY);
		if(hit != null) {
			var entity = hit.$pO;
			while(true) {
				var sprite = entity.$na[10];
				if(sprite != null) {
					chain.push(sprite);
				}
				entity = entity.$gB;
				if(!(entity != null)) {
					break;
				}
			}
		}
		this.$NR(viewX,viewY,hit,source);
		var _g = 0;
		while(_g < chain.length) {
			chain[_g++].$lP($CpG.$vl);
			if($CpG.$vl.$Ch) {
				return;
			}
		}
		this.up.$fb($CpG.$vl);
	}
	,$NR: function(viewX,viewY,hit,source) {
		this.$ke = viewX;
		this.$le = viewY;
		$CpG.$vl.$3g($CpG.$vl.$AC + 1,viewX,viewY,hit,source);
	}
	,__class__: $CpG
};
var $CqG = function() { };
$hxClasses["$CqG"] = $CqG;
$CqG.__name__ = "$CqG";
$CqG.__isInterface__ = true;
$CqG.__interfaces__ = [$CmF];
$CqG.prototype = {
	__class__: $CqG
};
var $CrG = function(root,width,height) {
	this.$le = 0;
	this.$ke = 0;
	this.$4l = null;
	this.$3l = 0;
	this.$2l = 0;
	$CfG.call(this);
	this.$cT = root;
	this.$ze = width;
	this.$mT = height;
};
$hxClasses["$CrG"] = $CrG;
$CrG.__name__ = "$CrG";
$CrG.__interfaces__ = [$CqG];
$CrG.__super__ = $CfG;
$CrG.prototype = $extend($CfG.prototype,{
	subTexture: function(x,y,width,height) {
		var sub = this.$cT.createTexture(width,height);
		sub.$4l = this;
		sub.$ke = x;
		sub.$le = y;
		sub.$2l = this.$2l + x;
		sub.$3l = this.$3l + y;
		return sub;
	}
	,clear: function() {
		this.$cT.clear();
	}
	,renderFilter: function(filter,width,height) {
		this.$cT.renderFilter(filter,width,height);
	}
	,get_graphics: function() {
		return this.$cT.getGraphics();
	}
	,$Ql: function() {
		if(this.$4l == null) {
			this.$cT.dispose();
		}
	}
	,get_width: function() {
		return this.$ze;
	}
	,get_height: function() {
		return this.$mT;
	}
	,__class__: $CrG
	,__properties__: {get_height:"get_height",get_width:"get_width",get_graphics:"get_graphics"}
});
var $CsG = function() { };
$hxClasses["$CsG"] = $CsG;
$CsG.__name__ = "$CsG";
$CsG.__isInterface__ = true;
$CsG.prototype = {
	__class__: $CsG
};
var $CtG = function(pointer,maxPoints) {
	if(maxPoints == null) {
		maxPoints = 4;
	}
	this.$va = pointer;
	this.$6l = maxPoints;
	this.$7l = new $CUC();
	this.$8e = [];
	this.down = new $CaE();
	this.move = new $CaE();
	this.up = new $CaE();
};
$hxClasses["$CtG"] = $CtG;
$CtG.__name__ = "$CtG";
$CtG.__interfaces__ = [$CsG];
$CtG.prototype = {
	$sl: function(id,viewX,viewY) {
		if(!this.$7l.h.hasOwnProperty(id)) {
			var point = new $C4F(id);
			point.$3g(viewX,viewY);
			this.$7l.h[id] = point;
			this.$8e.push(point);
			if(this.$5l == null) {
				this.$5l = point;
				this.$va.$sl(viewX,viewY,point.$Dh);
			}
			this.down.$fb(point);
		}
	}
	,$wl: function(id,viewX,viewY) {
		var point = this.$7l.h[id];
		if(point != null) {
			point.$3g(viewX,viewY);
			if(this.$5l == point) {
				this.$va.$wl(viewX,viewY,point.$Dh);
			}
			this.move.$fb(point);
		}
	}
	,$tl: function(id,viewX,viewY) {
		var point = this.$7l.h[id];
		if(point != null) {
			point.$3g(viewX,viewY);
			this.$7l.remove(id);
			HxOverrides.remove(this.$8e,point);
			if(this.$5l == point) {
				this.$5l = null;
				this.$va.$tl(viewX,viewY,point.$Dh);
			}
			this.up.$fb(point);
		}
	}
	,__class__: $CtG
};
var $CuG = function() { };
$hxClasses["$CuG"] = $CuG;
$CuG.__name__ = "$CuG";
$CuG.main = function() {
	$CcE.$9b().$y2(function(_) {
		var startGame = function() {
			$CcE.$cT.$8(new $CRJ());
			$CcE.$cT.$Wa();
		};
		window.console.info("Built with 2DKit, http://2dkit.com");
		var splash = new $CUH();
		splash.$eo.$y2(function(_) {
			startGame();
		});
		$CcE.$Gc.$qa.$Jo.$rB(new $CRE().$8(splash));
	});
	$CcE.$Gc.$qa.$Ko();
};
var $CvG = function() { };
$hxClasses["$CvG"] = $CvG;
$CvG.__name__ = "$CvG";
$CvG.$jB = function(key) {
	return $CF.$j($C2C.$ME($CvG).injected[0],key);
};
var $CwG = function() {
	this.$Rm = new $CaC();
	this.$Qm = 0;
	this.$Pm = null;
	this.$Om = null;
	this.$Nm = Infinity;
	this.$Mm = 0;
};
$hxClasses["$CwG"] = $CwG;
$CwG.__name__ = "$CwG";
$CwG.__interfaces__ = [$CsB];
$CwG.prototype = {
	$Em: function(capacity) {
		this.$Nm = capacity;
		this.$Lm(true);
		return this;
	}
	,$Fm: function(disposer) {
		this.$Om = disposer;
		return this;
	}
	,$Gm: function(sizeCalculator) {
		this.$Pm = sizeCalculator;
		return this;
	}
	,$kB: function(key,value,evictLRU) {
		if(evictLRU == null) {
			evictLRU = true;
		}
		this.$lB(key);
		var size = this.$Pm != null ? this.$Pm(key,value) : 1;
		this.$Mm += size;
		this.$Lm(evictLRU);
		var item = new $CxG(key,value);
		item.$Sm = ++this.$Qm;
		item.$Tf = size;
		this.$Rm.set(key,item);
	}
	,$jB: function(key) {
		var item = this.$Rm.h[key.__id__];
		if(item == null) {
			return null;
		}
		item.$Sm = ++this.$Qm;
		return item.$bT;
	}
	,$Hm: function() {
		var lru = this.$Jm(true);
		if(lru != null) {
			return lru.$TC;
		} else {
			return null;
		}
	}
	,$Jm: function(lru) {
		var oldest = null;
		var item = this.$Rm.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			if(oldest == null || item1.$Sm < oldest.$Sm == lru) {
				oldest = item1;
			}
		}
		return oldest;
	}
	,$lB: function(key,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		var item = this.$Rm.h[key.__id__];
		if(item == null) {
			return null;
		}
		if(this.$Om != null && dispose) {
			this.$Om(key,item.$bT);
		}
		this.$Rm.remove(key);
		this.$Mm -= item.$Tf;
		return item.$bT;
	}
	,$Km: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		var snapshot = this.$Rm;
		this.$Rm = new $CaC();
		this.$Mm = 0;
		if(this.$Om != null && dispose) {
			var item = snapshot.iterator();
			while(item.hasNext()) {
				var item1 = item.next();
				this.$Om(item1.$TC,item1.$bT);
			}
		}
	}
	,dispose: function() {
		this.$Km();
	}
	,$Lm: function(evictLRU) {
		while(this.$Mm > this.$Nm) {
			var item = this.$Jm(evictLRU);
			if(item != null) {
				if(this.$Om != null) {
					this.$Om(item.$TC,item.$bT);
				}
				this.$Rm.remove(item.$TC);
				this.$Mm -= item.$Tf;
			} else {
				break;
			}
		}
	}
	,__class__: $CwG
};
var $CxG = function(key,value) {
	this.$Tf = 1;
	this.$Sm = 0;
	this.$TC = key;
	this.$bT = value;
};
$hxClasses["$CxG"] = $CxG;
$CxG.__name__ = "$CxG";
$CxG.prototype = {
	__class__: $CxG
};
var $CzG = function() { };
$hxClasses["$CzG"] = $CzG;
$CzG.__name__ = "$CzG";
$CzG.$Xm = function(cl,name) {
	while(true) {
		var __creator = cl.__creator;
		if(__creator != null) {
			var type = $CF.$j(__creator,name);
			if(type != null) {
				return type;
			}
		}
		var superClass = cl.__super__;
		if(superClass != null) {
			cl = superClass;
			continue;
		}
		return null;
	}
};
$CzG.$Td = function(type,value) {
	switch(type._hx_index) {
	case 0:
		return value;
	case 1:
		if(value != "0") {
			return value != "false";
		} else {
			return false;
		}
		break;
	case 2:
		var float = parseFloat(value);
		if(isNaN(float)) {
			return 0.0;
		} else {
			return float;
		}
		break;
	case 3:
		if(HxOverrides.cca(value,0) == 35) {
			value = "0x" + HxOverrides.substr(value,1,null);
		}
		var int = $CG.$3(value);
		if(int != null) {
			return int;
		} else {
			return 0;
		}
		break;
	case 5:
		var enumType = type.type;
		try {
			return Type.createEnum(enumType,value);
		} catch( _g ) {
			return null;
		}
		break;
	case 6:
		switch(type.type) {
		case Date:
			return new Date(parseFloat(value));
		case $CbE:
			var float = parseFloat(value);
			return new $CbE(isNaN(float) ? 0.0 : float);
		case $C5B:
			var point = new $C5B();
			var parts = value.split(",");
			if(parts.length >= 2) {
				point.$QC = parseFloat(parts[0]);
				point.$RC = parseFloat(parts[1]);
			}
			return point;
		case $C2E:
			var rect = new $C2E();
			var parts = value.split(",");
			if(parts.length >= 4) {
				rect.$QC = parseFloat(parts[0]);
				rect.$RC = parseFloat(parts[1]);
				rect.$IP = parseFloat(parts[2]);
				rect.$JP = parseFloat(parts[3]);
			}
			return rect;
		default:
		}
		break;
	default:
	}
	return null;
};
var $C6G = function() { };
$hxClasses["$C6G"] = $C6G;
$C6G.__name__ = "$C6G";
$C6G.__isInterface__ = true;
$C6G.__interfaces__ = [$CkE];
$C6G.prototype = {
	__class__: $C6G
};
var $C7G = function() {
	$CfG.call(this);
	this.$qj = new $C9G(this);
};
$hxClasses["$C7G"] = $C7G;
$C7G.__name__ = "$C7G";
$C7G.__interfaces__ = [$C6G];
$C7G.$Zm = function() {
	if($C7G.$am == null) {
		$C7G.$am = new $C7G();
	}
	return $C7G.$am;
};
$C7G.__super__ = $CfG;
$C7G.prototype = $extend($CfG.prototype,{
	play: function(volume) {
		if(volume == null) {
			volume = 1.0;
		}
		return this.$qj;
	}
	,loop: function(volume) {
		if(volume == null) {
			volume = 1.0;
		}
		return this.$qj;
	}
	,$Ql: function() {
	}
	,__class__: $C7G
});
var $C8G = function() { };
$hxClasses["$C8G"] = $C8G;
$C8G.__name__ = "$C8G";
$C8G.__isInterface__ = true;
$C8G.__interfaces__ = [$CsB];
$C8G.prototype = {
	__class__: $C8G
	,__properties__: {get_complete:"get_complete",set_paused:"set_paused"}
};
var $C9G = function(sound) {
	this.$bm = sound;
	this.volume = new $CbE(0);
	this.$cm = new $CVE(true);
};
$hxClasses["$C9G"] = $C9G;
$C9G.__name__ = "$C9G";
$C9G.__interfaces__ = [$C8G];
$C9G.prototype = {
	set_paused: function(paused) {
		return true;
	}
	,get_complete: function() {
		return this.$cm;
	}
	,dispose: function() {
	}
	,__class__: $C9G
	,__properties__: {set_paused:"set_paused",get_complete:"get_complete"}
};
var $CAH = function() {
	this.down = new $CaE();
	this.move = new $CaE();
	this.up = new $CaE();
};
$hxClasses["$CAH"] = $CAH;
$CAH.__name__ = "$CAH";
$CAH.__interfaces__ = [$CsG];
$CAH.prototype = {
	__class__: $CAH
};
var $CBH = function() { };
$hxClasses["$CBH"] = $CBH;
$CBH.__name__ = "$CBH";
$CBH.__isInterface__ = true;
$CBH.__interfaces__ = [$CkE];
$CBH.prototype = {
	__class__: $CBH
	,__properties__: {get_height:"get_height",get_width:"get_width"}
};
var $CCH = function() {
	$CfG.call(this);
	this.$qj = new $CEH(this);
};
$hxClasses["$CCH"] = $CCH;
$CCH.__name__ = "$CCH";
$CCH.__interfaces__ = [$CBH];
$CCH.$Zm = function() {
	if($CCH.$am == null) {
		$CCH.$am = new $CCH();
	}
	return $CCH.$am;
};
$CCH.__super__ = $CfG;
$CCH.prototype = $extend($CfG.prototype,{
	play: function(volume) {
		if(volume == null) {
			volume = 1.0;
		}
		return this.$qj;
	}
	,get_width: function() {
		return 1;
	}
	,get_height: function() {
		return 1;
	}
	,$Ql: function() {
	}
	,__class__: $CCH
	,__properties__: {get_height:"get_height",get_width:"get_width"}
});
var $CDH = function() { };
$hxClasses["$CDH"] = $CDH;
$CDH.__name__ = "$CDH";
$CDH.__isInterface__ = true;
$CDH.__interfaces__ = [$CsB];
$CDH.prototype = {
	__class__: $CDH
	,__properties__: {get_texture:"get_texture",get_video:"get_video"}
};
var $CEH = function(video) {
	this.$dm = video;
	this.volume = new $CbE(0);
	this.$cm = new $CVE(true);
	this.$0e = $CcE.$Gc.$wa.createTexture(1,1);
};
$hxClasses["$CEH"] = $CEH;
$CEH.__name__ = "$CEH";
$CEH.__interfaces__ = [$CDH];
$CEH.prototype = {
	get_video: function() {
		return this.$dm;
	}
	,get_texture: function() {
		return this.$0e;
	}
	,dispose: function() {
	}
	,__class__: $CEH
	,__properties__: {get_texture:"get_texture",get_video:"get_video"}
};
var $CGH = function() {
	this.$1Z = [];
};
$hxClasses["$CGH"] = $CGH;
$CGH.__name__ = "$CGH";
$CGH.__interfaces__ = [$CsB];
$CGH.prototype = {
	$he: function(dispatcher,type,listener) {
		dispatcher.addEventListener(type,listener,false);
		this.$1Z.push(new $CHH(dispatcher,type,listener));
	}
	,$fm: function(dispatcher,type,listener) {
		var _gthis = this;
		this.$he(dispatcher,type,function(event) {
			_gthis.dispose();
			listener(event);
		});
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.$1Z;
		while(_g < _g1.length) {
			var entry = _g1[_g];
			++_g;
			entry.$gm.removeEventListener(entry.$hI,entry.$hm,false);
		}
		this.$1Z = [];
	}
	,__class__: $CGH
};
var $CHH = function(dispatcher,type,listener) {
	this.$gm = dispatcher;
	this.$hI = type;
	this.$hm = listener;
};
$hxClasses["$CHH"] = $CHH;
$CHH.__name__ = "$CHH";
$CHH.prototype = {
	__class__: $CHH
};
var $CIH = function(width,height) {
	this.$jm = 0;
	this.$im = 0;
	var expandWidth = width + 150;
	var expandHeight = height + 150;
	this.$km = $CcE.$Gc.$wa.createTexture(expandWidth,expandHeight);
	this.$lm = $CcE.$Gc.$wa.createTexture(expandWidth,expandHeight);
	this.$ze = width;
	this.$mT = height;
};
$hxClasses["$CIH"] = $CIH;
$CIH.__name__ = "$CIH";
$CIH.prototype = {
	$Kf: function(width,height) {
		if(width > this.$km.get_width() || height > this.$km.get_height()) {
			var maxWidth = Math.max(this.$km.get_width(),width + 150) | 0;
			var maxHeight = Math.max(this.$km.get_height(),height + 150) | 0;
			this.$km.dispose();
			this.$lm.dispose();
			this.$km = $CcE.$Gc.$wa.createTexture(maxWidth,maxHeight);
			this.$lm = $CcE.$Gc.$wa.createTexture(maxWidth,maxHeight);
		} else {
			this.$km.clear();
			this.$lm.clear();
		}
		this.$ze = width;
		this.$mT = height;
	}
	,$mm: function(filter) {
		if(filter.$og != null) {
			if(!filter.$Pg) {
				filter.$kg("uTexture",this.$km);
			}
			filter.$Yg("uFilterPosition",this.$im,this.$jm);
			this.$lm.renderFilter(filter,this.$ze,this.$mT);
			var swap = this.$km;
			this.$km = this.$lm;
			this.$lm = swap;
		}
	}
	,__class__: $CIH
};
var $CMH = function() { };
$hxClasses["$CMH"] = $CMH;
$CMH.__name__ = "$CMH";
$CMH.__isInterface__ = true;
$CMH.__interfaces__ = [$C5E];
$CMH.prototype = {
	__class__: $CMH
};
var $CNH = function() { };
$hxClasses["$CNH"] = $CNH;
$CNH.__name__ = "$CNH";
$CNH.__isInterface__ = true;
$CNH.prototype = {
	__class__: $CNH
	,__properties__: {get_filterSupported:"get_filterSupported"}
};
var $COH = function() { };
$hxClasses["$COH"] = $COH;
$COH.__name__ = "$COH";
$COH.__isInterface__ = true;
$COH.__interfaces__ = [$CNH];
$COH.prototype = {
	__class__: $COH
};
var $CPH = function() { };
$hxClasses["$CPH"] = $CPH;
$CPH.__name__ = "$CPH";
$CPH.$Ho = function(keyCode) {
	switch(keyCode) {
	case 8:
		return kit_input_Key.Backspace;
	case 9:
		return kit_input_Key.Tab;
	case 13:
		return kit_input_Key.Enter;
	case 15:
		return kit_input_Key.Command;
	case 16:
		return kit_input_Key.Shift;
	case 17:
		return kit_input_Key.Control;
	case 18:
		return kit_input_Key.Alt;
	case 20:
		return kit_input_Key.CapsLock;
	case 27:
		return kit_input_Key.Escape;
	case 32:
		return kit_input_Key.Space;
	case 33:
		return kit_input_Key.PageUp;
	case 34:
		return kit_input_Key.PageDown;
	case 35:
		return kit_input_Key.End;
	case 36:
		return kit_input_Key.Home;
	case 37:
		return kit_input_Key.Left;
	case 38:
		return kit_input_Key.Up;
	case 39:
		return kit_input_Key.Right;
	case 40:
		return kit_input_Key.Down;
	case 45:
		return kit_input_Key.Insert;
	case 46:
		return kit_input_Key.Delete;
	case 48:
		return kit_input_Key.Number0;
	case 49:
		return kit_input_Key.Number1;
	case 50:
		return kit_input_Key.Number2;
	case 51:
		return kit_input_Key.Number3;
	case 52:
		return kit_input_Key.Number4;
	case 53:
		return kit_input_Key.Number5;
	case 54:
		return kit_input_Key.Number6;
	case 55:
		return kit_input_Key.Number7;
	case 56:
		return kit_input_Key.Number8;
	case 57:
		return kit_input_Key.Number9;
	case 65:
		return kit_input_Key.A;
	case 66:
		return kit_input_Key.B;
	case 67:
		return kit_input_Key.C;
	case 68:
		return kit_input_Key.D;
	case 69:
		return kit_input_Key.E;
	case 70:
		return kit_input_Key.F;
	case 71:
		return kit_input_Key.G;
	case 72:
		return kit_input_Key.H;
	case 73:
		return kit_input_Key.I;
	case 74:
		return kit_input_Key.J;
	case 75:
		return kit_input_Key.K;
	case 76:
		return kit_input_Key.L;
	case 77:
		return kit_input_Key.M;
	case 78:
		return kit_input_Key.N;
	case 79:
		return kit_input_Key.O;
	case 80:
		return kit_input_Key.P;
	case 81:
		return kit_input_Key.Q;
	case 82:
		return kit_input_Key.R;
	case 83:
		return kit_input_Key.S;
	case 84:
		return kit_input_Key.T;
	case 85:
		return kit_input_Key.U;
	case 86:
		return kit_input_Key.V;
	case 87:
		return kit_input_Key.W;
	case 88:
		return kit_input_Key.X;
	case 89:
		return kit_input_Key.Y;
	case 90:
		return kit_input_Key.Z;
	case 96:
		return kit_input_Key.Numpad0;
	case 97:
		return kit_input_Key.Numpad1;
	case 98:
		return kit_input_Key.Numpad2;
	case 99:
		return kit_input_Key.Numpad3;
	case 100:
		return kit_input_Key.Numpad4;
	case 101:
		return kit_input_Key.Numpad5;
	case 102:
		return kit_input_Key.Numpad6;
	case 103:
		return kit_input_Key.Numpad7;
	case 104:
		return kit_input_Key.Numpad8;
	case 105:
		return kit_input_Key.Numpad9;
	case 106:
		return kit_input_Key.NumpadMultiply;
	case 107:
		return kit_input_Key.NumpadAdd;
	case 108:
		return kit_input_Key.NumpadEnter;
	case 109:
		return kit_input_Key.NumpadSubtract;
	case 110:
		return kit_input_Key.NumpadDecimal;
	case 111:
		return kit_input_Key.NumpadDivide;
	case 112:
		return kit_input_Key.F1;
	case 113:
		return kit_input_Key.F2;
	case 114:
		return kit_input_Key.F3;
	case 115:
		return kit_input_Key.F4;
	case 116:
		return kit_input_Key.F5;
	case 117:
		return kit_input_Key.F6;
	case 118:
		return kit_input_Key.F7;
	case 119:
		return kit_input_Key.F8;
	case 120:
		return kit_input_Key.F9;
	case 121:
		return kit_input_Key.F10;
	case 122:
		return kit_input_Key.F11;
	case 123:
		return kit_input_Key.F12;
	case 186:
		return kit_input_Key.Semicolon;
	case 187:
		return kit_input_Key.Equals;
	case 188:
		return kit_input_Key.Comma;
	case 189:
		return kit_input_Key.Minus;
	case 190:
		return kit_input_Key.Period;
	case 191:
		return kit_input_Key.Slash;
	case 192:
		return kit_input_Key.Backquote;
	case 219:
		return kit_input_Key.LeftBracket;
	case 220:
		return kit_input_Key.Backslash;
	case 221:
		return kit_input_Key.RightBracket;
	case 222:
		return kit_input_Key.Quote;
	case 16777234:
		return kit_input_Key.Menu;
	case 16777247:
		return kit_input_Key.Search;
	}
	return kit_input_Key.Unknown(keyCode);
};
var $CQH = function() {
	this.$Po = 0;
	this.$No = null;
	this.$Jo = new $CRE();
	this.$Oo = [];
};
$hxClasses["$CQH"] = $CQH;
$CQH.__name__ = "$CQH";
$CQH.$Qo = function(entity,dt) {
	if(!entity.$rI) {
		return;
	}
	var speed = entity.$na[9];
	if(speed != null) {
		speed.$Pc = dt;
		dt *= speed.$_P.$Lb;
		if(dt <= 0) {
			speed.$vO(dt);
			return;
		}
	}
	var p = entity.$Ga;
	while(p != null) {
		var next = p.next;
		if((p.$4O & 1) == 0) {
			p.$4O |= 1;
			p.$3O();
			p.$tO();
		}
		p.$vO(dt);
		p = next;
	}
	var p = entity.$pB;
	while(p != null) {
		var next = p.next;
		$CQH.$Qo(p,dt);
		p = next;
	}
};
$CQH.prototype = {
	$3g: function() {
		if($CvG.$jB("scaleMode") == 1) {
			var viewport = new $C6B();
			$CcE.$cT.$8(viewport);
			var width = $CvG.$jB("width");
			var height = $CvG.$jB("height");
			var overscanWidth = $CvG.$jB("maxWidth");
			var overscanHeight = $CvG.$jB("maxHeight");
			var layout = function() {
				var scale = Math.min($CcE.$Gc.$xa.get_width() / width,$CcE.$Gc.$xa.get_height() / height);
				viewport.$sQ($CcE.$Gc.$xa.get_width() / 2 - scale * width / 2,$CcE.$Gc.$xa.get_height() / 2 - scale * height / 2);
				viewport.$wQ(scale);
				if(overscanWidth * scale < $CcE.$Gc.$xa.get_width() || overscanHeight * scale < $CcE.$Gc.$xa.get_height()) {
					if(viewport.get_scissor() == null) {
						viewport.set_scissor(new $C2E());
					}
					viewport.get_scissor().$kB(width / 2 - overscanWidth / 2,height / 2 - overscanHeight / 2,overscanWidth,overscanHeight);
				} else {
					viewport.set_scissor(null);
				}
			};
			layout();
			$CcE.$Gc.$xa.resize.$eb(layout);
		}
	}
	,$5K: function(dt) {
		if(dt <= 0) {
			return;
		}
		if(dt > 0.5) {
			if(this.$Po <= 3) {
				++this.$Po;
				dt = 0.0166666666666666664;
			}
		} else {
			this.$Po = 0;
		}
		this.$Ko();
		var ii = 0;
		while(ii < this.$Oo.length) {
			var t = this.$Oo[ii];
			if(t == null || t.update(dt)) {
				this.$Oo.splice(ii,1);
			} else {
				++ii;
			}
		}
		$CcE.$8b.$5K(dt);
		$CQH.$Qo($CcE.$cT,dt);
		$CQH.$Qo(this.$Jo,dt);
	}
	,$Ko: function() {
		if(this.$No != null) {
			var snapshot = this.$No;
			this.$No = null;
			var _g = 0;
			while(_g < snapshot.length) snapshot[_g++]();
		}
	}
	,$JR: function(renderer) {
		var graphics = renderer.graphics;
		if(graphics != null) {
			renderer.willRender();
			$C6B.$KR($CcE.$cT,graphics,true);
			$C6B.$KR(this.$Jo,graphics,true);
			renderer.didRender();
		}
	}
	,$Lo: function(t) {
		this.$Oo.push(t);
	}
	,$Ac: function(fn) {
		if(this.$No == null) {
			this.$No = [fn];
		} else {
			this.$No.push(fn);
		}
	}
	,__class__: $CQH
};
var $CRH = function() { };
$hxClasses["$CRH"] = $CRH;
$CRH.__name__ = "$CRH";
$CRH.$Ro = function(verts,indices,centerX,centerY,radiusX,radiusY,edges) {
	if(edges < 3) {
		return false;
	}
	var angle = 0.0;
	var step = 2 * Math.PI / edges;
	var _g = 0;
	while(_g < edges) {
		var ii = _g++;
		var x = Math.cos(angle);
		var y = Math.sin(angle);
		angle += step;
		verts.push(radiusX * x + centerX);
		verts.push(radiusY * y + centerY);
		if(ii < edges - 1) {
			indices.push(0);
			indices.push(ii);
			indices.push(ii + 1);
		}
	}
	return true;
};
$CRH.$So = function(verts,indices,centerX,centerY,radius,startAngle,deltaAngle,edges) {
	if(edges < 3) {
		return false;
	}
	verts.push(centerX);
	verts.push(centerY);
	var angle = startAngle;
	var step = deltaAngle / edges;
	var _g = 0;
	var _g1 = edges + 1;
	while(_g < _g1) {
		var ii = _g++;
		var x = Math.cos(angle);
		var y = Math.sin(angle);
		angle += step;
		verts.push(radius * x + centerX);
		verts.push(radius * y + centerY);
		indices.push(0);
		indices.push(ii);
		indices.push(ii + 1);
	}
	return true;
};
$CRH.$To = function(verts,indices,centerX,centerY,radius,startAngle,deltaAngle,strokeWidth,edges) {
	var angle = startAngle;
	var step = deltaAngle / edges;
	var points = [];
	var _g = 0;
	var _g1 = edges + 1;
	while(_g < _g1) {
		++_g;
		var x = Math.cos(angle);
		var y = Math.sin(angle);
		angle += step;
		points.push(radius * x + centerX);
		points.push(radius * y + centerY);
	}
	return $CRH.$Vo(verts,indices,points,strokeWidth);
};
$CRH.$Uo = function(verts,indices,centerX,centerY,radiusX,radiusY,strokeWidth,edges) {
	var angle = 0.0;
	var step = 2 * Math.PI / edges;
	var points = [];
	var _g = 0;
	while(_g < edges) {
		++_g;
		var x = Math.cos(angle);
		var y = Math.sin(angle);
		angle += step;
		points.push(radiusX * x + centerX);
		points.push(radiusY * y + centerY);
	}
	points.push(radiusX + centerX);
	points.push(centerY);
	return $CRH.$Vo(verts,indices,points,strokeWidth);
};
$CRH.$Vo = function(verts,indices,points,thickness) {
	var ll = points.length;
	if(ll < 4) {
		return false;
	}
	var halfThickness = thickness / 2;
	var startX = points[0];
	var startY = points[1];
	var endX = points[ll - 2];
	var endY = points[ll - 1];
	var lastNormal = new $C5B(-(points[3] - startY),points[2] - startX);
	lastNormal.$PC();
	var lastNormalX = lastNormal.$QC;
	var lastNormalY = lastNormal.$RC;
	verts.push(startX - halfThickness * lastNormalX);
	verts.push(startY - halfThickness * lastNormalY);
	verts.push(startX + halfThickness * lastNormalX);
	verts.push(startY + halfThickness * lastNormalY);
	var indexCount = ll / 2 | 0;
	var ii = 2;
	while(ii < ll - 2) {
		var x = points[ii++];
		var y = points[ii++];
		var nextX = points[ii];
		var nextY = points[ii + 1];
		var nextNormal = new $C5B(-(nextY - y),nextX - x);
		nextNormal.$PC();
		var cornerNormal = new $C5B(nextNormal.$QC,nextNormal.$RC);
		cornerNormal.$8(lastNormalX,lastNormalY);
		cornerNormal.$PC();
		var dot = nextNormal.$dG(cornerNormal.$QC,cornerNormal.$RC);
		cornerNormal.$GC(halfThickness / dot);
		if(dot < 0.15) {
			var lastX = points[ii - 4];
			var lastY = points[ii - 3];
			if((x - lastX) * (nextY - lastY) - (y - lastY) * (nextX - lastX) < 0) {
				verts.push(x - cornerNormal.$QC);
				verts.push(y - cornerNormal.$RC);
				verts.push(x + lastNormalX * halfThickness);
				verts.push(y + lastNormalY * halfThickness);
				verts.push(x - cornerNormal.$QC);
				verts.push(y - cornerNormal.$RC);
				verts.push(x + nextNormal.$QC * halfThickness);
				verts.push(y + nextNormal.$RC * halfThickness);
			} else {
				verts.push(x - lastNormalX * halfThickness);
				verts.push(y - lastNormalY * halfThickness);
				verts.push(x + cornerNormal.$QC);
				verts.push(y + cornerNormal.$RC);
				verts.push(x - nextNormal.$QC * halfThickness);
				verts.push(y - nextNormal.$RC * halfThickness);
				verts.push(x + cornerNormal.$QC);
				verts.push(y + cornerNormal.$RC);
			}
			++indexCount;
		} else {
			verts.push(x - cornerNormal.$QC);
			verts.push(y - cornerNormal.$RC);
			verts.push(x + cornerNormal.$QC);
			verts.push(y + cornerNormal.$RC);
		}
		lastNormalX = nextNormal.$QC;
		lastNormalY = nextNormal.$RC;
	}
	verts.push(endX - halfThickness * lastNormalX);
	verts.push(endY - halfThickness * lastNormalY);
	verts.push(endX + halfThickness * lastNormalX);
	verts.push(endY + halfThickness * lastNormalY);
	var _g = 0;
	var _g1 = indexCount - 1;
	while(_g < _g1) {
		var ii2 = 2 * _g++;
		indices.push(ii2);
		indices.push(ii2 + 1);
		indices.push(ii2 + 2);
		indices.push(ii2 + 2);
		indices.push(ii2 + 3);
		indices.push(ii2 + 1);
	}
	return true;
};
$CRH.$Wo = function(points) {
	if(points.length < 6) {
		return null;
	}
	if($CRH.$Xo == null) {
		$CRH.$Xo = new $CPJ();
	}
	return $CRH.$Xo.$X3(points);
};
var $CSH = function() { };
$hxClasses["$CSH"] = $CSH;
$CSH.__name__ = "$CSH";
$CSH.$Zo = function(buttonCode) {
	switch(buttonCode) {
	case 0:
		return kit_input_MouseButton.Left;
	case 1:
		return kit_input_MouseButton.Middle;
	case 2:
		return kit_input_MouseButton.Right;
	}
	return kit_input_MouseButton.Unknown(buttonCode);
};
var $CUH = function() {
	this.$eo = new $CKJ();
	var _gthis = this;
	$CtB.call(this);
	var manifest = new $CnE();
	manifest.$8("Splash","https://d2r5kp6rl4cz9b.cloudfront.net/splash.png",null,kit_asset_AssetFormat.PNG);
	this.$XP = $CcE.$Gc.loadAssetPack(manifest);
	this.$eo.$y2(function(_) {
		_gthis.$pO.dispose();
	});
};
$hxClasses["$CUH"] = $CUH;
$CUH.__name__ = "$CUH";
$CUH.__super__ = $CtB;
$CUH.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 20;
	}
	,$tO: function() {
		var _gthis = this;
		var script = this.$pO.$na[11];
		if(script == null) {
			var tmp = this.$pO;
			script = new $C6I();
			tmp.$8(script);
		}
		var background = new $CbF(0,0,0);
		this.$pO.$rB(new $CRE().$8(background));
		var logo = null;
		var layout = function() {
			var width = $CcE.$Gc.$xa.get_width();
			var height = $CcE.$Gc.$xa.get_height();
			background.$Kf(width,height);
			if(logo != null) {
				logo.$sQ(width / 2,height / 2);
			}
		};
		layout();
		this.$yO($CcE.$Gc.$xa.resize,layout);
		this.$XP.$y2(function(pack) {
			_gthis.$1O(pack);
			logo = new $ChF(pack.getTexture("Splash")).$rQ();
			_gthis.$pO.$rB(new $CRE().$8(logo));
			layout();
			logo.$PQ.set__(0);
			script.$SP(new $C8I([new $C1I(logo.$PQ,1,1),new $C3I(1.5),new $C1I(logo.$PQ,0,0.5),new $C2I(function() {
				_gthis.$eo.$22(null);
			})]));
		}).$z2(function(_) {
			_gthis.$eo.$22(null);
		});
	}
	,__class__: $CUH
});
var $CXH = function() { };
$hxClasses["$CXH"] = $CXH;
$CXH.__name__ = "$CXH";
$CXH.__isInterface__ = true;
$CXH.prototype = {
	__class__: $CXH
};
var $CYH = function() { };
$hxClasses["$CYH"] = $CYH;
$CYH.__name__ = "$CYH";
$CYH.__isInterface__ = true;
$CYH.prototype = {
	__class__: $CYH
};
var $CaH = function(canvas,alpha) {
	this.$uo = new $CbH();
	this.$to = false;
	this.$so = canvas.getContext("2d",{ alpha : alpha});
};
$hxClasses["$CaH"] = $CaH;
$CaH.__name__ = "$CaH";
$CaH.__interfaces__ = [$CMH];
$CaH.prototype = {
	save: function() {
		var current = this.$uo;
		var state = this.$uo.next;
		if(state == null) {
			state = new $CbH();
			state.$cL = current;
			current.next = state;
		}
		state.$nk = current.$nk;
		state.$pk = current.$pk;
		state.$rk = current.$rk;
		state.$wo = current.$wo;
		state.$xo = current.$xo;
		this.$uo = state;
		this.$so.save();
	}
	,translate: function(x,y) {
		this.$so.translate(x | 0,y | 0);
	}
	,scale: function(x,y) {
		this.$so.scale(x,y);
	}
	,rotate: function(rotation) {
		this.$so.rotate(rotation * 3.141592653589793 / 180);
	}
	,transform: function(m00,m10,m01,m11,m02,m12) {
		this.$so.transform(m00,m10,m01,m11,m02,m12);
	}
	,restore: function() {
		this.$uo = this.$uo.$cL;
		this.$so.restore();
	}
	,$go: function(image,sourceX,sourceY,sourceW,sourceH) {
		var state = this.$uo;
		var color = (255 * state.$nk & 255) << 16 | (255 * state.$pk & 255) << 8 | 255 * state.$rk & 255;
		if($CaH.$vo == null) {
			$CaH.$vo = $C1H.$Jq(sourceW,sourceH);
		}
		$CaH.$vo.width = sourceW;
		$CaH.$vo.height = sourceH;
		var ctx = $CaH.$vo.getContext("2d",null);
		ctx.globalCompositeOperation = "copy";
		ctx.fillStyle = $C1H.$Pq(color);
		ctx.fillRect(0,0,sourceW,sourceH);
		ctx.globalCompositeOperation = "multiply";
		ctx.drawImage(image,sourceX,sourceY,sourceW,sourceH,0,0,sourceW,sourceH);
		ctx.globalCompositeOperation = "destination-atop";
		ctx.drawImage(image,sourceX,sourceY,sourceW,sourceH,0,0,sourceW,sourceH);
		return $CaH.$vo;
	}
	,drawTexture: function(texture,destX,destY) {
		this.drawSubTexture(texture,destX,destY,0,0,texture.get_width(),texture.get_height());
	}
	,drawSubTexture: function(texture,destX,destY,sourceX,sourceY,sourceW,sourceH) {
		if(this.$to) {
			this.$to = false;
			this.$so.globalCompositeOperation = "copy";
			this.drawSubTexture(texture,destX,destY,sourceX,sourceY,sourceW,sourceH);
			this.$so.globalCompositeOperation = "source-over";
			return;
		}
		var texture1 = texture;
		var root = texture1.$cT;
		var x = texture1.$2l + sourceX | 0;
		var y = texture1.$3l + sourceY | 0;
		var sourceW1 = sourceW | 0;
		var sourceH1 = sourceH | 0;
		destX = destX | 0;
		destY = destY | 0;
		var pixelScale = root.$Dd;
		if(this.$uo.$wo) {
			var tintCanvas = this.$go(root.$8d,x,y,sourceW1,sourceH1);
			this.$so.drawImage(tintCanvas,destX * pixelScale,destY * pixelScale,sourceW1 * pixelScale,sourceH1 * pixelScale);
		} else {
			this.$so.drawImage(root.$8d,x * pixelScale,y * pixelScale,sourceW1 * pixelScale,sourceH1 * pixelScale,destX,destY,sourceW1,sourceH1);
		}
	}
	,drawPattern: function(texture,x,y,width,height) {
		if(this.$to) {
			this.$to = false;
			this.$so.globalCompositeOperation = "copy";
			this.drawPattern(texture,x,y,width,height);
			this.$so.globalCompositeOperation = "source-over";
			return;
		}
		var state = this.$uo;
		var texture1 = texture;
		var pixelScale = texture1.$cT.$Dd;
		if(pixelScale != 1) {
			this.$so.save();
			this.$so.scale(1 / pixelScale,1 / pixelScale);
		}
		var x1 = x | 0;
		var y1 = y | 0;
		var width1 = width | 0;
		var height1 = height | 0;
		if(state.$xo) {
			this.$so.rect(x1,y1,width1,height1);
		} else {
			this.$so.fillStyle = this.$oo(texture1);
			this.$so.fillRect(x1,y1,width1 * pixelScale,height1 * pixelScale);
		}
		if(pixelScale != 1) {
			this.$so.restore();
		}
	}
	,fillRect: function(color,x,y,width,height) {
		if(this.$to) {
			this.$to = false;
			this.$so.globalCompositeOperation = "copy";
			this.fillRect(color,x,y,width,height);
			this.$so.globalCompositeOperation = "source-over";
			return;
		}
		var x1 = x | 0;
		var y1 = y | 0;
		var width1 = width | 0;
		var height1 = height | 0;
		if(this.$uo.$xo) {
			this.$so.rect(x1,y1,width1,height1);
		} else {
			this.$so.fillStyle = this.$no(color);
			this.$so.fillRect(x1,y1,width1,height1);
		}
	}
	,fillTriangles: function(color,verts,indices) {
		this.$to = false;
		this.$ho(verts,indices);
		this.$po(color);
	}
	,drawTriangles: function(texture,verts,indices,uvs) {
		this.$to = false;
		this.$ho(verts,indices);
		this.$qo(texture);
	}
	,$ho: function(verts,indices) {
		this.$so.beginPath();
		var ii = 0;
		var ll = indices.length;
		while(ii < ll) {
			var offset1 = 2 * indices[ii];
			var offset2 = 2 * indices[ii + 1];
			var offset3 = 2 * indices[ii + 2];
			ii += 3;
			this.$so.moveTo(verts[offset1],verts[offset1 + 1]);
			this.$so.lineTo(verts[offset2],verts[offset2 + 1]);
			this.$so.lineTo(verts[offset3],verts[offset3 + 1]);
		}
		this.$so.closePath();
	}
	,fillPolygon: function(color,points) {
		this.$to = false;
		this.$io(points);
		this.$po(color);
	}
	,drawPolygon: function(texture,points) {
		this.$to = false;
		this.$io(points);
		this.$qo(texture);
	}
	,$io: function(points) {
		this.$so.beginPath();
		var ii = 0;
		var ll = points.length;
		while(ii < ll) this.$so.lineTo(points[ii++],points[ii++]);
		this.$so.closePath();
	}
	,drawCircle: function(texture,centerX,centerY,radius,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$to = false;
		this.$jo(centerX,centerY,radius);
		this.$qo(texture);
	}
	,fillCircle: function(color,centerX,centerY,radius,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$to = false;
		this.$jo(centerX,centerY,radius);
		this.$po(color);
	}
	,strokeCircle: function(color,centerX,centerY,radius,strokeWidth,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$to = false;
		this.$jo(centerX,centerY,radius);
		this.$ro(color,strokeWidth);
	}
	,$jo: function(centerX,centerY,radius) {
		this.$so.beginPath();
		this.$so.arc(centerX,centerY,radius,0,6.28318530717958623);
		this.$so.closePath();
	}
	,drawEllipse: function(texture,centerX,centerY,radiusX,radiusY,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$to = false;
		this.$ko(centerX,centerY,radiusX,radiusY);
		this.$qo(texture);
	}
	,fillEllipse: function(color,centerX,centerY,radiusX,radiusY,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$to = false;
		this.$ko(centerX,centerY,radiusX,radiusY);
		this.$po(color);
	}
	,strokeEllipse: function(color,centerX,centerY,radiusX,radiusY,strokeWidth,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$to = false;
		this.$ko(centerX,centerY,radiusX,radiusY);
		this.$ro(color,strokeWidth);
	}
	,$ko: function(centerX,centerY,radiusX,radiusY) {
		var ox = radiusX * 0.5522848;
		var oy = radiusY * 0.5522848;
		var x = centerX - radiusX;
		var y = centerY - radiusY;
		var xe = centerX + radiusX;
		var ye = centerY + radiusY;
		this.$so.beginPath();
		this.$so.moveTo(x,centerY);
		this.$so.bezierCurveTo(x,centerY - oy,centerX - ox,y,centerX,y);
		this.$so.bezierCurveTo(centerX + ox,y,xe,centerY - oy,xe,centerY);
		this.$so.bezierCurveTo(xe,centerY + oy,centerX + ox,ye,centerX,ye);
		this.$so.bezierCurveTo(centerX - ox,ye,x,centerY + oy,x,centerY);
		this.$so.closePath();
	}
	,fillArc: function(color,centerX,centerY,radius,startAngle,angle,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$to = false;
		this.$so.beginPath();
		this.$so.moveTo(centerX,centerY);
		this.$so.arc(0,0,radius,startAngle * 3.141592653589793 / 180,(startAngle + angle) * 3.141592653589793 / 180);
		this.$po(color);
	}
	,strokeArc: function(color,centerX,centerY,radius,startAngle,angle,strokeWidth,edges) {
		if(edges == null) {
			edges = 50;
		}
		this.$to = false;
		this.$so.beginPath();
		this.$so.arc(centerX,centerX,radius,startAngle * 3.141592653589793 / 180,(startAngle + angle) * 3.141592653589793 / 180);
		this.$ro(color,strokeWidth);
	}
	,strokeLines: function(color,points,thickness) {
		this.$to = false;
		this.$lo(points);
		this.$so.lineWidth = thickness;
		this.$so.strokeStyle = this.$no(color);
		this.$so.stroke();
	}
	,drawLines: function(texture,points,thickness) {
		this.$to = false;
		this.$lo(points);
		this.$so.lineWidth = thickness;
		this.$so.strokeStyle = this.$oo(texture);
		this.$so.stroke();
	}
	,$lo: function(points) {
		this.$so.beginPath();
		if(points.length >= 2) {
			this.$so.moveTo(points[0],points[1]);
			var ii = 2;
			var ll = points.length;
			while(ii < ll) this.$so.lineTo(points[ii++],points[ii++]);
		}
	}
	,multiplyAlpha: function(factor) {
		this.$so.globalAlpha *= factor;
	}
	,setAlpha: function(alpha) {
		this.$so.globalAlpha = alpha;
	}
	,tint: function(red,green,blue) {
		var state = this.$uo;
		state.$nk *= red;
		state.$pk *= green;
		state.$rk *= blue;
		state.$wo = true;
	}
	,setBlendMode: function(blendMode) {
		var op;
		switch(blendMode._hx_index) {
		case 0:
			op = "source-over";
			break;
		case 1:
			op = "lighter";
			break;
		case 2:
			op = "multiply";
			break;
		case 3:
			op = "screen";
			break;
		case 4:
			op = "destination-in";
			break;
		case 5:
			op = "copy";
			break;
		}
		this.$so.globalCompositeOperation = op;
	}
	,beginMask: function() {
		var state = this.$uo;
		if(state.$xo) {
			this.endMask();
		}
		state.$xo = true;
		this.$so.beginPath();
	}
	,endMask: function() {
		var state = this.$uo;
		if(state.$xo) {
			state.$xo = false;
			this.$so.clip();
		}
	}
	,applyScissor: function(x,y,width,height) {
		this.$so.beginPath();
		this.$so.rect(x | 0,y | 0,width | 0,height | 0);
		this.$so.clip();
	}
	,willRender: function() {
		this.$to = true;
	}
	,didRender: function() {
	}
	,onResize: function(width,height) {
	}
	,$no: function(color) {
		var state = this.$uo;
		if(state.$wo) {
			color = (255 * (state.$nk * (color & 16711680) / 16711680) & 255) << 16 | (255 * (state.$pk * (color & 65280) / 65280) & 255) << 8 | 255 * (state.$rk * (color & 255) / 255) & 255;
		}
		return $C1H.$Pq(color);
	}
	,$oo: function(texture) {
		if(this.$uo.$wo) {
			var tintCanvas = this.$go(texture.$cT.$8d,texture.$2l,texture.$3l,texture.$ze,texture.$mT);
			return this.$so.createPattern(tintCanvas,"repeat");
		}
		return texture.$0o();
	}
	,$po: function(color) {
		if(!this.$uo.$xo) {
			this.$so.fillStyle = this.$no(color);
			this.$so.fill();
		}
	}
	,$qo: function(texture) {
		if(!this.$uo.$xo) {
			this.$so.fillStyle = this.$oo(texture);
			this.$so.fill();
		}
	}
	,$ro: function(color,strokeWidth) {
		if(!this.$uo.$xo) {
			this.$so.strokeStyle = this.$no(color);
			this.$so.lineWidth = strokeWidth;
			this.$so.stroke();
		}
	}
	,__class__: $CaH
};
var $CbH = function() {
	this.next = null;
	this.$cL = null;
	this.$xo = false;
	this.$wo = false;
	this.$rk = 1;
	this.$pk = 1;
	this.$nk = 1;
};
$hxClasses["$CbH"] = $CbH;
$CbH.__name__ = "$CbH";
$CbH.prototype = {
	__class__: $CbH
};
var $CcH = function(canvas) {
	this.graphics = new $CaH(canvas,false);
	this.$zo = new $CVE(true);
};
$hxClasses["$CcH"] = $CcH;
$CcH.__name__ = "$CcH";
$CcH.__interfaces__ = [$COH];
$CcH.prototype = {
	get_filterSupported: function() {
		return false;
	}
	,createTextureFromImage: function(image,format,pixelScale) {
		if(pixelScale == null) {
			pixelScale = 1;
		}
		var root = new $CeH(image,pixelScale);
		return root.createTexture(root.$3o / pixelScale,root.$4o / pixelScale);
	}
	,createTexture: function(width,height,format,pixelScale) {
		if(pixelScale == null) {
			pixelScale = 1;
		}
		return this.createTextureFromImage($C1H.$Jq(width,height),null,pixelScale);
	}
	,createSystemFont: function(name) {
		return new $C2H(name);
	}
	,getTextureAssetFormats: function() {
		return [];
	}
	,willRender: function() {
		this.graphics.willRender();
	}
	,didRender: function() {
		this.graphics.didRender();
	}
	,__class__: $CcH
	,__properties__: {get_filterSupported:"get_filterSupported"}
};
var $CdH = function(root,width,height) {
	this.$2o = 0;
	this.$1o = null;
	$CrG.call(this,root,width,height);
};
$hxClasses["$CdH"] = $CdH;
$CdH.__name__ = "$CdH";
$CdH.__super__ = $CrG;
$CdH.prototype = $extend($CrG.prototype,{
	$0o: function() {
		if(this.$2o != this.$cT.$5o || this.$1o == null) {
			this.$2o = this.$cT.$5o;
			this.$1o = this.$cT.$7o(this.$2l,this.$3l,this.$ze,this.$mT);
		}
		return this.$1o;
	}
	,__class__: $CdH
});
var $CeH = function(image,pixelScale) {
	this.$9o = null;
	this.$5o = 0;
	$CfG.call(this);
	this.$8d = image;
	this.$3o = image.width;
	this.$4o = image.height;
	this.$Dd = pixelScale;
	this.$IP = this.$3o / pixelScale;
	this.$JP = this.$4o / pixelScale;
};
$hxClasses["$CeH"] = $CeH;
$CeH.__name__ = "$CeH";
$CeH.__interfaces__ = [$CXH];
$CeH.__super__ = $CfG;
$CeH.prototype = $extend($CfG.prototype,{
	createTexture: function(width,height) {
		return new $CdH(this,Math.ceil(width),Math.ceil(height));
	}
	,getGraphics: function() {
		if(this.$9o == null) {
			this.$8o();
			this.$9o = new $CfH(this);
		}
		return this.$9o;
	}
	,clear: function() {
		var ctx = this.$8o();
		ctx.save();
		ctx.setTransform(1,0,0,1,0,0);
		ctx.clearRect(0,0,this.$8d.width,this.$8d.height);
		ctx.restore();
	}
	,renderFilter: function(filter,width,height) {
	}
	,$7o: function(x,y,width,height) {
		var ctx2d = this.$8o();
		var source = this.$8d;
		if(x != 0 || y != 0 || width != this.$IP || height != this.$JP) {
			source = $C1H.$Jq(width,height);
			var crop = source.getContext("2d",null);
			crop.globalCompositeOperation = "copy";
			crop.drawImage(this.$8d,-x,-y);
		}
		return ctx2d.createPattern(source,"repeat");
	}
	,$8o: function() {
		if(!((this.$8d) instanceof HTMLCanvasElement)) {
			this.$8d = $C1H.$Kq(this.$8d);
		}
		return this.$8d.getContext("2d",null);
	}
	,$Ql: function() {
		URL.revokeObjectURL(this.$8d.src);
		this.$8d = null;
		this.$9o = null;
	}
	,__class__: $CeH
});
var $CfH = function(renderTarget) {
	$CaH.call(this,renderTarget.$8d,true);
	this.$$o = renderTarget;
};
$hxClasses["$CfH"] = $CfH;
$CfH.__name__ = "$CfH";
$CfH.__super__ = $CaH;
$CfH.prototype = $extend($CaH.prototype,{
	drawTexture: function(texture,x,y) {
		$CaH.prototype.drawTexture.call(this,texture,x,y);
		++this.$$o.$5o;
	}
	,drawSubTexture: function(texture,destX,destY,sourceX,sourceY,sourceW,sourceH) {
		$CaH.prototype.drawSubTexture.call(this,texture,destX,destY,sourceX,sourceY,sourceW,sourceH);
		++this.$$o.$5o;
	}
	,drawPattern: function(texture,x,y,width,height) {
		$CaH.prototype.drawPattern.call(this,texture,x,y,width,height);
		++this.$$o.$5o;
	}
	,fillRect: function(color,x,y,width,height) {
		$CaH.prototype.fillRect.call(this,color,x,y,width,height);
		++this.$$o.$5o;
	}
	,fillTriangles: function(color,verts,indices) {
		$CaH.prototype.fillTriangles.call(this,color,verts,indices);
		++this.$$o.$5o;
	}
	,drawTriangles: function(texture,verts,indices,uvs) {
		$CaH.prototype.drawTriangles.call(this,texture,verts,indices);
		++this.$$o.$5o;
	}
	,drawCircle: function(texture,centerX,centerY,radius,edges) {
		if(edges == null) {
			edges = 50;
		}
		$CaH.prototype.drawCircle.call(this,texture,centerX,centerY,radius,edges);
		++this.$$o.$5o;
	}
	,fillCircle: function(color,centerX,centerY,radius,edges) {
		if(edges == null) {
			edges = 50;
		}
		$CaH.prototype.fillCircle.call(this,color,centerX,centerY,radius,edges);
		++this.$$o.$5o;
	}
	,drawEllipse: function(texture,centerX,centerY,radiusX,radiusY,edges) {
		if(edges == null) {
			edges = 50;
		}
		$CaH.prototype.drawEllipse.call(this,texture,centerX,centerY,radiusX,radiusY,edges);
		++this.$$o.$5o;
	}
	,fillEllipse: function(color,centerX,centerY,radiusX,radiusY,edges) {
		if(edges == null) {
			edges = 50;
		}
		$CaH.prototype.fillEllipse.call(this,color,centerX,centerY,radiusX,radiusY,edges);
		++this.$$o.$5o;
	}
	,strokeLines: function(color,points,thickness) {
		$CaH.prototype.strokeLines.call(this,color,points,thickness);
		++this.$$o.$5o;
	}
	,drawLines: function(texture,points,thickness) {
		$CaH.prototype.drawLines.call(this,texture,points,thickness);
		++this.$$o.$5o;
	}
	,__class__: $CfH
});
var $ChH = function(platform,manifest) {
	$CgG.call(this,platform,manifest);
};
$hxClasses["$ChH"] = $ChH;
$ChH.__name__ = "$ChH";
$ChH.$Ip = function(fn) {
	fn([kit_asset_AssetFormat.PNG,kit_asset_AssetFormat.JPG,kit_asset_AssetFormat.GIF]);
};
$ChH.$Jp = function() {
	var audio = window.document.createElement("audio");
	if(audio == null || audio.canPlayType == null) {
		return [];
	}
	var blacklist = new $CB("\\b(iPhone|iPod|iPad|Android)\\b","");
	var userAgent = $global.navigator.userAgent;
	if(!$CDI.get_supported() && blacklist.$D(userAgent)) {
		return [];
	}
	var types = [];
	types.push({ format : kit_asset_AssetFormat.OPUS, mimeType : "audio/ogg; codecs=opus"});
	types.push({ format : kit_asset_AssetFormat.M4A, mimeType : "audio/mp4; codecs=mp4a"});
	types.push({ format : kit_asset_AssetFormat.AV1, mimeType : "video/mp4; codecs=av01.0.15M.10"});
	if(!$C1H.$ch && !$C1H.$$p) {
		types.push({ format : kit_asset_AssetFormat.WEBM, mimeType : "video/webm"});
	}
	types.push({ format : kit_asset_AssetFormat.MOV, mimeType : "video/quicktime"});
	if(!$C1H.$_p) {
		types.push({ format : kit_asset_AssetFormat.MP3, mimeType : "audio/mpeg"});
		types.push({ format : kit_asset_AssetFormat.MP4, mimeType : "video/mp4"});
	}
	types.push({ format : kit_asset_AssetFormat.OGG, mimeType : "audio/ogg; codecs=vorbis"});
	types.push({ format : kit_asset_AssetFormat.WAV, mimeType : "audio/wav"});
	var result = [];
	var _g = 0;
	while(_g < types.length) {
		var type = types[_g];
		++_g;
		var canPlayType = "";
		try {
			canPlayType = audio.canPlayType(type.mimeType);
		} catch( _g1 ) {
		}
		if(canPlayType != "") {
			result.push(type.format);
		}
	}
	return result;
};
$ChH.$Kp = function(element) {
	var ref = ++$ChH.$Sp;
	if($ChH.$Rp == null) {
		$ChH.$Rp = new $CUC();
	}
	$ChH.$Rp.h[ref] = element;
	return ref;
};
$ChH.$Lp = function(ref) {
	$ChH.$Rp.remove(ref);
};
$ChH.__super__ = $CgG;
$ChH.prototype = $extend($CgG.prototype,{
	$Yl: function(url,entry) {
		var _gthis = this;
		switch(entry.$Ad._hx_index) {
		case 0:case 1:case 2:case 3:case 4:
			var image = window.document.createElement("img");
			var events = new $CGH();
			events.$fm(image,"load",function(_) {
				var texture = entry.$Ad == kit_asset_AssetFormat.JPG && !$C1H.$9p;
				var texture1 = _gthis.$Gc.getRenderer().createTextureFromImage(image,texture ? kit_display_TextureFormat.RGB : null,_gthis.$Vl.$Dd);
				_gthis.$bl(entry,texture1);
			});
			events.$fm(image,"error",function(_) {
				URL.revokeObjectURL(image.src);
				_gthis.$el(entry,"Failed to load image");
			});
			var dataUrl = HxOverrides.substr(url,0,"data:".length) == "data:";
			if(!dataUrl) {
				this.$Gp(url,entry,"blob",function(blob) {
					image.src = URL.createObjectURL(blob);
				});
			} else {
				image.crossOrigin = "";
				image.src = url;
			}
			break;
		case 8:case 9:case 10:case 11:case 12:
			if($CDI.get_supported()) {
				this.$Gp(url,entry,"arraybuffer",function(buffer) {
					_gthis.$bl(entry,new $CAI(buffer));
				});
			} else {
				var audio = window.document.createElement("audio");
				audio.preload = "auto";
				var ref = $ChH.$Kp(audio);
				var events = new $CGH();
				events.$fm(audio,"canplaythrough",function(_) {
					$ChH.$Lp(ref);
					_gthis.$bl(entry,new $CuH(audio));
				});
				events.$fm(audio,"error",function(_) {
					$ChH.$Lp(ref);
					var code = audio.error.code;
					if(code == 3 || code == 4) {
						_gthis.$bl(entry,$C7G.$Zm());
					} else {
						_gthis.$el(entry,"Failed to load audio: " + audio.error.code);
					}
				});
				events.$he(audio,"progress",function(_) {
					if(audio.buffered.length > 0 && audio.duration > 0) {
						var progress = audio.buffered.end(0) / audio.duration;
						_gthis.$cl(entry,progress * entry.$Bd | 0,entry.$Bd);
					}
				});
				audio.src = url;
				audio.load();
			}
			break;
		case 13:case 14:case 15:
			var loadFont = function(url) {
				var fontName = "_kit_font_" + $ChH.$Tp;
				++$ChH.$Tp;
				if(typeof(FontFace) != "undefined") {
					var fontFace = new FontFace(fontName,"url(" + url + ")",{ });
					fontFace.load().then(function(fontFace) {
						window.document.fonts.add(fontFace);
						_gthis.$bl(entry,new $C2H(fontName,fontFace,null,url));
					},function(error) {
						URL.revokeObjectURL(url);
						_gthis.$el(entry,error.message);
					});
				} else {
					var styleElement = window.document.createElement("style");
					styleElement.innerHTML = "@font-face{font-family:" + fontName + ";src:url(" + url + ");}";
					window.document.head.appendChild(styleElement);
					var canvas = window.document.createElement("canvas");
					var ctx = canvas.getContext("2d",null);
					ctx.font = "300px sans";
					var origWidth = ctx.measureText("BESbswy").width;
					ctx.font = "300px \"" + fontName + "\"";
					var _this = $CcE.$Gc;
					var startTime = Date.now() / 1000;
					var poll = null;
					poll = function() {
						var _this = $CcE.$Gc;
						var elapsed = Date.now() / 1000 - startTime;
						var newWidth = ctx.measureText("BESbswy").width;
						if(elapsed >= 5 || origWidth != newWidth) {
							_gthis.$bl(entry,new $C2H(fontName,null,styleElement,url));
						} else {
							$CcE.$Gc.$qa.$Ac(poll);
						}
					};
					$CcE.$Gc.$qa.$Ac(poll);
				}
			};
			loadFont(url);
			break;
		case 17:case 18:case 19:case 20:
			var loadVideo = function(url) {
				var video = window.document.createElement("video");
				video.crossOrigin = "";
				video.src = url;
				var ref = $ChH.$Kp(video);
				var events = new $CGH();
				events.$fm(video,"error",function(_) {
					$ChH.$Lp(ref);
					var code = video.error.code;
					_gthis.$el(entry,"Failed to load video: " + video.error.code);
				});
				if($C1H.$ch) {
					events.$fm(video,"loadeddata",function(_) {
						$ChH.$Lp(ref);
						_gthis.$bl(entry,new $C6H(video));
					});
					video.load();
				} else {
					video.muted = true;
					events.$fm(video,"timeupdate",function(_) {
						video.onpause = function() {
							video.onpause = null;
							video.currentTime = 0;
							video.muted = false;
							$ChH.$Lp(ref);
							_gthis.$bl(entry,new $C6H(video));
						};
						video.pause();
					});
					video.play();
				}
			};
			var isSafari = $C1H.$$p || $C1H.$ch;
			var isRemote = $CJ.$HB(url,"http://") || $CJ.$HB(url,"https://") || $CJ.$HB(url,"//");
			var willHaveMp4MimeType = false;
			var useBlob = isSafari && (isRemote || !willHaveMp4MimeType);
			if(useBlob) {
				this.$Gp(url,entry,"arraybuffer",function(buffer) {
					var blob = new Blob([buffer],{ type : "video/mp4"});
					loadVideo(URL.createObjectURL(blob));
				});
			} else {
				loadVideo(url);
			}
			break;
		case 21:
			this.$Gp(url,entry,"text",function(text) {
				_gthis.$bl(entry,new $CjG(text));
			});
			break;
		default:
			return;
		}
	}
	,$Zl: function(fn) {
		var _gthis = this;
		if($ChH.$Qp == null) {
			$ChH.$Qp = new $CKJ();
			$ChH.$Ip(function(imageFormats) {
				var formats = _gthis.$Gc.getRenderer().getTextureAssetFormats().concat(imageFormats).concat($ChH.$Jp()).concat([kit_asset_AssetFormat.WOFF,kit_asset_AssetFormat.OTF,kit_asset_AssetFormat.TTF]).concat([kit_asset_AssetFormat.Data]);
				$ChH.$Qp.$22(formats);
			});
		}
		$ChH.$Qp.$y2(fn);
	}
	,$Gp: function(url,entry,responseType,onLoad) {
		this.$Hp(url,entry,responseType,onLoad);
	}
	,$Hp: function(url,entry,responseType,onLoad) {
		var _gthis = this;
		var xhr = null;
		var start = null;
		var intervalId = 0;
		var hasInterval = false;
		var clearRetryInterval = function() {
			if(hasInterval) {
				hasInterval = false;
				window.clearInterval(intervalId);
			}
		};
		var retries = 3;
		var maybeRetry = function() {
			retries -= 1;
			if(retries >= 0) {
				start();
				return true;
			}
			return false;
		};
		start = function() {
			clearRetryInterval();
			if(xhr != null) {
				xhr.abort();
			}
			xhr = new XMLHttpRequest();
			xhr.open("GET",url,true);
			xhr.responseType = responseType;
			var lastProgress = 0.0;
			xhr.onprogress = function(event) {
				if(!hasInterval) {
					hasInterval = true;
					intervalId = window.setInterval(function() {
						if(xhr.readyState != 4 && Date.now() - lastProgress > 5000) {
							if(!maybeRetry()) {
								clearRetryInterval();
								_gthis.$el(entry,"Download stalled");
							}
						}
					},1000);
				}
				lastProgress = Date.now();
				_gthis.$cl(entry,event.loaded,event.total);
			};
			xhr.onerror = function(_) {
				if(xhr.status != 0 || !maybeRetry()) {
					clearRetryInterval();
					_gthis.$el(entry,"HTTP error " + xhr.status);
				}
			};
			xhr.onload = function(_) {
				var response = xhr.response;
				if(response == null) {
					response = xhr.responseText;
				}
				clearRetryInterval();
				onLoad(response);
			};
			xhr.send();
		};
		start();
	}
	,__class__: $ChH
});
var $CtH = function(pointer,canvas) {
	$CnG.call(this,pointer);
	this.$Ab = canvas;
};
$hxClasses["$CtH"] = $CtH;
$CtH.__name__ = "$CtH";
$CtH.__super__ = $CnG;
$CtH.prototype = $extend($CnG.prototype,{
	set_cursor: function(cursor) {
		var name;
		switch(cursor._hx_index) {
		case 0:
			name = "";
			break;
		case 1:
			name = "pointer";
			break;
		case 2:
			name = "none";
			break;
		}
		this.$Ab.style.cursor = name;
		return $CnG.prototype.set_cursor.call(this,cursor);
	}
	,__class__: $CtH
});
var $CuH = function(audioElement) {
	$CfG.call(this);
	this.$tp = audioElement;
};
$hxClasses["$CuH"] = $CuH;
$CuH.__name__ = "$CuH";
$CuH.__interfaces__ = [$C6G];
$CuH.__super__ = $CfG;
$CuH.prototype = $extend($CfG.prototype,{
	play: function(volume) {
		if(volume == null) {
			volume = 1.0;
		}
		return new $CvH(this,volume,false);
	}
	,loop: function(volume) {
		if(volume == null) {
			volume = 1.0;
		}
		return new $CvH(this,volume,true);
	}
	,$Ql: function() {
		this.$tp = null;
	}
	,__class__: $CuH
});
var $CvH = function(sound,volume,loop) {
	this.$0p = false;
	var _gthis = this;
	this.$bm = sound;
	this.$ip = false;
	this.$wp = window.document.createElement("audio");
	this.$wp.loop = loop;
	this.$wp.src = sound.$tp.src;
	this.volume = new $CbE(volume,function(_,_1) {
		_gthis.$vp();
	});
	this.$vp();
	this.$cm = new $CVE(false);
	this.$up();
	if($CcE.$cP.$Lb) {
		this.set_paused(true);
	}
};
$hxClasses["$CvH"] = $CvH;
$CvH.__name__ = "$CvH";
$CvH.__interfaces__ = [$CYH,$C8G];
$CvH.prototype = {
	set_paused: function(paused) {
		if(paused != this.$0p) {
			this.$0p = paused;
			if(paused) {
				this.$wp.pause();
			} else {
				this.$up();
			}
		}
		return paused;
	}
	,get_complete: function() {
		return this.$cm;
	}
	,update: function(dt) {
		this.volume.$5K(dt);
		this.$cm.set__(this.$wp.ended);
		if(this.$cm.$Lb || this.$0p) {
			this.$ip = false;
			this.$xp.dispose();
			this.$yp.dispose();
			return true;
		}
		return false;
	}
	,dispose: function() {
		this.set_paused(true);
		this.$cm.set__(true);
	}
	,$up: function() {
		var _gthis = this;
		this.$wp.play();
		if(!this.$ip) {
			$CUE.$0.$qa.$Lo(this);
			this.$ip = true;
			this.$xp = $CcE.$8b.get_changed().$eb(function(_,_1) {
				_gthis.$vp();
			});
			this.$yp = $CcE.$cP.get_changed().$eb(function(hidden,_) {
				if(hidden) {
					_gthis.$zp = _gthis.$0p;
					_gthis.set_paused(true);
				} else {
					_gthis.set_paused(_gthis.$zp);
				}
			});
		}
	}
	,$vp: function() {
		this.$wp.volume = $CGG.$sG($CcE.$8b.$Lb * this.volume.$Lb,0,1);
	}
	,__class__: $CvH
	,__properties__: {set_paused:"set_paused",get_complete:"get_complete"}
};
var $CwH = function() { };
$hxClasses["$CwH"] = $CwH;
$CwH.__name__ = "$CwH";
$CwH.__isInterface__ = true;
$CwH.prototype = {
	__class__: $CwH
	,__properties__: {get_height:"get_height",get_width:"get_width"}
};
var $CxH = function(canvas) {
	this.orientation = new $CVE(null);
	var _gthis = this;
	this.$Ab = canvas;
	this.resize = new $CZE();
	window.addEventListener("resize",$bind(this,this.$1p),false);
	this.$1p(null);
	this.fullscreen = new $CVE(false);
	$C1H.$Fq(window.document,"fullscreenchange",function(_) {
		_gthis.$4p();
	},false);
	this.$4p();
};
$hxClasses["$CxH"] = $CxH;
$CxH.__name__ = "$CxH";
$CxH.__interfaces__ = [$CwH];
$CxH.prototype = {
	get_width: function() {
		return this.$Ab.width;
	}
	,get_height: function() {
		return this.$Ab.height;
	}
	,$1p: function(_) {
		this.$2p(window.innerWidth,window.innerHeight);
		this.$3p();
	}
	,$2p: function(width,height) {
		var devicePixelRatio = $C1H.$Qq();
		var scaledWidth = devicePixelRatio * width;
		var scaledHeight = devicePixelRatio * height;
		if(this.$Ab.width == scaledWidth && this.$Ab.height == scaledHeight) {
			return false;
		}
		this.$Ab.width = scaledWidth | 0;
		this.$Ab.height = scaledHeight | 0;
		this.$Ab.style.width = width + "px";
		this.$Ab.style.height = height + "px";
		this.resize.$fb();
		return true;
	}
	,$3p: function() {
		if(window.orientation == null) {
			this.orientation.set__(null);
		} else {
			var value = window.innerWidth > window.innerHeight ? kit_display_Orientation.Landscape : kit_display_Orientation.Portrait;
			this.orientation.set__(value);
		}
	}
	,$4p: function() {
		var state = $C1H.$Cq(["fullscreen","fullScreen","isFullScreen"],window.document).value;
		this.fullscreen.set__(state == true);
	}
	,__class__: $CxH
	,__properties__: {get_height:"get_height",get_width:"get_width"}
};
var $C1H = function() { };
$hxClasses["$C1H"] = $C1H;
$C1H.__name__ = "$C1H";
$C1H.$Aq = function(func,delay) {
	if(delay == null) {
		delay = 0;
	}
	window.setTimeout(func,delay);
};
$C1H.$Bq = function(name,obj) {
	if(obj == null) {
		obj = window;
	}
	var extension = $CF.$j(obj,name);
	if(extension != null) {
		return { prefix : "", field : name, value : extension};
	}
	var capitalized = name.charAt(0).toUpperCase() + HxOverrides.substr(name,1,null);
	var _g = 0;
	var _g1 = $C1H.$8p;
	while(_g < _g1.length) {
		var prefix = _g1[_g];
		++_g;
		var field = prefix + capitalized;
		var extension = $CF.$j(obj,field);
		if(extension != null) {
			return { prefix : prefix, field : field, value : extension};
		}
	}
	return { prefix : null, field : null, value : null};
};
$C1H.$Cq = function(names,obj) {
	var _g = 0;
	while(_g < names.length) {
		var extension = $C1H.$Bq(names[_g++],obj);
		if(extension.field != null) {
			return extension;
		}
	}
	return { prefix : null, field : null, value : null};
};
$C1H.$Dq = function(name,obj) {
	if(obj == null) {
		obj = window;
	}
	var value = $C1H.$Bq(name,obj).value;
	if(value == null) {
		return false;
	}
	obj[name] = value;
	return true;
};
$C1H.$Eq = function(element,name,value) {
	var style = element.style;
	var _g = 0;
	var _g1 = $C1H.$8p;
	while(_g < _g1.length) style.setProperty("-" + _g1[_g++] + "-" + name,value);
	style.setProperty(name,value);
};
$C1H.$Fq = function(dispatcher,type,listener,useCapture) {
	var _g = 0;
	var _g1 = $C1H.$8p;
	while(_g < _g1.length) dispatcher.addEventListener(_g1[_g++] + type,listener,useCapture);
	dispatcher.addEventListener(type,listener,useCapture);
};
$C1H.$Jq = function(width,height) {
	var canvas = window.document.createElement("canvas");
	canvas.width = width;
	canvas.height = height;
	return canvas;
};
$C1H.$Kq = function(source) {
	var canvas = $C1H.$Jq(source.width,source.height);
	var ctx = canvas.getContext("2d",null);
	ctx.save();
	ctx.globalCompositeOperation = "copy";
	ctx.drawImage(source,0,0);
	ctx.restore();
	return canvas;
};
$C1H.$Pq = function(color) {
	var hex = (16777215 & color).toString(16);
	while(hex.length < 6) hex = "0" + hex;
	return "#" + hex;
};
$C1H.$Qq = function() {
	var devicePixelRatio = window.devicePixelRatio;
	if(devicePixelRatio == null) {
		devicePixelRatio = 1;
	}
	return devicePixelRatio;
};
$C1H.$Rq = function() {
	return 157286400;
};
$C1H.$Yq = function(video) {
	if(!(video.audioTracks != null && video.audioTracks.length > 0 || video.webkitAudioDecodedByteCount > 0)) {
		return video.mozHasAudio;
	} else {
		return true;
	}
};
var $C2H = function(name,fontFace,styleElement,fontUrl) {
	$CfG.call(this);
	this.$nP = name;
	this.$bq = fontFace;
	this.$cq = styleElement;
	this.$dq = fontUrl;
};
$hxClasses["$C2H"] = $C2H;
$C2H.__name__ = "$C2H";
$C2H.__interfaces__ = [$CqF];
$C2H.$eq = function(ctx,text,wrapWidth,metrics) {
	var result = "";
	var lines = text.split("\n");
	var _g = 0;
	var _g1 = lines.length;
	while(_g < _g1) {
		var ii = _g++;
		var words = lines[ii].split(" ");
		var spaceLeft = wrapWidth;
		var _g2 = 0;
		var _g3 = words.length;
		while(_g2 < _g3) {
			var jj = _g2++;
			var word = words[jj];
			var wordWidth = ctx.measureText(words[jj]).width;
			if(wordWidth <= spaceLeft) {
				result += word;
				spaceLeft -= wordWidth;
			} else {
				if(jj > 0) {
					result += "\n";
				}
				if(wordWidth <= wrapWidth) {
					result += word;
					spaceLeft = wrapWidth - wordWidth;
				} else {
					var brokenWord = $C2H.$fq(ctx,word,wrapWidth);
					result += brokenWord;
					spaceLeft = wrapWidth - ctx.measureText(HxOverrides.substr(brokenWord,brokenWord.lastIndexOf("\n") + 1,null)).width;
				}
			}
			if(jj < words.length - 1) {
				result += " ";
				spaceLeft -= metrics.$jq;
			}
		}
		if(ii < lines.length - 1) {
			result += "\n";
		}
	}
	return result;
};
$C2H.$fq = function(ctx,word,wrapWidth) {
	var _g = 1;
	var _g1 = word.length;
	while(_g < _g1) {
		var ii = _g++;
		if(ctx.measureText(HxOverrides.substr(word,0,ii + 1)).width > wrapWidth) {
			return HxOverrides.substr(word,0,ii) + "\n" + $C2H.$fq(ctx,HxOverrides.substr(word,ii,null),wrapWidth);
		}
	}
	return word;
};
$C2H.__super__ = $CfG;
$C2H.prototype = $extend($CfG.prototype,{
	createTexture: function(text,style) {
		var font = style.$_f + "px \"" + this.$nP + "\"";
		if(style.$Ag) {
			font = "bold " + font;
		}
		if(style.$Bg) {
			font = "italic " + font;
		}
		var metrics = this.$aq(font);
		var canvas = window.document.createElement("canvas");
		var ctx = canvas.getContext("2d",null);
		ctx.font = font;
		if(style.$tf > 0) {
			text = $C2H.$eq(ctx,text,style.$tf,metrics);
		}
		var lines = text.split("\n");
		var width;
		if(style.$tf > 0 && style.$wf != kit_display_TextAlign.Left) {
			width = style.$tf;
		} else {
			width = 0;
			var _g = 0;
			while(_g < lines.length) width = Math.max(width,ctx.measureText(lines[_g++]).width);
		}
		width += style.$Dg;
		var lineHeight = metrics.$hq + metrics.$iq + style.$Dg;
		var fudgedWidth = width + 4;
		if(style.$Bg) {
			fudgedWidth += 0.25 * style.$_f;
		}
		canvas.width = Math.ceil(fudgedWidth);
		canvas.height = Math.ceil(lineHeight + (lineHeight + style.$vf) * (lines.length - 1) + 4);
		ctx.font = font;
		ctx.textBaseline = "alphabetic";
		if(style.$Dg > 0) {
			ctx.strokeStyle = $C1H.$Pq(style.$Cg);
			ctx.lineWidth = style.$Dg;
		}
		ctx.fillStyle = $C1H.$Pq(style.$Jf);
		var x;
		switch(style.$wf._hx_index) {
		case 0:
			x = 0.5 * style.$Dg;
			ctx.textAlign = "left";
			break;
		case 1:
			x = width / 2;
			ctx.textAlign = "center";
			break;
		case 2:
			x = width - 0.5 * style.$Dg;
			ctx.textAlign = "right";
			break;
		}
		var y = metrics.$hq + 0.5 * style.$Dg;
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			if(style.$Dg > 0) {
				ctx.strokeText(line,x | 0,y | 0);
			}
			ctx.fillText(line,x | 0,y | 0);
			y += lineHeight + style.$vf;
		}
		return $CcE.$Gc.$wa.createTextureFromImage(canvas,kit_display_TextureFormat.RGBA_4444);
	}
	,$aq: function(fontStyle) {
		if($C2H.$gq == null) {
			$C2H.$gq = new $CcC();
		}
		var metrics = $C2H.$gq.h[fontStyle];
		if(metrics != null) {
			return metrics;
		}
		var canvas = window.document.createElement("canvas");
		var ctx = canvas.getContext("2d",null);
		ctx.font = fontStyle;
		var width = Math.ceil(ctx.measureText("|MÉq").width);
		var baseline = Math.ceil(ctx.measureText("M").width);
		var height = 2 * baseline;
		baseline = baseline * 1.4 | 0;
		canvas.width = width;
		canvas.height = height;
		ctx.fillStyle = "#f00";
		ctx.fillRect(0,0,width,height);
		ctx.font = fontStyle;
		var spaceCharacterWidth = ctx.measureText(" ").width;
		ctx.textBaseline = "alphabetic";
		ctx.fillStyle = "#000";
		ctx.fillText("|MÉq",0,baseline);
		var imagedata = ctx.getImageData(0,0,width,height).data;
		var pixels = imagedata.length;
		var line = width * 4;
		var i = 0;
		var idx = 0;
		var stop = false;
		while(i < baseline) {
			var j = 0;
			while(j < line) {
				if(imagedata[idx + j] != 255) {
					stop = true;
					break;
				}
				j += 4;
			}
			if(!stop) {
				idx += line;
			} else {
				break;
			}
			++i;
		}
		var ascent = baseline - i;
		idx = pixels - line;
		stop = false;
		i = height;
		while(i > baseline) {
			var j = 0;
			while(j < line) {
				if(imagedata[idx + j] != 255) {
					stop = true;
					break;
				}
				j += 4;
			}
			if(!stop) {
				idx -= line;
			} else {
				break;
			}
			--i;
		}
		var metrics = new $C3H(ascent,i - baseline,spaceCharacterWidth);
		$C2H.$gq.h[fontStyle] = metrics;
		return metrics;
	}
	,$Ql: function() {
		if(this.$bq != null) {
			window.document.fonts.delete(this.$bq);
			this.$bq = null;
		}
		URL.revokeObjectURL(this.$dq);
		if(this.$cq != null) {
			if(this.$cq.parentNode != null) {
				this.$cq.parentNode.removeChild(this.$cq);
			}
			this.$cq = null;
		}
	}
	,__class__: $C2H
});
var $C3H = function(ascent,descent,spaceCharacterWidth) {
	this.$hq = ascent;
	this.$iq = descent;
	this.$jq = spaceCharacterWidth;
};
$hxClasses["$C3H"] = $C3H;
$C3H.__name__ = "$C3H";
$C3H.prototype = {
	__class__: $C3H
};
var $C6H = function(videoElement) {
	$CfG.call(this);
	this.$lq = videoElement;
	this.$mq = new $CJJ(function() {
		var clonedElement = window.document.createElement("video");
		clonedElement.crossOrigin = videoElement.crossOrigin;
		if(videoElement.srcObject != null) {
			clonedElement.srcObject = videoElement.srcObject;
		} else {
			clonedElement.src = videoElement.src;
			if($global.navigator.userAgent.indexOf("2DKSim") >= 0) {
				clonedElement.src += "?" + Math.random();
			}
		}
		return clonedElement;
	}).$Em(8);
	this.$mq.$v2(videoElement);
};
$hxClasses["$C6H"] = $C6H;
$C6H.__name__ = "$C6H";
$C6H.__interfaces__ = [$CBH];
$C6H.__super__ = $CfG;
$C6H.prototype = $extend($CfG.prototype,{
	play: function(volume) {
		if(volume == null) {
			volume = 1.0;
		}
		return new $C7H(this,volume,false);
	}
	,get_width: function() {
		return this.$lq.videoWidth;
	}
	,get_height: function() {
		return this.$lq.videoHeight;
	}
	,$Ql: function() {
		if(this.$lq != null) {
			URL.revokeObjectURL(this.$lq.src);
		}
		this.$lq = null;
	}
	,__class__: $C6H
	,__properties__: {get_height:"get_height",get_width:"get_width"}
});
var $C7H = function(video,volume,loop) {
	this.$0e = null;
	this.$0p = false;
	this.ready = new $CVE(false);
	var _gthis = this;
	this.$dm = video;
	this.$wp = video.$mq.$u2();
	this.$wp.loop = loop;
	this.$wp.width = video.$lq.videoWidth;
	this.$wp.height = video.$lq.videoHeight;
	this.$wp.setAttribute("playsinline","");
	this.$wp.setAttribute("webkit-playsinline","");
	if(!$C1H.$Yq(video.$lq)) {
		this.$wp.muted = true;
	}
	this.$wp.autoplay = true;
	this.volume = new $CbE(volume,function(_,_1) {
		_gthis.$vp();
	});
	this.$vp();
	this.$cm = new $CVE(false);
	this.$oq();
	if($CcE.$cP.$Lb) {
		this.set_paused(true);
	}
};
$hxClasses["$C7H"] = $C7H;
$C7H.__name__ = "$C7H";
$C7H.__interfaces__ = [$CYH,$CDH];
$C7H.prototype = {
	get_texture: function() {
		if(this.$0e == null) {
			this.$0e = $CcE.$Gc.$wa.createTextureFromImage(this.$wp);
		}
		return this.$0e;
	}
	,get_video: function() {
		return this.$dm;
	}
	,set_paused: function(paused) {
		if(paused != this.$0p) {
			this.$0p = paused;
			if(this.$wp != null) {
				if(paused) {
					this.$wp.pause();
				} else {
					this.$oq();
				}
			}
		}
		return paused;
	}
	,update: function(dt) {
		this.$pq();
		this.volume.$5K(dt);
		this.$cm.set__(this.$wp == null || this.$wp.ended);
		if(this.$cm.$Lb) {
			this.$ip = false;
			this.$xp.dispose();
			this.$yp.dispose();
			return true;
		}
		return false;
	}
	,dispose: function() {
		this.set_paused(true);
		this.$cm.set__(true);
		if(this.$0e != null) {
			this.$0e.dispose();
		}
		if(this.$wp != null) {
			if(typeof(MediaStream) != "undefined") {
				var value = this.$wp.srcObject;
				var stream = ((value) instanceof MediaStream) ? value : null;
				if(stream != null) {
					var _g = 0;
					var _g1 = stream.getVideoTracks();
					while(_g < _g1.length) _g1[_g++].stop();
				}
			}
			this.$wp.currentTime = 0;
			this.$dm.$mq.$v2(this.$wp);
			this.$wp = null;
		}
	}
	,$oq: function() {
		var _gthis = this;
		var promise = this.$wp.play();
		if(promise != null) {
			promise.catch(function(error) {
			});
		}
		this.$pq();
		if(!this.$ip) {
			$CUE.$0.$qa.$Lo(this);
			this.$ip = true;
			this.$xp = $CcE.$8b.get_changed().$eb(function(_,_1) {
				_gthis.$vp();
			});
			this.$yp = $CcE.$cP.get_changed().$eb(function(hidden,_) {
				$CcE.$Gc.$qa.$Ac(function() {
					if(hidden) {
						_gthis.$zp = _gthis.$0p;
						_gthis.set_paused(true);
					} else {
						_gthis.set_paused(_gthis.$zp);
					}
				});
			});
		}
	}
	,$pq: function() {
		if(this.$wp != null) {
			if(this.$wp.readyState >= 2) {
				this.ready.set__(true);
			}
		}
	}
	,$vp: function() {
		if(this.$wp != null) {
			this.$wp.volume = $CcE.$8b.$Lb * this.volume.$Lb;
		}
	}
	,__class__: $C7H
	,__properties__: {set_paused:"set_paused",get_video:"get_video",get_texture:"get_texture"}
};
var $CAI = function(compressedData) {
	this.$vq = null;
	$CfG.call(this);
	this.$uq = compressedData;
};
$hxClasses["$CAI"] = $CAI;
$CAI.__name__ = "$CAI";
$CAI.__interfaces__ = [$C6G];
$CAI.__super__ = $CfG;
$CAI.prototype = $extend($CfG.prototype,{
	play: function(volume) {
		if(volume == null) {
			volume = 1.0;
		}
		return new $CBI(this,volume,false);
	}
	,loop: function(volume) {
		if(volume == null) {
			volume = 1.0;
		}
		return new $CBI(this,volume,true);
	}
	,$Ql: function() {
		this.$vq = null;
		this.$uq = null;
		$CAI.$wq.$lB(this);
	}
	,$co: function() {
		var _gthis = this;
		var audioBuffer = $CAI.$wq.$jB(this);
		if(audioBuffer != null) {
			return new $CKJ().$22(new $CDI(audioBuffer));
		}
		if(this.$vq == null) {
			this.$vq = new $CKJ();
			$CDI.$zq.decodeAudioData(this.$uq.slice(0),function(audioBuffer) {
				if(_gthis.$vq != null) {
					if(audioBuffer.numberOfChannels * audioBuffer.length <= $CAI.$wq.$Nm) {
						$CAI.$wq.$kB(_gthis,audioBuffer);
					}
					_gthis.$vq.$22(new $CDI(audioBuffer));
					_gthis.$vq = null;
				}
			},function() {
				if(_gthis.$vq != null) {
					_gthis.$vq.$22($C7G.$Zm());
					_gthis.$vq = null;
				}
			});
		}
		return this.$vq;
	}
	,__class__: $CAI
});
var $CBI = function(sound,volume,loop) {
	this.$0p = false;
	this.$xq = null;
	this.$cm = new $CVE(false);
	var _gthis = this;
	this.$bm = sound;
	sound.$co().$y2(function(soundImpl) {
		if(_gthis.$cm.$Lb) {
			return;
		}
		var tmp = loop ? soundImpl.loop(_gthis.volume.$Lb) : soundImpl.play(_gthis.volume.$Lb);
		_gthis.$xq = tmp;
		_gthis.$xq.set_paused(_gthis.$0p);
		_gthis.$xq.get_complete().$Kb(function(complete,_) {
			_gthis.$cm.set__(complete);
		});
	});
	this.volume = new $CbE(volume,function(volume,_) {
		if(_gthis.$xq != null) {
			_gthis.$xq.volume.set__(volume);
		}
	});
	$CUE.$0.$qa.$Lo(this);
};
$hxClasses["$CBI"] = $CBI;
$CBI.__name__ = "$CBI";
$CBI.__interfaces__ = [$CYH,$C8G];
$CBI.prototype = {
	set_paused: function(paused) {
		if(this.$xq != null) {
			this.$xq.set_paused(paused);
		}
		return this.$0p = paused;
	}
	,get_complete: function() {
		return this.$cm;
	}
	,dispose: function() {
		this.$cm.set__(true);
		if(this.$xq != null) {
			this.$xq.dispose();
		}
	}
	,update: function(dt) {
		this.volume.$5K(dt);
		return this.$cm.$Lb;
	}
	,__class__: $CBI
	,__properties__: {set_paused:"set_paused",get_complete:"get_complete"}
};
var $CDI = function(buffer) {
	$CfG.call(this);
	this.$yq = buffer;
};
$hxClasses["$CDI"] = $CDI;
$CDI.__name__ = "$CDI";
$CDI.__interfaces__ = [$C6G];
$CDI.__properties__ = {get_$zV:"get_$zV"};
$CDI.get_supported = function() {
	if($CDI.$5q) {
		$CDI.$5q = false;
		try {
			var AudioContext = $C1H.$Bq("AudioContext").value;
			if(AudioContext != null) {
				$CDI.$zq = new AudioContext();
				$CDI.$0q = $CDI.$1q();
				$CDI.$0q.connect($CDI.$zq.destination);
				$CcE.$8b.$Kb(function(volume,_) {
					$CDI.$4q($CDI.$0q.gain,volume);
				});
				$CcE.$Gc.$ya.down.$eb(function(_) {
					new $CDI($CDI.$3q()).play();
				}).$Ob();
				var resumeContext = function(_) {
					if($CDI.$zq.state == "suspended") {
						$CDI.$zq.resume();
					}
				};
				$CcE.$Gc.$ya.down.$eb(resumeContext);
				$CcE.$Gc.$ya.up.$eb(resumeContext);
				$CcE.$Gc.$ua.down.$eb(resumeContext);
				$CcE.$Gc.$ua.up.$eb(resumeContext);
				if($C1H.$ch) {
					var onTouchUp = null;
					onTouchUp = $CcE.$Gc.$ya.up.$eb(function(_) {
						var playback = new $CDI($CDI.$3q()).play();
						$C1H.$Aq(function() {
							var state = playback.$$q();
							if(state == null || state >= 2) {
								onTouchUp.dispose();
							}
						});
					});
				}
			}
		} catch( _g ) {
		}
	}
	return $CDI.$zq != null;
};
$CDI.$1q = function() {
	if($CDI.$zq.createGain != null) {
		return $CDI.$zq.createGain();
	} else {
		return $CDI.$zq.createGainNode();
	}
};
$CDI.$2q = function(node,offset) {
	if(node.start != null) {
		node.start(0,offset);
	} else {
		node.noteOn(0,offset);
	}
};
$CDI.$mb = function(node) {
	if(node.stop != null) {
		node.stop(0);
	} else {
		node.noteOff(0);
	}
};
$CDI.$3q = function() {
	if($CDI.$6q == null) {
		$CDI.$6q = $CDI.$zq.createBuffer(1,1,22050);
	}
	return $CDI.$6q;
};
$CDI.$4q = function(audioParam,value) {
	try {
		audioParam.value = value;
	} catch( _g ) {
	}
};
$CDI.__super__ = $CfG;
$CDI.prototype = $extend($CfG.prototype,{
	play: function(volume) {
		if(volume == null) {
			volume = 1.0;
		}
		return new $CEI(this,volume,false);
	}
	,loop: function(volume) {
		if(volume == null) {
			volume = 1.0;
		}
		return new $CEI(this,volume,true);
	}
	,get_duration: function() {
		return this.$yq.duration;
	}
	,$Ql: function() {
		this.$yq = null;
	}
	,__class__: $CDI
	,__properties__: {get_duration:"get_duration"}
});
var $CEI = function(sound,volume,loop) {
	this.$Er = 0;
	this.$_q = -1;
	var _gthis = this;
	this.$bm = sound;
	this.$bb = $CDI.$0q;
	this.$cm = new $CVE(false);
	this.$Dr = loop;
	this.$9c = sound.get_duration();
	this.volume = new $CbE(volume,function(v,_) {
		if(_gthis.$Br != null) {
			_gthis.$8q(v);
		}
	});
	this.$up(0);
	if($CcE.$cP.$Lb) {
		this.set_paused(true);
	}
};
$hxClasses["$CEI"] = $CEI;
$CEI.__name__ = "$CEI";
$CEI.__interfaces__ = [$CYH,$C8G];
$CEI.prototype = {
	set_paused: function(paused) {
		if(paused != this.$_q >= 0) {
			if(paused) {
				this.$7q();
				this.$_q = this.get_position();
			} else {
				if(!this.$cm.$Lb) {
					this.$up(this.$_q);
				}
				this.$_q = -1;
			}
		}
		return paused;
	}
	,get_complete: function() {
		return this.$cm;
	}
	,get_position: function() {
		if(this.$cm.$Lb) {
			return this.$9c;
		} else if(this.$_q >= 0) {
			return this.$_q;
		} else {
			return ($CDI.$zq.currentTime - this.$Ar + this.$Er) % this.$9c;
		}
	}
	,update: function(dt) {
		this.volume.$5K(dt);
		if(this.$Br != null && this.$Br.playbackState == 3) {
			this.$cm.set__(true);
		}
		if(this.$cm.$Lb || this.$_q >= 0) {
			this.$ip = false;
			this.$yp.dispose();
			this.$7q();
			return true;
		}
		return false;
	}
	,$7q: function() {
		if(this.$Br != null) {
			$CDI.$mb(this.$Br);
			this.$Br.disconnect();
			this.$Br.onended = null;
			if($C1H.$ch) {
				var silence = $CDI.$3q();
				try {
					this.$Br.buffer = silence;
				} catch( _g ) {
				}
			}
			this.$Br = null;
		}
	}
	,dispose: function() {
		this.set_paused(true);
		this.$cm.set__(true);
	}
	,$8q: function(volume) {
		if(this.$Cr == null) {
			this.$Cr = $CDI.$1q();
			this.$9q(this.$Cr);
		}
		$CDI.$4q(this.$Cr.gain,volume);
	}
	,$9q: function(head) {
		if(!(this.$_q >= 0)) {
			this.$Br.disconnect();
			this.$Br.connect(head);
		}
		head.connect(this.$bb);
		this.$bb = head;
	}
	,$up: function(offset) {
		var _gthis = this;
		this.$Br = $CDI.$zq.createBufferSource();
		this.$Br.buffer = this.$bm.$yq;
		this.$Br.loop = this.$Dr;
		this.$Br.onended = function() {
			_gthis.$cm.set__(true);
		};
		$CDI.$2q(this.$Br,0.0 > offset ? 0.0 : offset);
		this.$Br.connect(this.$bb);
		this.$Er = this.$_q >= 0 ? this.$_q : 0;
		this.$Ar = $CDI.$zq.currentTime;
		if(this.volume.$Lb != 1 || this.$Cr != null) {
			this.$8q(this.volume.$Lb);
		}
		if(!this.$ip) {
			$CUE.$0.$qa.$Lo(this);
			this.$ip = true;
			this.$yp = $CcE.$cP.get_changed().$eb(function(hidden,_) {
				if(hidden) {
					_gthis.$zp = _gthis.$_q >= 0;
					_gthis.set_paused(true);
				} else {
					_gthis.set_paused(_gthis.$zp);
				}
			});
		}
	}
	,$$q: function() {
		if(this.$Br != null) {
			return this.$Br.playbackState;
		} else {
			return 3;
		}
	}
	,__class__: $CEI
	,__properties__: {set_paused:"set_paused",get_position:"get_position",get_complete:"get_complete"}
};
var $CFI = function() { };
$hxClasses["$CFI"] = $CFI;
$CFI.__name__ = "$CFI";
$CFI.__isInterface__ = true;
$CFI.__interfaces__ = [$CsB];
$CFI.prototype = {
	__class__: $CFI
};
var $CGI = function(element) {
	this.$Fr = element;
};
$hxClasses["$CGI"] = $CGI;
$CGI.__name__ = "$CGI";
$CGI.__interfaces__ = [$CFI];
$CGI.prototype = {
	getWidth: function() {
		return this.$Fr.width;
	}
	,getHeight: function() {
		return this.$Fr.height;
	}
	,isVideo: function() {
		var value = this.$Fr;
		return (((value) instanceof HTMLVideoElement) ? value : null) != null;
	}
	,upload: function(texture) {
		var value = this.$Fr;
		var videoElement = ((value) instanceof HTMLVideoElement) ? value : null;
		if(videoElement == null) {
			var internalformat = texture.$v1();
			var type = texture.$w1();
			$CHI.$Hr.texImage2D(3553,0,internalformat,internalformat,type,this.$Fr);
		} else {
			$CHI.$Hr.pixelStorei(37441,0);
			$CHI.$Hr.texImage2D(3553,0,6408,6408,5121,videoElement);
			$CHI.$Hr.pixelStorei(37441,1);
		}
	}
	,dispose: function() {
		URL.revokeObjectURL(this.$Fr.src);
	}
	,__class__: $CGI
};
var $CHI = function() { };
$hxClasses["$CHI"] = $CHI;
$CHI.__name__ = "$CHI";
$CHI.$3g = function(impl) {
	$CHI.$Hr = impl;
};
$CHI.$Ir = function(target,size,data,usage) {
	if(data == null) {
		$CHI.$Hr.bufferData(target,size,usage);
	} else {
		$CHI.$Hr.bufferData(target,new Uint8Array(data,0,size),usage);
	}
};
var $CII = function() {
	this.$zo = new $CVE(false);
	var _gthis = this;
	this.$zo.get_changed().$eb(function(hasGPU,_) {
		if(hasGPU) {
			_gthis.$3g();
		}
	});
};
$hxClasses["$CII"] = $CII;
$CII.__name__ = "$CII";
$CII.__interfaces__ = [$COH];
$CII.prototype = {
	get_filterSupported: function() {
		return true;
	}
	,$_s: function(imageSource,format,pixelScale) {
		if(pixelScale == null) {
			pixelScale = 1;
		}
		var pixelWidth = imageSource.getWidth();
		var pixelHeight = imageSource.getHeight();
		var root = new $CnI(this.$$s,pixelWidth,pixelHeight,pixelScale);
		if(format != null && format != kit_display_TextureFormat.COMPRESSED) {
			root.$x1 = format;
		}
		root.$p1 = imageSource;
		return root.createTexture(pixelWidth / pixelScale,pixelHeight / pixelScale);
	}
	,createTexture: function(pixelWidth,pixelHeight,format,pixelScale) {
		if(pixelScale == null) {
			pixelScale = 1;
		}
		var root = new $CnI(this.$$s,pixelWidth,pixelHeight,pixelScale);
		if(format != null && format != kit_display_TextureFormat.COMPRESSED) {
			root.$x1 = format;
		}
		return root.createTexture(pixelWidth / pixelScale,pixelHeight / pixelScale);
	}
	,getTextureAssetFormats: function() {
		return [];
	}
	,createTextureFromImage: function(image,format,pixelScale) {
		if(pixelScale == null) {
			pixelScale = 1;
		}
		return null;
	}
	,createSystemFont: function(name) {
		return null;
	}
	,willRender: function() {
		this.graphics.willRender();
	}
	,didRender: function() {
		this.graphics.didRender();
	}
	,$Kf: function(width,height) {
		if(this.graphics != null) {
			this.$$s.$n0(width,height);
			this.graphics.onResize(width,height);
		}
	}
	,$3g: function() {
		this.$$s = new $CiI();
		this.graphics = new $CjI(this.$$s,null);
	}
	,__class__: $CII
	,__properties__: {get_filterSupported:"get_filterSupported"}
};
var $CJI = function(stage) {
	this.$At = false;
	var _gthis = this;
	$CII.call(this);
	this.$zo.set__(true);
	if($CHI.$Hr.getError() == 0) {
		this.$At = true;
		var canvas = $CHI.$Hr.canvas;
		canvas.addEventListener("webglcontextlost",function(event) {
			event.preventDefault();
			_gthis.$zo.set__(false);
		},false);
		canvas.addEventListener("webglcontextrestored",function(event) {
			_gthis.$zo.set__(true);
		},false);
		stage.resize.$eb($bind(this,this.$Bt));
	}
};
$hxClasses["$CJI"] = $CJI;
$CJI.__name__ = "$CJI";
$CJI.__super__ = $CII;
$CJI.prototype = $extend($CII.prototype,{
	createTextureFromImage: function(image,format,pixelScale) {
		if(pixelScale == null) {
			pixelScale = 1;
		}
		return this.$_s(new $CGI(image),format,pixelScale);
	}
	,createSystemFont: function(name) {
		return new $C2H(name);
	}
	,$Bt: function() {
		var canvas = $CHI.$Hr.canvas;
		this.$Kf(canvas.width,canvas.height);
	}
	,$3g: function() {
		$CII.prototype.$3g.call(this);
		this.$Bt();
	}
	,__class__: $CJI
});
var $CRI = function() {
	this.$vt = true;
	this.$ut = -1;
	this.$tt = [];
	this.$st = null;
	this.$rt = null;
	this.$qt = null;
	this.$kt = 0;
};
$hxClasses["$CRI"] = $CRI;
$CRI.__name__ = "$CRI";
$CRI.$yr = function(type,source) {
	var result = $CHI.$Hr.createShader(type);
	$CHI.$Hr.shaderSource(result,source);
	$CHI.$Hr.compileShader(result);
	return result;
};
$CRI.prototype = {
	$lt: function() {
	}
	,$NR: function() {
		if(this.$qt == null) {
			this.$qt = $CHI.$Hr.createProgram();
			this.$lt();
			if(this.$vt) {
				$CHI.$Hr.detachShader(this.$qt,this.$rt);
				$CHI.$Hr.deleteShader(this.$rt);
				this.$rt = null;
				$CHI.$Hr.detachShader(this.$qt,this.$st);
				$CHI.$Hr.deleteShader(this.$st);
				this.$st = null;
			}
		}
	}
	,$mt: function(lastShader) {
		$CHI.$Hr.useProgram(this.$qt);
		if(this.$ut < 0) {
			this.$ut = 0;
			var _g = 0;
			var _g1 = this.$tt;
			while(_g < _g1.length) {
				var attrib = _g1[_g];
				++_g;
				var size = attrib.$6t();
				attrib.$gU = this.$ut;
				this.$ut += size;
			}
			var _this = this.$tt;
			var _g = [];
			var _g1 = 0;
			while(_g1 < _this.length) {
				var v = _this[_g1];
				++_g1;
				if(v.$eU >= 0) {
					_g.push(v);
				}
			}
			this.$tt = _g;
			this.$tt.sort(function(a1,a2) {
				return a1.$eU - a2.$eU;
			});
		}
		if(lastShader != null) {
			var _g = lastShader.$tt.length;
			var _g1 = this.$tt.length;
			while(_g < _g1) $CHI.$Hr.enableVertexAttribArray(_g++);
			var _g = this.$tt.length;
			var _g1 = lastShader.$tt.length;
			while(_g < _g1) $CHI.$Hr.disableVertexAttribArray(_g++);
		} else {
			var _g = 0;
			var _g1 = this.$tt.length;
			while(_g < _g1) $CHI.$Hr.enableVertexAttribArray(_g++);
		}
		var _g = 0;
		var _g1 = this.$tt.length;
		while(_g < _g1) {
			var index = _g++;
			var attrib = this.$tt[index];
			var lastAttrib = lastShader != null ? lastShader.$tt[index] : null;
			if(lastAttrib == null || lastAttrib.$Tf != attrib.$Tf || lastAttrib.$hI != attrib.$hI || lastShader.$ut != this.$ut || lastAttrib.$gU != attrib.$gU) {
				$CHI.$Hr.vertexAttribPointer(index,attrib.$Tf,attrib.$hI,false,this.$ut,attrib.$gU);
			}
		}
	}
	,$nt: function(vertSource,fragSource) {
		fragSource = ["precision mediump float;"].join("\n") + "\n" + fragSource;
		this.$rt = $CRI.$yr(35633,vertSource);
		this.$st = $CRI.$yr(35632,fragSource);
		$CHI.$Hr.attachShader(this.$qt,this.$rt);
		$CHI.$Hr.attachShader(this.$qt,this.$st);
		$CHI.$Hr.linkProgram(this.$qt);
		$CHI.$Hr.useProgram(this.$qt);
	}
	,$ot: function(name,size,type) {
		var result = $CHI.$Hr.getAttribLocation(this.$qt,name);
		this.$tt.push(new $CUI(result,size,type));
		this.$kt += size;
	}
	,$pt: function(name) {
		return $CHI.$Hr.getUniformLocation(this.$qt,name);
	}
	,__class__: $CRI
};
var $CSI = function(alphaMode) {
	this.$0t = -1;
	this.$zt = -1;
	this.$yt = -1;
	this.$xt = -1;
	$CRI.call(this);
	this.$4t = alphaMode;
};
$hxClasses["$CSI"] = $CSI;
$CSI.__name__ = "$CSI";
$CSI.__super__ = $CRI;
$CSI.prototype = $extend($CRI.prototype,{
	$lt: function() {
		var vertSource = ["attribute highp vec2 a_pos;","attribute mediump vec2 a_uv;","attribute lowp vec4 a_color;","varying mediump vec2 v_uv;","varying lowp vec4 v_color;","void main (void) {","v_uv = a_uv;","v_color = vec4(a_color.rgb * a_color.a, a_color.a);","gl_Position = vec4(a_pos, 0, 1);","}"].join("\n");
		var colorLookup;
		switch(this.$4t) {
		case 0:case 1:
			colorLookup = "texture2D(u_texture, pos);";
			break;
		case 2:
			colorLookup = "vec4(texture2D(u_textureRGB, pos).rgb, texture2D(u_texture, pos).r);";
			break;
		}
		this.$nt(vertSource,["varying mediump vec2 v_uv;","varying lowp vec4 v_color;","uniform lowp sampler2D u_texture;","uniform mediump vec4 u_region;",this.$4t == 2 ? "uniform lowp sampler2D u_textureRGB;" : "","void main (void) {","mediump vec2 pos = u_region.xy + mod(v_uv, u_region.zw);","lowp vec4 color = " + colorLookup,this.$4t == 1 ? "if (color.a == 0.0) discard;" : "","gl_FragColor = color * v_color;","}"].join("\n"));
		this.$ot("a_pos",2,5126);
		this.$ot("a_uv",2,5126);
		this.$ot("a_color",4,5126);
		this.$1t = this.$pt("u_texture");
		this.$3t = this.$pt("u_region");
		$CHI.$Hr.uniform1i(this.$1t,0);
		if(this.$4t == 2) {
			this.$2t = this.$pt("u_textureRGB");
			$CHI.$Hr.uniform1i(this.$2t,1);
		}
	}
	,$wt: function(x,y,width,height) {
		if(x == this.$xt && y == this.$yt && width == this.$zt && height == this.$0t) {
			return;
		}
		this.$xt = x;
		this.$yt = y;
		this.$zt = width;
		this.$0t = height;
		$CHI.$Hr.uniform4f(this.$3t,x,y,width,height);
	}
	,__class__: $CSI
});
var $CTI = function(alphaMode) {
	$CRI.call(this);
	this.$4t = alphaMode;
};
$hxClasses["$CTI"] = $CTI;
$CTI.__name__ = "$CTI";
$CTI.__super__ = $CRI;
$CTI.prototype = $extend($CRI.prototype,{
	$lt: function() {
		var fragSource = ["attribute highp vec2 a_pos;","attribute mediump vec2 a_uv;","attribute lowp vec4 a_color;","varying mediump vec2 v_uv;","varying lowp vec4 v_color;","void main (void) {","v_uv = a_uv;","v_color = vec4(a_color.rgb * a_color.a, a_color.a);","gl_Position = vec4(a_pos, 0, 1);","}"].join("\n");
		var colorLookup;
		switch(this.$4t) {
		case 0:case 1:
			colorLookup = "texture2D(u_texture, v_uv);";
			break;
		case 2:
			colorLookup = "vec4(texture2D(u_textureRGB, v_uv).rgb, texture2D(u_texture, v_uv).r);";
			break;
		}
		this.$nt(fragSource,["varying mediump vec2 v_uv;","varying lowp vec4 v_color;","uniform lowp sampler2D u_texture;",this.$4t == 2 ? "uniform lowp sampler2D u_textureRGB;" : "","void main (void) {","lowp vec4 color = " + colorLookup,this.$4t == 1 ? "if (color.a == 0.0) discard;" : "","gl_FragColor = color * v_color;","}"].join("\n"));
		this.$ot("a_pos",2,5126);
		this.$ot("a_uv",2,5126);
		this.$ot("a_color",4,5126);
		this.$1t = this.$pt("u_texture");
		this.$5t(0);
		if(this.$4t == 2) {
			this.$2t = this.$pt("u_textureRGB");
			$CHI.$Hr.uniform1i(this.$2t,1);
		}
	}
	,$5t: function(unit) {
		$CHI.$Hr.uniform1i(this.$1t,unit);
	}
	,__class__: $CTI
});
var $CUI = function(index,size,type) {
	this.$gU = 0;
	this.$eU = index;
	this.$Tf = size;
	this.$hI = type;
};
$hxClasses["$CUI"] = $CUI;
$CUI.__name__ = "$CUI";
$CUI.prototype = {
	$6t: function() {
		return this.$Tf * (this.$hI == 5126 ? Float32Array.BYTES_PER_ELEMENT : 1);
	}
	,__class__: $CUI
};
var $CVI = function() {
	$CRI.call(this);
};
$hxClasses["$CVI"] = $CVI;
$CVI.__name__ = "$CVI";
$CVI.__super__ = $CRI;
$CVI.prototype = $extend($CRI.prototype,{
	$lt: function() {
		this.$nt(["attribute highp vec2 a_pos;","attribute lowp vec3 a_rgb;","attribute lowp float a_alpha;","varying lowp vec4 v_color;","void main (void) {","v_color = vec4(a_rgb*a_alpha, a_alpha);","gl_Position = vec4(a_pos, 0, 1);","}"].join("\n"),["varying lowp vec4 v_color;","void main (void) {","gl_FragColor = v_color;","}"].join("\n"));
		this.$ot("a_pos",2,5126);
		this.$ot("a_rgb",3,5126);
		this.$ot("a_alpha",1,5126);
	}
	,__class__: $CVI
});
var $CWI = function(batcher,vertSource,fragSource) {
	this.$_t = new $CcC();
	this.$$t = null;
	this.$9t = null;
	$CRI.call(this);
	this.$8t = batcher;
	if(vertSource == null) {
		vertSource = ["void main () {","vTextureCoord = aTextureCoord;","vFilterCoord = aTextureCoord * uTextureSize/uFilterSize;","gl_Position = vec4(aVertexPosition, 0, 1);","}"].join("\n");
	}
	this.$pg = vertSource;
	this.$og = fragSource;
	this.$vt = false;
};
$hxClasses["$CWI"] = $CWI;
$CWI.__name__ = "$CWI";
$CWI.__super__ = $CRI;
$CWI.prototype = $extend($CRI.prototype,{
	$lt: function() {
		var commonSource = ["varying vec2 vTextureCoord;","varying vec2 vFilterCoord;","uniform sampler2D uTexture;","uniform vec2 uTextureSize;","uniform vec2 uFilterSize;","uniform vec2 uFilterPosition;"].join("\n");
		this.$nt(["precision mediump float;",commonSource,"attribute highp vec2 aVertexPosition;","attribute vec2 aTextureCoord;","#line 0",this.$pg].join("\n"),[commonSource,"#line 0",this.$og].join("\n"));
		this.$ot("aVertexPosition",2,5126);
		this.$ot("aTextureCoord",2,5126);
		this.$$t = $CHI.$Hr.getUniformLocation(this.$qt,"uTextureSize");
		this.$9t = $CHI.$Hr.getUniformLocation(this.$qt,"uFilterSize");
		this.$og = null;
		this.$pg = null;
	}
	,$7t: function(filter,renderTarget,width,height) {
		if(this.$$t != null) {
			$CHI.$Hr.uniform2f(this.$$t,renderTarget.$3o,renderTarget.$4o);
		}
		if(this.$9t != null) {
			$CHI.$Hr.uniform2f(this.$9t,width,height);
		}
		var nextTextureUnit = 0;
		var h = filter.$ng.h;
		var uniform_keys = Object.keys(h);
		var uniform_length = uniform_keys.length;
		var uniform_current = 0;
		while(uniform_current < uniform_length) {
			var uniform = h[uniform_keys[uniform_current++]];
			var binding = this.$_t.h[uniform.$CP];
			if(binding == null) {
				binding = new $CXI($CHI.$Hr.getUniformLocation(this.$qt,uniform.$CP));
				this.$_t.h[uniform.$CP] = binding;
			}
			var location = binding.$wV;
			if(location == null) {
				continue;
			}
			switch(uniform.$hI) {
			case 0:
				$CHI.$Hr.uniform1f(location,uniform.$bT);
				break;
			case 1:
				$CHI.$Hr.uniform2fv(location,new Float32Array(uniform.$bT));
				break;
			case 2:
				$CHI.$Hr.uniform3fv(location,new Float32Array(uniform.$bT));
				break;
			case 3:
				$CHI.$Hr.uniform4fv(location,new Float32Array(uniform.$bT));
				break;
			case 4:
				$CHI.$Hr.uniform1i(location,uniform.$bT);
				break;
			case 5:
				$CHI.$Hr.uniform2iv(location,new Int32Array(uniform.$bT));
				break;
			case 6:
				$CHI.$Hr.uniform3iv(location,new Int32Array(uniform.$bT));
				break;
			case 7:
				$CHI.$Hr.uniform4iv(location,new Int32Array(uniform.$bT));
				break;
			case 8:
				$CHI.$Hr.uniformMatrix2fv(location,false,new Float32Array(uniform.$bT));
				break;
			case 9:
				$CHI.$Hr.uniformMatrix3fv(location,false,new Float32Array(uniform.$bT));
				break;
			case 10:
				$CHI.$Hr.uniformMatrix4fv(location,false,new Float32Array(uniform.$bT));
				break;
			case 11:
				$CHI.$Hr.uniform1i(location,nextTextureUnit);
				if(nextTextureUnit != 0) {
					$CHI.$Hr.activeTexture(33984 + nextTextureUnit);
				}
				++nextTextureUnit;
				var residentTexture = this.$8t.$u0(uniform.$bT.$cT);
				this.$8t.$gr(residentTexture.$Jf);
				break;
			}
		}
		if(nextTextureUnit > 1) {
			$CHI.$Hr.activeTexture(33984);
		}
	}
	,__class__: $CWI
});
var $CXI = function(location) {
	this.$wV = location;
};
$hxClasses["$CXI"] = $CXI;
$CXI.__name__ = "$CXI";
$CXI.prototype = {
	__class__: $CXI
};
var $CiI = function() {
	this.$f1 = new $CcC();
	this.$e1 = new $CwG().$Em(157286400).$Gm(function(texture,_) {
		return texture.$u1();
	});
	this.$d1 = 0;
	this.$c1 = 0;
	this.$b1 = 0;
	this.$a1 = 0;
	this.$Z1 = 0;
	this.$Y1 = 0;
	this.$Q1 = [];
	this.$N1 = true;
	this.$L1 = false;
	this.$K1 = null;
	this.$J1 = null;
	this.$I1 = false;
	this.$H1 = null;
	this.$G1 = 0;
	this.$F1 = null;
	this.$E1 = null;
	this.$qf = null;
	this.$D1 = null;
	this.$C1 = null;
	this.$B1 = false;
	this.$A1 = null;
	this.$_0 = new $C2E();
	this.$$0 = 0;
	this.$90 = null;
	this.$80 = null;
	this.$m0 = [];
	this.$HU = null;
	var _gthis = this;
	this.$e1.$Fm(function(texture,pair) {
		_gthis.$6r(texture,pair);
	});
	this.$e1.$Em($C1H.$Rq());
	$CcE.$6b.$eb(function() {
		_gthis.$e1.dispose();
	});
	$CHI.$Hr.clearColor(0,0,0,0);
	$CHI.$Hr.enable(3042);
	$CHI.$Hr.pixelStorei(37441,1);
	$CHI.$Hr.pixelStorei(3317,1);
	this.$M1 = $CHI.$Hr.createBuffer();
	$CHI.$Hr.bindBuffer(34962,this.$M1);
	this.$O1 = $CHI.$Hr.createBuffer();
	this.$P1 = $CHI.$Hr.createBuffer();
	this.$90 = this.$O1;
	this.$R1 = new $CTI(0);
	this.$S1 = new $CTI(1);
	this.$T1 = new $CTI(2);
	this.$U1 = new $CSI(0);
	this.$V1 = new $CSI(1);
	this.$W1 = new $CSI(2);
	this.$X1 = new $CVI();
	this.$70(16);
};
$hxClasses["$CiI"] = $CiI;
$CiI.__name__ = "$CiI";
$CiI.prototype = {
	$n0: function(width,height) {
		$CHI.$Hr.viewport(0,0,width,height);
		this.$b1 = width;
		this.$c1 = height;
	}
	,$o0: function() {
		this.$d1 = this.$d1 + 1 | 0;
		this.$t0(null);
	}
	,$p0: function() {
		this.$Gs();
		$CHI.$Hr.flush();
	}
	,$r0: function(texture) {
		if(texture == this.$qf) {
			this.$Gs();
			this.$qf = null;
		}
		this.$x0(texture);
		if(texture.$t1 != null) {
			this.$6r(texture,texture.$t1);
		} else {
			this.$e1.$lB(texture);
		}
	}
	,$s0: function(texture) {
		if(!texture.$8S) {
			return;
		}
		texture.$8S = false;
		var pair = this.$e1.$lB(texture,false);
		if(pair != null) {
			texture.$t1 = pair;
		} else {
			this.$u0(texture);
		}
		if(texture.$p1 != null) {
			texture.$p1.dispose();
			texture.$p1 = null;
		}
		texture.$q1 = null;
	}
	,$zr: function() {
		var result = $CHI.$Hr.createTexture();
		this.$gr(result);
		$CHI.$Hr.texParameteri(3553,10242,33071);
		$CHI.$Hr.texParameteri(3553,10243,33071);
		$CHI.$Hr.texParameteri(3553,10240,9729);
		$CHI.$Hr.texParameteri(3553,10241,9729);
		return result;
	}
	,$t0: function(texture) {
		this.$Gs();
		this.$A1 = null;
		if(this.$C1 != null) {
			this.$C1 = null;
			$CHI.$Hr.disable(3089);
		}
		this.$w0(texture);
		$CHI.$Hr.clear(16384);
	}
	,$u0: function(texture) {
		var imageSource = texture.$p1;
		var pair = texture.$8S ? this.$e1.$jB(texture) : texture.$t1;
		if(pair == null) {
			pair = new $ClI(this.$zr());
			if(texture.$8S) {
				var evictLRU = true;
				if(this.$e1.$Mm + texture.$u1() > this.$e1.$Nm) {
					var lru = this.$e1.$Hm();
					if(this.$d1 - lru.$s1 < 2) {
						evictLRU = false;
					}
				}
				this.$e1.$kB(texture,pair,evictLRU);
			} else {
				texture.$t1 = pair;
			}
			if(imageSource != null) {
				imageSource.upload(texture);
			} else {
				var internalformat = texture.$v1();
				var type = texture.$w1();
				$CHI.$Hr.texImage2D(3553,0,internalformat,texture.$3o,texture.$4o,0,internalformat,type,null);
			}
		} else if(imageSource != null && imageSource.isVideo() && texture.$s1 != this.$d1) {
			this.$gr(pair.$Jf);
			imageSource.upload(texture);
		}
		texture.$s1 = this.$d1;
		return pair;
	}
	,$gr: function(nativeTexture) {
		if(this.$K1 != nativeTexture) {
			this.$K1 = nativeTexture;
			$CHI.$Hr.bindTexture(3553,nativeTexture);
		}
	}
	,$v0: function(effect) {
		if(this.$J1 != effect) {
			effect.$mt(this.$J1);
			this.$J1 = effect;
		}
	}
	,$6r: function(texture,pair) {
		if(texture == this.$qf) {
			this.$Gs();
			this.$qf = null;
		}
		$CHI.$Hr.deleteTexture(pair.$Jf);
		if(pair.$PQ != null) {
			$CHI.$Hr.deleteTexture(pair.$PQ);
		}
	}
	,$w0: function(texture) {
		if(this.$H1 == texture) {
			return;
		}
		this.$H1 = texture;
		if(texture != null) {
			var framebuffer = texture.$r1;
			var attachment = null;
			if(framebuffer == null) {
				var result = $CHI.$Hr.createFramebuffer();
				framebuffer = result;
				texture.$r1 = result;
				this.$s0(texture);
				attachment = texture.$t1.$Jf;
			}
			$CHI.$Hr.bindFramebuffer(36160,texture.$r1);
			$CHI.$Hr.viewport(0,0,texture.$3o,texture.$4o);
			if(attachment != null) {
				$CHI.$Hr.framebufferTexture2D(36160,36064,3553,attachment,0);
			}
		} else {
			$CHI.$Hr.bindFramebuffer(36160,null);
			$CHI.$Hr.viewport(0,0,this.$b1,this.$c1);
		}
	}
	,$x0: function(texture) {
		if(texture == this.$A1) {
			this.$Gs();
			this.$A1 = null;
		}
		if(texture.$r1 != null) {
			$CHI.$Hr.deleteFramebuffer(texture.$r1);
			texture.$r1 = null;
		}
	}
	,$y0: function(renderTarget,blendMode,scissor,maskDepth,renderToStencil,texture) {
		if(texture.$cT != this.$qf) {
			this.$Gs();
			this.$qf = texture.$cT;
		}
		return this.$60(renderTarget,blendMode,scissor,maskDepth,renderToStencil,this.$z0(texture.$cT,renderToStencil));
	}
	,$z0: function(texture,renderToStencil) {
		if(renderToStencil) {
			return this.$S1;
		}
		if(texture.$q1 != null && texture.$q1.separateAlpha) {
			return this.$T1;
		} else {
			return this.$R1;
		}
	}
	,$00: function(renderTarget,blendMode,scissor,maskDepth,renderToStencil,pattern) {
		if(pattern.$cT != this.$qf) {
			this.$Gs();
			this.$qf = pattern.$cT;
		}
		if(pattern.$2l != this.$_0.$QC || pattern.$3l != this.$_0.$RC || pattern.$ze != this.$_0.$IP || pattern.$mT != this.$_0.$JP) {
			this.$Gs();
			this.$_0.$kB(pattern.$2l,pattern.$3l,pattern.$ze,pattern.$mT);
		}
		return this.$60(renderTarget,blendMode,scissor,maskDepth,renderToStencil,this.$10(pattern.$cT,renderToStencil));
	}
	,$10: function(texture,renderToStencil) {
		if(renderToStencil) {
			return this.$V1;
		}
		if(texture.$q1 != null && texture.$q1.separateAlpha) {
			return this.$W1;
		} else {
			return this.$U1;
		}
	}
	,$20: function(renderTarget,blendMode,scissor,maskDepth,renderToStencil) {
		return this.$60(renderTarget,blendMode,scissor,maskDepth,renderToStencil,this.$X1);
	}
	,$30: function(renderTarget,blendMode,scissor,maskDepth,renderToStencil,indices) {
		return this.$50(renderTarget,blendMode,scissor,maskDepth,renderToStencil,this.$X1,indices);
	}
	,$40: function(renderTarget,blendMode,scissor,maskDepth,renderToStencil,pattern,indices) {
		if(pattern.$cT != this.$qf) {
			this.$Gs();
			this.$qf = pattern.$cT;
		}
		if(pattern.$2l != this.$_0.$QC || pattern.$3l != this.$_0.$RC || pattern.$ze != this.$_0.$IP || pattern.$mT != this.$_0.$JP) {
			this.$Gs();
			this.$_0.$kB(pattern.$2l,pattern.$3l,pattern.$ze,pattern.$mT);
		}
		return this.$50(renderTarget,blendMode,scissor,maskDepth,renderToStencil,this.$10(pattern.$cT,renderToStencil),indices);
	}
	,$NR: function(renderTarget,blendMode,scissor,maskDepth,renderToStencil,effect,indexBuffer) {
		if(renderTarget != this.$A1) {
			this.$Gs();
			this.$A1 = renderTarget;
		}
		if(blendMode != this.$80) {
			this.$Gs();
			this.$80 = blendMode;
		}
		if(maskDepth != this.$$0) {
			this.$Gs();
			this.$$0 = maskDepth;
		}
		if(renderToStencil != this.$B1) {
			this.$Gs();
			this.$B1 = renderToStencil;
		}
		if(effect != this.$D1) {
			this.$Gs();
			effect.$NR();
			this.$D1 = effect;
		}
		if(indexBuffer != this.$90) {
			this.$Gs();
			this.$90 = indexBuffer;
		}
		if(scissor != null || this.$C1 != null) {
			if(scissor == null || this.$C1 == null || !this.$C1.$MQ(scissor)) {
				this.$Gs();
				this.$C1 = scissor != null ? scissor.$HQ(this.$C1) : null;
				this.$L1 = true;
			}
		}
	}
	,$50: function(renderTarget,blendMode,scissor,maskDepth,renderToStencil,effect,indices) {
		this.$NR(renderTarget,blendMode,scissor,maskDepth,renderToStencil,effect,this.$P1);
		var length = this.$m0.length;
		var offset = length / effect.$kt | 0;
		var _g = 0;
		while(_g < indices.length) this.$Q1.push(indices[_g++] + offset);
		return length;
	}
	,$60: function(renderTarget,blendMode,scissor,maskDepth,renderToStencil,effect) {
		this.$NR(renderTarget,blendMode,scissor,maskDepth,renderToStencil,effect,this.$O1);
		if(this.$Y1 >= this.$Z1) {
			this.$70(2 * this.$Z1);
		}
		++this.$Y1;
		var offset = this.$a1;
		this.$a1 += 4 * effect.$kt;
		return offset;
	}
	,$mm: function(renderTarget,filter,width,height) {
		var cacheKey = filter.$mg();
		var effect = this.$f1.h[cacheKey];
		if(effect == null) {
			effect = new $CWI(this,filter.$pg,filter.$og);
			this.$f1.h[cacheKey] = effect;
		}
		var offset = this.$60(renderTarget,kit_display_BlendMode.Copy,null,0,false,effect);
		var data = this.$HU;
		this.$qf = null;
		var u2 = width / renderTarget.$IP;
		var v2 = height / renderTarget.$JP;
		var x2 = 2 * u2 - 1;
		var y2 = 2 * v2 - 1;
		data[offset] = -1;
		data[++offset] = -1;
		data[++offset] = 0;
		data[++offset] = 0;
		data[++offset] = x2;
		data[++offset] = -1;
		data[++offset] = u2;
		data[++offset] = 0;
		data[++offset] = x2;
		data[++offset] = y2;
		data[++offset] = u2;
		data[++offset] = v2;
		data[++offset] = -1;
		data[++offset] = y2;
		data[++offset] = 0;
		data[++offset] = v2;
		this.$w0(renderTarget);
		this.$v0(effect);
		effect.$7t(filter,renderTarget,width,height);
		this.$Gs();
	}
	,$Gs: function() {
		if(this.$90 == this.$O1) {
			if(this.$Y1 < 1) {
				return;
			}
		} else if(this.$Q1.length < 1) {
			return;
		}
		this.$w0(this.$A1);
		if(this.$80 != this.$E1) {
			switch(this.$80._hx_index) {
			case 0:
				$CHI.$Hr.blendFunc(1,771);
				break;
			case 1:
				$CHI.$Hr.blendFunc(1,1);
				break;
			case 2:
				$CHI.$Hr.blendFunc(774,771);
				break;
			case 3:
				$CHI.$Hr.blendFunc(1,769);
				break;
			case 4:
				$CHI.$Hr.blendFunc(0,770);
				break;
			case 5:
				$CHI.$Hr.blendFunc(1,0);
				break;
			}
			this.$E1 = this.$80;
		}
		if(this.$$0 != this.$G1) {
			if(this.$$0 > 0) {
				if(this.$G1 == 0) {
					$CHI.$Hr.enable(2960);
				}
				if(this.$B1) {
					var mask = 1 << this.$$0 - 1;
					$CHI.$Hr.stencilMask(mask);
					if(this.$G1 < this.$$0) {
						$CHI.$Hr.clear(1024);
					}
					$CHI.$Hr.stencilFunc(514,mask - 1,255);
				} else {
					var mask = (1 << this.$$0) - 1;
					$CHI.$Hr.stencilFunc(514,mask,mask);
				}
			} else {
				$CHI.$Hr.disable(2960);
			}
			this.$G1 = this.$$0;
		}
		if(this.$B1 != this.$I1) {
			if(this.$B1) {
				$CHI.$Hr.stencilMask(1 << this.$$0 - 1);
				$CHI.$Hr.clear(1024);
				$CHI.$Hr.colorMask(false,false,false,false);
				$CHI.$Hr.stencilFunc(514,(1 << this.$$0 - 1) - 1,255);
				$CHI.$Hr.stencilOp(7680,7680,7682);
			} else {
				$CHI.$Hr.colorMask(true,true,true,true);
				var mask = (1 << this.$$0) - 1;
				$CHI.$Hr.stencilFunc(514,mask,mask);
				$CHI.$Hr.stencilOp(7680,7680,7680);
			}
			this.$I1 = this.$B1;
		}
		if(this.$L1) {
			if(this.$C1 != null) {
				$CHI.$Hr.enable(3089);
				$CHI.$Hr.scissor(this.$C1.$QC | 0,this.$C1.$RC | 0,this.$C1.$IP | 0,this.$C1.$JP | 0);
			} else {
				$CHI.$Hr.disable(3089);
			}
			this.$L1 = false;
		}
		if(this.$qf != null) {
			var pair = this.$u0(this.$qf);
			if(pair.$PQ != null) {
				$CHI.$Hr.activeTexture(33985);
				this.$gr(pair.$Jf);
				$CHI.$Hr.activeTexture(33984);
				this.$gr(pair.$PQ);
			} else {
				this.$gr(pair.$Jf);
			}
		}
		this.$v0(this.$D1);
		if(this.$D1 == this.$U1 || this.$D1 == this.$V1 || this.$D1 == this.$W1) {
			this.$D1.$wt(this.$_0.$QC / this.$qf.$IP,this.$_0.$RC / this.$qf.$JP,this.$_0.$IP / this.$qf.$IP,this.$_0.$JP / this.$qf.$JP);
		}
		if(this.$90 != this.$F1) {
			$CHI.$Hr.bindBuffer(34963,this.$90);
			this.$F1 = this.$90;
		}
		if(this.$F1 == this.$O1) {
			if(this.$N1) {
				this.$N1 = false;
				var indices = new Uint16Array(6 * this.$Z1);
				var _g = 0;
				var _g1 = this.$Z1;
				while(_g < _g1) {
					var ii = _g++;
					var ii6 = ii * 6;
					var ii4 = ii * 4;
					indices[ii6] = ii4;
					indices[ii6 + 1] = ii4 + 1;
					indices[ii6 + 2] = ii4 + 2;
					indices[ii6 + 3] = ii4 + 2;
					indices[ii6 + 4] = ii4 + 3;
					indices[ii6 + 5] = ii4;
				}
				$CHI.$Ir(34963,indices.byteLength,indices.buffer,35044);
			}
			$CHI.$Ir(34962,Float32Array.BYTES_PER_ELEMENT * this.$a1,this.$HU.buffer,35048);
			$CHI.$Hr.drawElements(4,6 * this.$Y1,5123,0);
			this.$Y1 = 0;
			this.$a1 = 0;
		} else {
			var indices = new Uint16Array(this.$Q1);
			$CHI.$Ir(34963,indices.byteLength,indices.buffer,35048);
			this.$Q1.length = 0;
			var verts = new Float32Array(this.$m0);
			$CHI.$Ir(34962,verts.byteLength,verts.buffer,35048);
			this.$m0.length = 0;
			$CHI.$Hr.drawElements(4,indices.length,5123,0);
		}
	}
	,$70: function(maxQuads) {
		if(maxQuads > 1024) {
			this.$Gs();
			return;
		}
		this.$Z1 = maxQuads;
		var newData = new Float32Array(maxQuads * 4 * 8);
		if(this.$HU != null) {
			newData.set(this.$HU,0);
		}
		this.$HU = newData;
		this.$N1 = true;
	}
	,__class__: $CiI
};
var $CjI = function(batcher,renderTarget) {
	this.$uo = null;
	this.$j1 = null;
	if($CjI.$k1 == null) {
		$CjI.$k1 = new Float32Array(8);
	}
	this.$8t = batcher;
	this.$$o = renderTarget;
};
$hxClasses["$CjI"] = $CjI;
$CjI.__name__ = "$CjI";
$CjI.__interfaces__ = [$CMH];
$CjI.prototype = {
	save: function() {
		var current = this.$uo;
		var state = this.$uo.next;
		if(state == null) {
			state = new $CkI();
			state.$cL = current;
			current.next = state;
		}
		current.$l1.$HQ(state.$l1);
		state.$nk = current.$nk;
		state.$pk = current.$pk;
		state.$rk = current.$rk;
		state.$PQ = current.$PQ;
		state.$TQ = current.$TQ;
		state.$UQ = current.$UQ != null ? current.$UQ.$HQ(state.$UQ) : null;
		state.$m1 = current.$m1;
		state.$n1 = current.$n1;
		this.$uo = state;
	}
	,translate: function(x,y) {
		var matrix = this.$uo.$l1;
		matrix.$6P += matrix.$2P * x + matrix.$4P * y;
		matrix.$7P += matrix.$3P * x + matrix.$5P * y;
	}
	,scale: function(x,y) {
		var matrix = this.$uo.$l1;
		matrix.$2P *= x;
		matrix.$3P *= x;
		matrix.$4P *= y;
		matrix.$5P *= y;
	}
	,rotate: function(rotation) {
		var matrix = this.$uo.$l1;
		rotation = rotation * 3.141592653589793 / 180;
		var sin = Math.sin(rotation);
		var cos = Math.cos(rotation);
		var m00 = matrix.$2P;
		var m10 = matrix.$3P;
		var m01 = matrix.$4P;
		var m11 = matrix.$5P;
		matrix.$2P = m00 * cos + m01 * sin;
		matrix.$3P = m10 * cos + m11 * sin;
		matrix.$4P = m01 * cos - m00 * sin;
		matrix.$5P = m11 * cos - m10 * sin;
	}
	,transform: function(m00,m10,m01,m11,m02,m12) {
		var state = this.$uo;
		$CjI.$SR.$kB(m00,m10,m01,m11,m02,m12);
		$C4B.$GC(state.$l1,$CjI.$SR,state.$l1);
	}
	,restore: function() {
		this.$uo = this.$uo.$cL;
	}
	,drawTexture: function(texture,x,y) {
		this.drawSubTexture(texture,x,y,0,0,texture.get_width(),texture.get_height());
	}
	,drawSubTexture: function(texture,destX,destY,sourceX,sourceY,sourceW,sourceH) {
		var state = this.$uo;
		var texture1 = texture;
		var root = texture1.$cT;
		var pos = this.$i1(destX,destY,sourceW,sourceH);
		var rootWidth = root.$IP;
		var rootHeight = root.$JP;
		var u1 = (texture1.$2l + sourceX) / rootWidth;
		var v1 = (texture1.$3l + sourceY) / rootHeight;
		var u2 = u1 + sourceW / rootWidth;
		var v2 = v1 + sourceH / rootHeight;
		var red = state.$nk;
		var green = state.$pk;
		var blue = state.$rk;
		var alpha = state.$PQ;
		var offset = this.$8t.$y0(this.$$o,state.$TQ,state.$UQ,state.$m1,state.$n1,texture1);
		var data = this.$8t.$HU;
		data[offset] = pos[0];
		data[++offset] = pos[1];
		data[++offset] = u1;
		data[++offset] = v1;
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
		data[++offset] = pos[2];
		data[++offset] = pos[3];
		data[++offset] = u2;
		data[++offset] = v1;
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
		data[++offset] = pos[4];
		data[++offset] = pos[5];
		data[++offset] = u2;
		data[++offset] = v2;
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
		data[++offset] = pos[6];
		data[++offset] = pos[7];
		data[++offset] = u1;
		data[++offset] = v2;
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
	}
	,drawPattern: function(texture,x,y,width,height) {
		var state = this.$uo;
		var texture1 = texture;
		var root = texture1.$cT;
		var pos = this.$i1(x,y,width,height);
		var u2 = width / root.$IP;
		var v2 = height / root.$JP;
		var red = state.$nk;
		var green = state.$pk;
		var blue = state.$rk;
		var alpha = state.$PQ;
		var offset = this.$8t.$00(this.$$o,state.$TQ,state.$UQ,state.$m1,state.$n1,texture1);
		var data = this.$8t.$HU;
		data[offset] = pos[0];
		data[++offset] = pos[1];
		data[++offset] = 0;
		data[++offset] = 0;
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
		data[++offset] = pos[2];
		data[++offset] = pos[3];
		data[++offset] = u2;
		data[++offset] = 0;
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
		data[++offset] = pos[4];
		data[++offset] = pos[5];
		data[++offset] = u2;
		data[++offset] = v2;
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
		data[++offset] = pos[6];
		data[++offset] = pos[7];
		data[++offset] = 0;
		data[++offset] = v2;
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
	}
	,fillRect: function(color,x,y,width,height) {
		var state = this.$uo;
		var pos = this.$i1(x,y,width,height);
		var red = state.$nk * (color & 16711680) / 16711680;
		var green = state.$pk * (color & 65280) / 65280;
		var blue = state.$rk * (color & 255) / 255;
		var alpha = state.$PQ;
		var offset = this.$8t.$20(this.$$o,state.$TQ,state.$UQ,state.$m1,state.$n1);
		var data = this.$8t.$HU;
		data[offset] = pos[0];
		data[++offset] = pos[1];
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
		data[++offset] = pos[2];
		data[++offset] = pos[3];
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
		data[++offset] = pos[4];
		data[++offset] = pos[5];
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
		data[++offset] = pos[6];
		data[++offset] = pos[7];
		data[++offset] = red;
		data[++offset] = green;
		data[++offset] = blue;
		data[++offset] = alpha;
	}
	,fillTriangles: function(color,verts,indices) {
		var state = this.$uo;
		var matrix = state.$l1;
		var m00 = matrix.$2P;
		var m01 = matrix.$4P;
		var m02 = matrix.$6P;
		var m10 = matrix.$3P;
		var m11 = matrix.$5P;
		var m12 = matrix.$7P;
		var red = state.$nk * (color & 16711680) / 16711680;
		var green = state.$pk * (color & 65280) / 65280;
		var blue = state.$rk * (color & 255) / 255;
		var alpha = state.$PQ;
		var offset = this.$8t.$30(this.$$o,state.$TQ,state.$UQ,state.$m1,state.$n1,indices);
		var data = this.$8t.$m0;
		var ii = 0;
		var ll = verts.length;
		while(ii < ll) {
			var x = verts[ii++];
			var y = verts[ii++];
			data[offset++] = x * m00 + y * m01 + m02;
			data[offset++] = x * m10 + y * m11 + m12;
			data[offset++] = red;
			data[offset++] = green;
			data[offset++] = blue;
			data[offset++] = alpha;
		}
	}
	,drawTriangles: function(texture,verts,indices,uvs) {
		var state = this.$uo;
		var texture1 = texture;
		var root = texture1.$cT;
		var matrix = state.$l1;
		var m00 = matrix.$2P;
		var m01 = matrix.$4P;
		var m02 = matrix.$6P;
		var m10 = matrix.$3P;
		var m11 = matrix.$5P;
		var m12 = matrix.$7P;
		var red = state.$nk;
		var green = state.$pk;
		var blue = state.$rk;
		var alpha = state.$PQ;
		var offset = this.$8t.$40(this.$$o,state.$TQ,state.$UQ,state.$m1,state.$n1,texture1,indices);
		var data = this.$8t.$m0;
		var scaleU = texture1.$ze / root.$IP;
		var scaleV = texture1.$mT / root.$JP;
		var uvIdx = 0;
		var ii = 0;
		var ll = verts.length;
		while(ii < ll) {
			var x = verts[ii++];
			var y = verts[ii++];
			data[offset++] = x * m00 + y * m01 + m02;
			data[offset++] = x * m10 + y * m11 + m12;
			if(uvs != null) {
				var u = uvIdx++;
				var v = uvs[uvIdx++];
				data[offset++] = scaleU * uvs[u];
				data[offset++] = scaleV * v;
			} else {
				data[offset++] = x / root.$IP;
				data[offset++] = y / root.$JP;
			}
			data[offset++] = red;
			data[offset++] = green;
			data[offset++] = blue;
			data[offset++] = alpha;
		}
	}
	,fillPolygon: function(color,points) {
		var indexes = $CRH.$Wo(points);
		if(indexes != null) {
			this.fillTriangles(color,points,indexes);
		}
	}
	,drawPolygon: function(texture,points) {
		var indexes = $CRH.$Wo(points);
		if(indexes != null) {
			this.drawTriangles(texture,points,indexes);
		}
	}
	,drawCircle: function(texture,centerX,centerY,radius,edges) {
		if(edges == null) {
			edges = 50;
		}
		var verts = [];
		var indices = [];
		if($CRH.$Ro(verts,indices,centerX,centerY,radius,radius,edges)) {
			this.drawTriangles(texture,verts,indices);
		}
	}
	,fillCircle: function(color,centerX,centerY,radius,edges) {
		if(edges == null) {
			edges = 50;
		}
		var verts = [];
		var indices = [];
		if($CRH.$Ro(verts,indices,centerX,centerY,radius,radius,edges)) {
			this.fillTriangles(color,verts,indices);
		}
	}
	,strokeCircle: function(color,centerX,centerY,radius,strokeWidth,edges) {
		if(edges == null) {
			edges = 50;
		}
		var verts = [];
		var indices = [];
		if($CRH.$Uo(verts,indices,centerX,centerY,radius,radius,strokeWidth,edges)) {
			this.fillTriangles(color,verts,indices);
		}
	}
	,drawEllipse: function(texture,centerX,centerY,radiusX,radiusY,edges) {
		if(edges == null) {
			edges = 50;
		}
		var verts = [];
		var indices = [];
		if($CRH.$Ro(verts,indices,centerX,centerY,radiusX,radiusY,edges)) {
			this.drawTriangles(texture,verts,indices);
		}
	}
	,fillEllipse: function(color,centerX,centerY,radiusX,radiusY,edges) {
		if(edges == null) {
			edges = 50;
		}
		var verts = [];
		var indices = [];
		if($CRH.$Ro(verts,indices,centerX,centerY,radiusX,radiusY,edges)) {
			this.fillTriangles(color,verts,indices);
		}
	}
	,strokeEllipse: function(color,centerX,centerY,radiusX,radiusY,strokeWidth,edges) {
		if(edges == null) {
			edges = 50;
		}
		var verts = [];
		var indices = [];
		if($CRH.$Uo(verts,indices,centerX,centerY,radiusX,radiusY,strokeWidth,edges)) {
			this.fillTriangles(color,verts,indices);
		}
	}
	,fillArc: function(color,centerX,centerY,radius,startAngle,angle,edges) {
		if(edges == null) {
			edges = 50;
		}
		var verts = [];
		var indices = [];
		if($CRH.$So(verts,indices,centerX,centerY,radius,startAngle * 3.141592653589793 / 180,angle * 3.141592653589793 / 180,edges)) {
			this.fillTriangles(color,verts,indices);
		}
	}
	,strokeArc: function(color,centerX,centerY,radius,startAngle,angle,strokeWidth,edges) {
		if(edges == null) {
			edges = 50;
		}
		var verts = [];
		var indices = [];
		if($CRH.$To(verts,indices,centerX,centerY,radius,startAngle * 3.141592653589793 / 180,angle * 3.141592653589793 / 180,strokeWidth,edges)) {
			this.fillTriangles(color,verts,indices);
		}
	}
	,strokeLines: function(color,points,thickness) {
		var verts = [];
		var indices = [];
		if($CRH.$Vo(verts,indices,points,thickness)) {
			this.fillTriangles(color,verts,indices);
		}
	}
	,drawLines: function(texture,points,thickness) {
		var verts = [];
		var indices = [];
		if($CRH.$Vo(verts,indices,points,thickness)) {
			this.drawTriangles(texture,verts,indices);
		}
	}
	,multiplyAlpha: function(factor) {
		this.$uo.$PQ *= factor;
	}
	,setAlpha: function(alpha) {
		this.$uo.$PQ = alpha;
	}
	,tint: function(red,green,blue) {
		var state = this.$uo;
		state.$nk *= red;
		state.$pk *= green;
		state.$rk *= blue;
	}
	,setBlendMode: function(blendMode) {
		this.$uo.$TQ = blendMode;
	}
	,beginMask: function() {
		var state = this.$uo;
		++state.$m1;
		state.$n1 = true;
	}
	,endMask: function() {
		this.$uo.$n1 = false;
	}
	,applyScissor: function(x,y,width,height) {
		var state = this.$uo;
		var rect = $CjI.$k1;
		rect[0] = x;
		rect[1] = y;
		rect[2] = x + width;
		rect[3] = y + height;
		state.$l1.$EQ(rect,4,rect);
		this.$j1.$EQ(rect,4,rect);
		x = rect[0];
		y = rect[1];
		width = rect[2] - x;
		height = rect[3] - y;
		if(width < 0) {
			x += width;
			width = -width;
		}
		if(height < 0) {
			y += height;
			height = -height;
		}
		state.$o1(x,y,width,height);
	}
	,willRender: function() {
		this.$8t.$o0();
	}
	,didRender: function() {
		this.$8t.$p0();
	}
	,onResize: function(width,height) {
		this.$uo = new $CkI();
		var flip = this.$$o != null ? -1 : 1;
		this.$uo.$l1.$kB(2 / width,0,0,flip * -2 / height,-1,flip);
		this.$j1 = new $C4B();
		this.$j1.$kB(2 / width,0,0,2 / height,-1,-1);
		this.$j1.$BQ();
	}
	,$i1: function(x,y,width,height) {
		var x2 = x + width;
		var y2 = y + height;
		var pos = $CjI.$k1;
		pos[0] = x;
		pos[1] = y;
		pos[2] = x2;
		pos[3] = y;
		pos[4] = x2;
		pos[5] = y2;
		pos[6] = x;
		pos[7] = y2;
		this.$uo.$l1.$EQ(pos,8,pos);
		return pos;
	}
	,__class__: $CjI
};
var $CkI = function() {
	this.next = null;
	this.$cL = null;
	this.$n1 = false;
	this.$m1 = 0;
	this.$PQ = 1;
	this.$rk = 1;
	this.$pk = 1;
	this.$nk = 1;
	this.$UQ = null;
	this.$TQ = kit_display_BlendMode.Normal;
	this.$l1 = new $C4B();
};
$hxClasses["$CkI"] = $CkI;
$CkI.__name__ = "$CkI";
$CkI.prototype = {
	$o1: function(x,y,width,height) {
		if(this.$UQ != null) {
			var a = this.$UQ.$QC;
			var x1 = a > x ? a : x;
			var a = this.$UQ.$RC;
			var y1 = a > y ? a : y;
			var a = this.$UQ.$QC + this.$UQ.$IP;
			var b = x + width;
			var a1 = this.$UQ.$RC + this.$UQ.$JP;
			var b1 = y + height;
			x = x1;
			y = y1;
			var b2 = (a < b ? a : b) - x1;
			width = 0.0 > b2 ? 0.0 : b2;
			var b = (a1 < b1 ? a1 : b1) - y1;
			height = 0.0 > b ? 0.0 : b;
		} else {
			this.$UQ = new $C2E();
		}
		this.$UQ.$kB(Math.round(x),Math.round(y),Math.round(width),Math.round(height));
	}
	,__class__: $CkI
};
var $ClI = function(color) {
	this.$PQ = null;
	this.$Jf = color;
};
$hxClasses["$ClI"] = $ClI;
$ClI.__name__ = "$ClI";
$ClI.prototype = {
	__class__: $ClI
};
var $CmI = function(root,width,height) {
	$CrG.call(this,root,width,height);
};
$hxClasses["$CmI"] = $CmI;
$CmI.__name__ = "$CmI";
$CmI.__super__ = $CrG;
$CmI.prototype = $extend($CrG.prototype,{
	__class__: $CmI
});
var $CnI = function(batcher,pixelWidth,pixelHeight,pixelScale) {
	this.$9o = null;
	this.$x1 = kit_display_TextureFormat.RGBA;
	this.$t1 = null;
	this.$8S = true;
	this.$s1 = -1;
	this.$r1 = null;
	this.$q1 = null;
	this.$p1 = null;
	$CfG.call(this);
	this.$8t = batcher;
	this.$3o = pixelWidth;
	this.$4o = pixelHeight;
	this.$Dd = pixelScale;
	this.$IP = pixelWidth / pixelScale;
	this.$JP = pixelHeight / pixelScale;
};
$hxClasses["$CnI"] = $CnI;
$CnI.__name__ = "$CnI";
$CnI.__interfaces__ = [$CXH];
$CnI.__super__ = $CfG;
$CnI.prototype = $extend($CfG.prototype,{
	createTexture: function(width,height) {
		return new $CmI(this,Math.ceil(width),Math.ceil(height));
	}
	,getGraphics: function() {
		if(this.$9o == null) {
			this.$9o = new $CjI(this.$8t,this);
			this.$9o.onResize(this.$3o,this.$4o);
		}
		return this.$9o;
	}
	,clear: function() {
		this.$8t.$t0(this);
	}
	,renderFilter: function(filter,width,height) {
		this.$8t.$mm(this,filter,width,height);
	}
	,$u1: function() {
		var bytesPerPixel;
		switch(this.$x1._hx_index) {
		case 1:
			bytesPerPixel = 2;
			break;
		case 2:
			bytesPerPixel = 3;
			break;
		case 3:
			bytesPerPixel = 2;
			break;
		default:
			bytesPerPixel = 4;
		}
		return bytesPerPixel * this.$3o * this.$4o;
	}
	,$v1: function() {
		switch(this.$x1._hx_index) {
		case 2:case 3:
			return 6407;
		default:
			return 6408;
		}
	}
	,$w1: function() {
		switch(this.$x1._hx_index) {
		case 1:
			return 32819;
		case 3:
			return 33635;
		default:
			return 5121;
		}
	}
	,$Ql: function() {
		this.$8t.$r0(this);
		if(this.$p1 != null) {
			this.$p1.dispose();
			this.$p1 = null;
		}
		this.$q1 = null;
		this.$r1 = null;
		this.$t1 = null;
		this.$9o = null;
	}
	,__class__: $CnI
});
var $CpI = function() { };
$hxClasses["$CpI"] = $CpI;
$CpI.__name__ = "$CpI";
$CpI.prototype = {
	$3g: function(director,from,to) {
		this.$y1 = director;
		this.$7c = from;
		this.$8c = to;
	}
	,$5K: function(dt) {
		return true;
	}
	,$tj: function() {
	}
	,__class__: $CpI
};
var $CqI = function(duration,ease) {
	this.$9c = duration;
	this.$01 = ease != null ? ease : $CiE.$Sc;
};
$hxClasses["$CqI"] = $CqI;
$CqI.__name__ = "$CqI";
$CqI.__super__ = $CpI;
$CqI.prototype = $extend($CpI.prototype,{
	$3g: function(director,from,to) {
		$CpI.prototype.$3g.call(this,director,from,to);
		this.$11 = 0;
	}
	,$5K: function(dt) {
		this.$11 += dt;
		return this.$11 >= this.$9c;
	}
	,$z1: function(from,to) {
		return from + (to - from) * this.$01(this.$11 / this.$9c);
	}
	,__class__: $CqI
});
var $CrI = function(filter,duration,ease) {
	this.$41 = null;
	this.$31 = null;
	$CqI.call(this,duration,ease);
	this.$21 = filter;
};
$hxClasses["$CrI"] = $CrI;
$CrI.__name__ = "$CrI";
$CrI.__super__ = $CqI;
$CrI.prototype = $extend($CqI.prototype,{
	$3g: function(director,from,to) {
		$CqI.prototype.$3g.call(this,director,from,to);
		var width = Math.ceil(director.get_width());
		var height = Math.ceil(director.get_height());
		var sprite = this.$7c.$na[10];
		if(sprite == null) {
			var tmp = this.$7c;
			sprite = new $C6B();
			tmp.$8(sprite);
		}
		sprite.get_filters().push(this.$21);
		sprite.set_filterBounds(new $C2E(0,0,width,height));
		var sprite = this.$8c.$na[10];
		if(sprite == null) {
			var tmp = this.$8c;
			sprite = new $C6B();
			tmp.$8(sprite);
		}
		sprite.set_visible(false);
		this.$31 = $CcE.$Gc.$wa.createTexture(width,height);
		this.$41 = $CcE.$Gc.$wa.createTexture(width,height);
		this.$21.$kg("uFrom",this.$31);
		this.$21.$kg("uTo",this.$41);
		this.$21.$Pg = true;
	}
	,$5K: function(dt) {
		var done = $CqI.prototype.$5K.call(this,dt);
		var progress = this.$01(this.$11 / this.$9c);
		this.$21.$Xg("uProgress",progress);
		this.$21.$rI = false;
		this.$31.clear();
		$C6B.$KR(this.$7c,this.$31.get_graphics(),true);
		this.$21.$rI = true;
		var sprite = this.$8c.$na[10];
		sprite.set_visible(true);
		this.$41.clear();
		$C6B.$KR(this.$8c,this.$41.get_graphics(),true);
		sprite.set_visible(false);
		return done;
	}
	,$tj: function() {
		$CqI.prototype.$tj.call(this);
		HxOverrides.remove(this.$7c.$na[10].get_filters(),this.$21);
		this.$8c.$na[10].set_visible(true);
		this.$31.dispose();
		this.$41.dispose();
	}
	,__class__: $CrI
});
var $CsI = function(duration,ease) {
	var filter = new $CtF();
	filter.$Vg("uniform sampler2D uFrom,uTo;uniform float uProgress;uniform vec2 uDirection;uniform float uSmoothness;void main(){vec2 a=vFilterCoord;vec2 b=normalize(uDirection);b/=abs(b.x)+abs(b.y);float c=dot(b,vec2(0.5,0.5));float d=smoothstep(-uSmoothness,0.0,dot(b,a)-(c-0.5+uProgress*(1.+uSmoothness)));gl_FragColor=mix(texture2D(uTo,a),texture2D(uFrom,a),d);}");
	$CrI.call(this,filter,duration,ease);
	this.set_smoothness(0.5);
	this.$61(1.0,1.0);
};
$hxClasses["$CsI"] = $CsI;
$CsI.__name__ = "$CsI";
$CsI.__super__ = $CrI;
$CsI.prototype = $extend($CrI.prototype,{
	$61: function(x,y) {
		this.$21.$Yg("uDirection",x,y);
		return this;
	}
	,set_smoothness: function(smoothness) {
		this.$21.$Xg("uSmoothness",smoothness);
		return this.$91 = smoothness;
	}
	,__class__: $CsI
	,__properties__: {set_smoothness:"set_smoothness"}
});
var $CtI = function() {
	this.$mT = -1;
	this.$ze = -1;
	this.$M2 = null;
	$CtB.call(this);
	this.$bi = [];
	this.$_1 = [];
	this.$ni = new $CRE();
};
$hxClasses["$CtI"] = $CtI;
$CtI.__name__ = "$CtI";
$CtI.__super__ = $CtB;
$CtI.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 17;
	}
	,$B2: function(scene,transition) {
		this.$C2(scene.$pO != null ? scene.$pO : new $CRE().$8(scene),transition);
	}
	,$C2: function(scene,transition) {
		var _gthis = this;
		this.$K2();
		var oldTop = this.get_topScene();
		if(oldTop != null) {
			this.$L2(oldTop,scene,transition,function() {
				_gthis.$G2(oldTop);
			});
		} else {
			this.$8(scene);
			this.$J2();
		}
	}
	,$E2: function(scene,transition) {
		this.$F2(scene.$pO != null ? scene.$pO : new $CRE().$8(scene),transition);
	}
	,$F2: function(scene,transition) {
		var _gthis = this;
		this.$K2();
		var oldTop = this.get_topScene();
		if(oldTop != null) {
			if(oldTop == scene) {
				return;
			}
			this.$bi.pop();
			while(this.$bi.length > 0 && this.$bi[this.$bi.length - 1] != scene) this.$bi.pop().dispose();
			this.$L2(oldTop,scene,transition,function() {
				_gthis.$H2(oldTop);
			});
		} else {
			this.$C2(scene,transition);
		}
	}
	,$rO: function() {
		this.$pO.$rB(this.$ni);
	}
	,$sO: function() {
		this.$K2();
		var _g = 0;
		var _g1 = this.$bi;
		while(_g < _g1.length) _g1[_g++].dispose();
		this.$bi = [];
		this.$_1 = [];
		this.$ni.dispose();
	}
	,$vO: function(dt) {
		if(this.$M2 != null && this.$M2.$5K(dt)) {
			this.$K2();
		}
	}
	,get_topScene: function() {
		var ll = this.$bi.length;
		if(ll > 0) {
			return this.$bi[ll - 1];
		} else {
			return null;
		}
	}
	,$8: function(scene) {
		var oldTop = this.get_topScene();
		if(oldTop != null) {
			this.$ni.$sB(oldTop);
		}
		HxOverrides.remove(this.$bi,scene);
		this.$bi.push(scene);
		this.$ni.$rB(scene);
	}
	,$G2: function(scene) {
		var events = scene.$na[3];
		if(events != null) {
			events.$cP.$fb();
		}
	}
	,$H2: function(scene) {
		this.$G2(scene);
		scene.dispose();
	}
	,$I2: function(scene) {
		var events = scene.$na[3];
		if(events != null) {
			events.$bP.$fb();
		}
	}
	,$J2: function() {
		var ii = this.$bi.length;
		while(ii > 0) {
			var comp = this.$bi[--ii].$na[3];
			if(comp == null || comp.$dP) {
				break;
			}
		}
		this.$_1 = this.$bi.length > 0 ? this.$bi.slice(ii,this.$bi.length - 1) : [];
		var scene = this.get_topScene();
		if(scene != null) {
			this.$I2(scene);
		}
	}
	,$K2: function() {
		if(this.$M2 != null) {
			this.$M2.$tj();
			this.$M2 = null;
			this.$J2();
		}
	}
	,$L2: function(from,to,transition,onComplete) {
		this.$K2();
		this.$8(to);
		if(transition != null) {
			this.$_1.push(from);
			this.$M2 = new $CuI(from,to,transition,onComplete);
			this.$M2.$3g(this);
		} else {
			onComplete();
			this.$J2();
		}
	}
	,get_width: function() {
		if(this.$ze < 0) {
			return $CcE.$Gc.$xa.get_width();
		} else {
			return this.$ze;
		}
	}
	,get_height: function() {
		if(this.$mT < 0) {
			return $CcE.$Gc.$xa.get_height();
		} else {
			return this.$mT;
		}
	}
	,__class__: $CtI
	,__properties__: $extend($CtB.prototype.__properties__,{get_$JP:"get_$JP",get_$IP:"get_$IP",get_$$1:"get_$$1"})
});
var $CuI = function(from,to,transition,onComplete) {
	this.$7c = from;
	this.$8c = to;
	this.$N2 = transition;
	this.$O2 = onComplete;
};
$hxClasses["$CuI"] = $CuI;
$CuI.__name__ = "$CuI";
$CuI.prototype = {
	$3g: function(director) {
		this.$N2.$3g(director,this.$7c,this.$8c);
	}
	,$5K: function(dt) {
		return this.$N2.$5K(dt);
	}
	,$tj: function() {
		this.$N2.$tj();
		this.$O2();
	}
	,__class__: $CuI
};
var $CvI = function(duration,ease) {
	var filter = new $CtF();
	filter.$Vg("uniform sampler2D uFrom,uTo;uniform float uProgress;vec2 a(float b,float c,float d){float e=b*b+b+d;float f=0.03*b*cos(10.0*(b+c));return vec2(0,f);}void main(){vec2 g=vFilterCoord;gl_FragColor=mix(texture2D(uFrom,g+a(uProgress,g.x,0.0)),texture2D(uTo,g+a(1.0-uProgress,g.x,3.14)),uProgress);}");
	$CrI.call(this,filter,duration,ease);
};
$hxClasses["$CvI"] = $CvI;
$CvI.__name__ = "$CvI";
$CvI.__super__ = $CrI;
$CvI.prototype = $extend($CrI.prototype,{
	__class__: $CvI
});
var $CwI = function(duration,ease) {
	$CqI.call(this,duration,ease);
};
$hxClasses["$CwI"] = $CwI;
$CwI.__name__ = "$CwI";
$CwI.__super__ = $CqI;
$CwI.prototype = $extend($CqI.prototype,{
	$3g: function(director,from,to) {
		$CqI.prototype.$3g.call(this,director,from,to);
		var sprite = this.$8c.$na[10];
		if(sprite == null) {
			var tmp = this.$8c;
			sprite = new $C6B();
			tmp.$8(sprite);
		}
		sprite.$PQ.set__(0);
	}
	,$5K: function(dt) {
		var done = $CqI.prototype.$5K.call(this,dt);
		this.$8c.$na[10].$PQ.set__(this.$z1(0,1));
		return done;
	}
	,$tj: function() {
		this.$8c.$na[10].$PQ.set__(1);
	}
	,__class__: $CwI
});
var $CxI = function(duration,ease) {
	var filter = new $CtF();
	filter.$Vg("uniform sampler2D uFrom,uTo;uniform float uProgress;uniform float uSize;void main(){float a=(1.0-uProgress);float b=min(uProgress,a);float c=(uSize*b)+1.0;vec2 d=(floor((gl_FragCoord.xy+c*0.5)/c)*c)/uFilterSize.xy;vec4 e=texture2D(uFrom,d);vec4 f=texture2D(uTo,d);gl_FragColor=mix(e,f,uProgress);}");
	$CrI.call(this,filter,duration,ease);
	this.set_size(50);
};
$hxClasses["$CxI"] = $CxI;
$CxI.__name__ = "$CxI";
$CxI.__super__ = $CrI;
$CxI.prototype = $extend($CrI.prototype,{
	set_size: function(size) {
		this.$21.$Xg("uSize",size);
		return this.$P2 = size;
	}
	,__class__: $CxI
	,__properties__: {set_size:"set_size"}
});
var $CyI = function(duration,ease) {
	var filter = new $CtF();
	filter.$Vg("uniform sampler2D uFrom,uTo;uniform float uProgress;uniform float uAmplitude;uniform float uSpeed;void main(){vec2 a=vFilterCoord;vec2 b=a-vec2(.5);float c=length(b);vec2 d=b*(sin(uProgress*c*uAmplitude-uProgress*uSpeed)+.5)/30.;gl_FragColor=mix(texture2D(uFrom,a+d),texture2D(uTo,a),smoothstep(0.2,1.0,uProgress));}");
	$CrI.call(this,filter,duration,ease);
	this.set_amplitude(100);
	this.set_speed(50);
};
$hxClasses["$CyI"] = $CyI;
$CyI.__name__ = "$CyI";
$CyI.__super__ = $CrI;
$CyI.prototype = $extend($CrI.prototype,{
	set_amplitude: function(amplitude) {
		this.$21.$Xg("uAmplitude",amplitude);
		return this.$R2 = amplitude;
	}
	,set_speed: function(speed) {
		this.$21.$Xg("uSpeed",speed);
		return this.$S2 = speed;
	}
	,__class__: $CyI
	,__properties__: {set_speed:"set_speed",set_amplitude:"set_amplitude"}
});
var $CzI = function(duration,ease) {
	this.$T2 = 2;
	$CqI.call(this,duration,ease);
};
$hxClasses["$CzI"] = $CzI;
$CzI.__name__ = "$CzI";
$CzI.__super__ = $CqI;
$CzI.prototype = $extend($CqI.prototype,{
	$3g: function(director,from,to) {
		$CqI.prototype.$3g.call(this,director,from,to);
		switch(this.$T2) {
		case 0:
			this.$ke = 0;
			this.$le = -this.$y1.get_height();
			break;
		case 1:
			this.$ke = 0;
			this.$le = this.$y1.get_height();
			break;
		case 2:
			this.$ke = -this.$y1.get_width();
			this.$le = 0;
			break;
		case 3:
			this.$ke = this.$y1.get_width();
			this.$le = 0;
			break;
		}
		var sprite = this.$7c.$na[10];
		if(sprite == null) {
			var tmp = this.$7c;
			sprite = new $C6B();
			tmp.$8(sprite);
		}
		sprite.$sQ(0,0);
		var sprite = this.$8c.$na[10];
		if(sprite == null) {
			var tmp = this.$8c;
			sprite = new $C6B();
			tmp.$8(sprite);
		}
		sprite.$sQ(-this.$ke,-this.$le);
	}
	,$5K: function(dt) {
		var done = $CqI.prototype.$5K.call(this,dt);
		this.$7c.$na[10].$sQ(this.$z1(0,this.$ke),this.$z1(0,this.$le));
		this.$8c.$na[10].$sQ(this.$z1(-this.$ke,0),this.$z1(-this.$le,0));
		return done;
	}
	,$tj: function() {
		this.$7c.$na[10].$sQ(0,0);
		this.$8c.$na[10].$sQ(0,0);
	}
	,__class__: $CzI
});
var $C0I = function() { };
$hxClasses["$C0I"] = $C0I;
$C0I.__name__ = "$C0I";
$C0I.__isInterface__ = true;
$C0I.prototype = {
	__class__: $C0I
};
var $C1I = function(value,to,seconds,easing) {
	this.$Lb = value;
	this.$8c = to;
	this.$V2 = seconds;
	this.$$c = easing;
};
$hxClasses["$C1I"] = $C1I;
$C1I.__name__ = "$C1I";
$C1I.__interfaces__ = [$C0I];
$C1I.prototype = {
	update: function(dt,actor) {
		if(this.$U2 == null) {
			this.$U2 = new $CjE(this.$Lb.$Lb,this.$8c,this.$V2,this.$$c);
			this.$Lb.set_behavior(this.$U2);
			this.$Lb.$5K(dt);
		}
		if(this.$Lb.$vP != this.$U2) {
			var overtime = this.$U2.$6c - this.$V2;
			this.$U2 = null;
			if(overtime > 0) {
				return dt - overtime;
			} else {
				return 0;
			}
		}
		return -1;
	}
	,__class__: $C1I
};
var $C2I = function(fn) {
	this.$Rc = fn;
};
$hxClasses["$C2I"] = $C2I;
$C2I.__name__ = "$C2I";
$C2I.__interfaces__ = [$C0I];
$C2I.prototype = {
	update: function(dt,actor) {
		this.$Rc();
		return 0;
	}
	,__class__: $C2I
};
var $C3I = function(seconds) {
	this.$9c = seconds;
	this.$11 = 0;
};
$hxClasses["$C3I"] = $C3I;
$C3I.__name__ = "$C3I";
$C3I.__interfaces__ = [$C0I];
$C3I.prototype = {
	update: function(dt,actor) {
		this.$11 += dt;
		if(this.$11 >= this.$9c) {
			var overtime = this.$11 - this.$9c;
			this.$11 = 0;
			return dt - overtime;
		}
		return -1;
	}
	,__class__: $C3I
};
var $C6I = function() {
	$CtB.call(this);
	this.$a2();
};
$hxClasses["$C6I"] = $C6I;
$C6I.__name__ = "$C6I";
$C6I.__super__ = $CtB;
$C6I.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 11;
	}
	,$SP: function(action) {
		var handle = new $C7I(action);
		this.$b2.push(handle);
		return handle;
	}
	,$a2: function() {
		this.$b2 = [];
	}
	,$vO: function(dt) {
		var ii = 0;
		while(ii < this.$b2.length) {
			var handle = this.$b2[ii];
			if(handle.$c2 || handle.$d2.update(dt,this.$pO) >= 0) {
				this.$b2.splice(ii,1);
			} else {
				++ii;
			}
		}
	}
	,__class__: $C6I
});
var $C7I = function(action) {
	this.$c2 = false;
	this.$d2 = action;
};
$hxClasses["$C7I"] = $C7I;
$C7I.__name__ = "$C7I";
$C7I.__interfaces__ = [$CsB];
$C7I.prototype = {
	dispose: function() {
		this.$c2 = true;
		this.$d2 = null;
	}
	,__class__: $C7I
};
var $C8I = function(actions) {
	this.$e2 = 0;
	this.$W2 = actions != null ? actions.slice() : [];
};
$hxClasses["$C8I"] = $C8I;
$C8I.__name__ = "$C8I";
$C8I.__interfaces__ = [$C0I];
$C8I.prototype = {
	update: function(dt,actor) {
		var total = 0.0;
		while(true) {
			var action = this.$W2[this.$e2];
			if(action != null) {
				var spent = action.update(dt - total,actor);
				if(spent >= 0) {
					total += spent;
				} else {
					return -1;
				}
			}
			++this.$e2;
			if(this.$e2 >= this.$W2.length) {
				this.$e2 = 0;
				break;
			} else if(total > dt) {
				return -1;
			}
		}
		return total;
	}
	,__class__: $C8I
};
var $C9I = function(attachment,slot) {
	$C6B.call(this);
	this.$f2 = attachment;
	this.$g2 = slot;
	this.$0e = attachment.$gDB().$Mf.$$EB;
	this.$h2 = new Array(attachment.$MDB);
};
$hxClasses["$C9I"] = $C9I;
$C9I.__name__ = "$C9I";
$C9I.__super__ = $C6B;
$C9I.prototype = $extend($C6B.prototype,{
	$1Q: function(g) {
		var _this = this.$f2;
		var slot = this.$g2;
		var count = this.$h2.length;
		var worldVertices = this.$h2;
		count = (count >> 1) * 2;
		var skeleton = slot.$LCB.$j2;
		var deformArray = slot.$q5;
		var vertices = _this.$LDB;
		var bones = _this.$g_;
		if(bones == null) {
			if(deformArray.length > 0) {
				vertices = deformArray;
			}
			var bone = slot.$LCB;
			var x = bone.$A$;
			var y = bone.$C$;
			var a = bone.$TD;
			var b = bone.$6;
			var c = bone.$_G;
			var d = bone.$B$;
			var v = 0;
			var w = 0;
			while(w < count) {
				var vx = vertices[v];
				var vy = vertices[v + 1];
				worldVertices[w] = vx * a + vy * b + x;
				worldVertices[w + 1] = vx * c + vy * d + y;
				v += 2;
				w += 2;
			}
		} else {
			var v = 0;
			while(true) break;
			var skeletonBones = skeleton.$n_();
			if(deformArray.length == 0) {
				var w = 0;
				var b = 0;
				while(w < count) {
					var wx = 0;
					var wy = 0;
					var n = bones[v++];
					n += v;
					while(v < n) {
						var result = skeletonBones[bones[v]];
						var vx = vertices[b];
						var vy = vertices[b + 1];
						var weight = vertices[b + 2];
						wx += (vx * result.$TD + vy * result.$6 + result.$A$) * weight;
						wy += (vx * result.$_G + vy * result.$B$ + result.$C$) * weight;
						++v;
						b += 3;
					}
					worldVertices[w] = wx;
					worldVertices[w + 1] = wy;
					w += 2;
				}
			} else {
				var w = 0;
				var b = 0;
				var f = 0;
				while(w < count) {
					var wx = 0;
					var wy = 0;
					var n = bones[v++];
					n += v;
					while(v < n) {
						var result = skeletonBones[bones[v]];
						var vx = vertices[b] + deformArray[f];
						var vy = vertices[b + 1] + deformArray[f + 1];
						var weight = vertices[b + 2];
						wx += (vx * result.$TD + vy * result.$6 + result.$A$) * weight;
						wy += (vx * result.$_G + vy * result.$B$ + result.$C$) * weight;
						++v;
						b += 3;
						f += 2;
					}
					worldVertices[w] = wx;
					worldVertices[w + 1] = wy;
					w += 2;
				}
			}
		}
		g.drawTriangles(this.$0e,this.$h2,this.$f2.$S3,this.$f2.$cDB);
	}
	,__class__: $C9I
});
var $C$I = function(attachment,slot) {
	$C6B.call(this);
	this.$f2 = attachment;
	this.$g2 = slot;
	if(attachment.$3CB == null) {
		throw haxe_Exception.thrown(new $CpK("Region has not been set: " + $CG.$1(attachment)));
	}
	var region = attachment.$3CB;
	var regionWidth;
	var regionHeight;
	if(region.$JFB == 90) {
		regionWidth = region.$JP;
		regionHeight = region.$IP;
	} else {
		regionWidth = region.$IP;
		regionHeight = region.$JP;
	}
	this.$0e = region.$Mf.$$EB.subTexture(region.$QC,region.$RC,regionWidth,regionHeight);
	this.$QC.set__(attachment.$QC);
	this.$RC.set__(-attachment.$RC);
	this.$NQ.set__(attachment.$IP / region.$IP * attachment.$NQ);
	this.$OQ.set__(attachment.$JP / region.$JP * attachment.$OQ);
	this.$FP.set__(-attachment.$FP);
	if(region.$JFB == 90) {
		var fh = this.$FP;
		fh.set__(fh.$Lb + 90);
	}
	this.$DP.set__(regionWidth / 2);
	this.$EP.set__(regionHeight / 2);
};
$hxClasses["$C$I"] = $C$I;
$C$I.__name__ = "$C$I";
$C$I.__super__ = $C6B;
$C$I.prototype = $extend($C6B.prototype,{
	$1Q: function(g) {
		g.drawTexture(this.$0e,0,0);
	}
	,$hQ: function() {
		return this.$0e.get_width();
	}
	,$iQ: function() {
		return this.$0e.get_height();
	}
	,__class__: $C$I
});
var $C_$I = function(skeletonData,stateData) {
	this.$ni = new $CRE();
	this.$l2 = new $CaC();
	$C6B.call(this);
	if(stateData == null) {
		stateData = new $C6J(skeletonData);
	}
	this.$j2 = new $CQK(skeletonData);
	this.$j2.$OQ = -1;
	this.$Xd = new $CxJ(stateData);
};
$hxClasses["$C_I"] = $C_$I;
$C_$I.__name__ = "$C_I";
$C_$I.__super__ = $C6B;
$C_$I.prototype = $extend($C6B.prototype,{
	$rO: function() {
		$C6B.prototype.$rO.call(this);
		this.$pO.$rB(this.$ni);
	}
	,$sO: function() {
		$C6B.prototype.$sO.call(this);
		this.$pO.$sB(this.$ni);
	}
	,$vO: function(dt) {
		$C6B.prototype.$vO.call(this,dt);
		var _this = this.$Xd;
		var delta = dt;
		delta = dt * _this.$p7;
		var i = 0;
		var n = _this.$k7.length;
		while(i < n) {
			var current = _this.$k7[i];
			if(current == null) {
				++i;
				continue;
			}
			current.$W8 = current.$X8;
			current.$a8 = current.$b8;
			var currentDelta = delta * current.$p7;
			if(current.$Y8 > 0) {
				current.$Y8 -= currentDelta;
				if(current.$Y8 > 0) {
					++i;
					continue;
				}
				currentDelta = -current.$Y8;
				current.$Y8 = 0;
			}
			var next = current.next;
			if(next != null) {
				var nextTime = current.$a8 - next.$Y8;
				if(nextTime >= 0) {
					next.$Y8 = 0;
					next.$Z8 += current.$p7 == 0 ? 0 : (nextTime / current.$p7 + delta) * next.$p7;
					current.$Z8 += currentDelta;
					var from;
					if(i < _this.$k7.length) {
						from = _this.$k7[i];
					} else {
						var this1 = _this.$k7;
						var size = i + 1;
						var len = this1.length;
						if(len > size) {
							this1.splice(size,size - len);
						} else if(len < size) {
							this1[size - 1] = null;
						}
						from = null;
					}
					_this.$k7[i] = next;
					if(from != null) {
						var _this1 = _this.$m7;
						_this1.$7d.push(1);
						_this1.$7d.push(from);
						next.$N8 = from;
						from.$O8 = next;
						next.$d8 = 0;
						if(from.$N8 != null && from.$e8 > 0) {
							next.$f8 *= Math.min(1,from.$d8 / from.$e8 | 0);
						}
						var this2 = from.$k8;
						this2.splice(0,this2.length);
					}
					var _this2 = _this.$m7;
					_this2.$7d.push(0);
					_this2.$7d.push(next);
					_this2.$K9.$o7 = true;
					while(next.$N8 != null) {
						next.$d8 += delta;
						next = next.$N8;
					}
					++i;
					continue;
				}
			} else if(current.$a8 >= current.$c8 && current.$N8 == null) {
				_this.$k7[i] = null;
				var _this3 = _this.$m7;
				_this3.$7d.push(2);
				_this3.$7d.push(current);
				_this3.$K9.$o7 = true;
				var next1 = current.next;
				while(next1 != null) {
					var _this4 = _this.$m7;
					_this4.$7d.push(3);
					_this4.$7d.push(next1);
					next1 = next1.next;
				}
				current.next = null;
				++i;
				continue;
			}
			var tmp;
			if(current.$N8 != null) {
				var from1 = current.$N8;
				if(from1 == null) {
					tmp = true;
				} else {
					var from2 = from1.$N8;
					var finished;
					if(from2 == null) {
						finished = true;
					} else {
						var finished1 = _this.$r7(from2,delta);
						from2.$W8 = from2.$X8;
						from2.$a8 = from2.$b8;
						if(from1.$d8 > 0 && from1.$d8 >= from1.$e8) {
							if(from2.$g8 == 0 || from1.$e8 == 0) {
								from1.$N8 = from2.$N8;
								if(from2.$N8 != null) {
									from2.$N8.$O8 = from1;
								}
								from1.$f8 = from2.$f8;
								var _this5 = _this.$m7;
								_this5.$7d.push(2);
								_this5.$7d.push(from2);
								_this5.$K9.$o7 = true;
							}
							finished = finished1;
						} else {
							from2.$Z8 += delta * from2.$p7;
							from1.$d8 += delta;
							finished = false;
						}
					}
					from1.$W8 = from1.$X8;
					from1.$a8 = from1.$b8;
					if(current.$d8 > 0 && current.$d8 >= current.$e8) {
						if(from1.$g8 == 0 || current.$e8 == 0) {
							current.$N8 = from1.$N8;
							if(from1.$N8 != null) {
								from1.$N8.$O8 = current;
							}
							current.$f8 = from1.$f8;
							var _this6 = _this.$m7;
							_this6.$7d.push(2);
							_this6.$7d.push(from1);
							_this6.$K9.$o7 = true;
						}
						tmp = finished;
					} else {
						from1.$Z8 += delta * from1.$p7;
						current.$d8 += delta;
						tmp = false;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				var from3 = current.$N8;
				current.$N8 = null;
				if(from3 != null) {
					from3.$O8 = null;
				}
				while(from3 != null) {
					var _this7 = _this.$m7;
					_this7.$7d.push(2);
					_this7.$7d.push(from3);
					_this7.$K9.$o7 = true;
					from3 = from3.$N8;
				}
			}
			current.$Z8 += currentDelta;
			++i;
		}
		var _this1 = _this.$m7;
		if(!_this1.$L9) {
			_this1.$L9 = true;
			var objects = _this1.$7d;
			var listeners = _this1.$K9.$l7;
			var i = 0;
			while(i < objects.length) {
				var type = objects[i];
				var result = objects[i + 1];
				while(true) {
					if(type == 0) {
						if(result.$hm != null) {
							result.$hm.start(result);
						}
						var ii = 0;
						while(ii < listeners.length) {
							listeners[ii].start(result);
							++ii;
						}
						break;
					} else if(type == 1) {
						if(result.$hm != null) {
							result.$hm.interrupt(result);
						}
						var ii1 = 0;
						while(ii1 < listeners.length) {
							listeners[ii1].interrupt(result);
							++ii1;
						}
						break;
					} else if(type == 2) {
						if(result.$hm != null) {
							result.$hm.end(result);
						}
						var ii2 = 0;
						while(ii2 < listeners.length) {
							listeners[ii2].end(result);
							++ii2;
						}
						if(result.$hm != null) {
							result.$hm.dispose(result);
						}
						var ii3 = 0;
						while(ii3 < listeners.length) {
							listeners[ii3].dispose(result);
							++ii3;
						}
						_this1.$K9.$q7.$Q9(result);
						break;
					} else if(type == 3) {
						if(result.$hm != null) {
							result.$hm.dispose(result);
						}
						var ii4 = 0;
						while(ii4 < listeners.length) {
							listeners[ii4].dispose(result);
							++ii4;
						}
						_this1.$K9.$q7.$Q9(result);
						break;
					} else if(type == 4) {
						if(result.$hm != null) {
							result.$hm.complete(result);
						}
						var ii5 = 0;
						while(ii5 < listeners.length) {
							listeners[ii5].complete(result);
							++ii5;
						}
						break;
					} else if(type == 5) {
						var result1 = objects[i++ + 2];
						if(result.$hm != null) {
							result.$hm.event(result,result1);
						}
						var ii6 = 0;
						while(ii6 < listeners.length) {
							listeners[ii6].event(result,result1);
							++ii6;
						}
						break;
					}
					break;
				}
				i += 2;
			}
			var this1 = _this1.$7d;
			this1.splice(0,this1.length);
			_this1.$L9 = false;
		}
		this.$Xd.$Wg(this.$j2);
		var _this = this.$j2;
		var cacheReset = _this.$nAB;
		var i = 0;
		var n = cacheReset.length;
		while(i < n) {
			var bone = cacheReset[i];
			bone.$49 = bone.$QC;
			bone.$59 = bone.$RC;
			bone.$69 = bone.$FP;
			bone.$79 = bone.$NQ;
			bone.$89 = bone.$OQ;
			bone.$99 = bone.$29;
			bone.$$9 = bone.$39;
			bone.$_9 = true;
			++i;
		}
		var cache = _this.$5S;
		var i = 0;
		var n = cache.length;
		while(i < n) {
			cache[i].update();
			++i;
		}
		this.$j2.$7b += dt;
		this.$k2();
	}
	,$k2: function() {
		var entity = this.$l2.iterator();
		while(entity.hasNext()) entity.next().$rI = false;
		var r;
		var g;
		var b;
		var a;
		var _g = 0;
		var _g1 = this.$j2.$s5;
		while(_g < _g1.length) {
			var slot = _g1[_g];
			++_g;
			var attachment = slot.$f2;
			if(attachment == null) {
				continue;
			}
			var regionAttachment = ((attachment) instanceof $CnK) ? attachment : null;
			var meshAttachment = null;
			if(regionAttachment != null) {
				var color = regionAttachment.$Jf;
				r = color.$C;
				g = color.$JEB;
				b = color.$6;
				a = color.$TD;
			} else {
				meshAttachment = ((attachment) instanceof $CkK) ? attachment : null;
				if(meshAttachment == null) {
					continue;
				}
				var color1 = meshAttachment.$Jf;
				r = color1.$C;
				g = color1.$JEB;
				b = color1.$6;
				a = color1.$TD;
			}
			var entity = this.$l2.h[attachment.__id__];
			if(entity == null) {
				var wrapper = new $C6B();
				entity = new $CRE().$8(wrapper);
				this.$l2.set(attachment,entity);
				var attachmentSprite = regionAttachment != null ? new $C$I(regionAttachment,slot) : new $C9I(meshAttachment,slot);
				entity.$rB(new $CRE().$8(attachmentSprite));
				this.$ni.$rB(entity);
			}
			entity.$rI = true;
			entity.$Qa();
			var wrapper1 = entity.$na[10];
			var skeletonColor = this.$j2.$Jf;
			var slotColor = slot.$Jf;
			wrapper1.get_tintR().set__(skeletonColor.$C * slotColor.$C * r);
			wrapper1.get_tintG().set__(skeletonColor.$JEB * slotColor.$JEB * g);
			wrapper1.get_tintB().set__(skeletonColor.$6 * slotColor.$6 * b);
			wrapper1.$PQ.set__(skeletonColor.$TD * slotColor.$TD * a);
			var tmp;
			switch(slot.$HU.$TQ) {
			case 0:
				tmp = null;
				break;
			case 1:
				tmp = kit_display_BlendMode.Add;
				break;
			case 2:
				tmp = kit_display_BlendMode.Multiply;
				break;
			case 3:
				tmp = kit_display_BlendMode.Screen;
				break;
			}
			wrapper1.set_blendMode(tmp);
			if(regionAttachment != null) {
				var bone = slot.$LCB;
				wrapper1.$kQ().$kB(bone.$TD,bone.$_G,-bone.$6,-bone.$B$,bone.$A$,bone.$C$);
			}
		}
	}
	,__class__: $C_$I
});
var $CHJ = function() { };
$hxClasses["$CHJ"] = $CHJ;
$CHJ.__name__ = "$CHJ";
$CHJ.$kB = function(bits,mask,enabled) {
	if(enabled) {
		return bits | mask;
	} else {
		return bits & ~mask;
	}
};
var $CJJ = function(allocator) {
	this.$Nm = 2147483647;
	this.$w2 = allocator;
	this.$x2 = [];
};
$hxClasses["$CJJ"] = $CJJ;
$CJJ.__name__ = "$CJJ";
$CJJ.prototype = {
	$u2: function() {
		if(this.$x2.length > 0) {
			return this.$x2.pop();
		}
		return this.$w2();
	}
	,$v2: function(object) {
		if(this.$x2.length < this.$Nm) {
			this.$x2.push(object);
		}
	}
	,$Em: function(capacity) {
		if(this.$x2.length > capacity) {
			this.$x2.length = capacity;
		}
		this.$Nm = capacity;
		return this;
	}
	,__class__: $CJJ
};
var $CKJ = function() {
	this.$_2 = null;
	this.$$2 = null;
	this.$92 = 0;
	this.$82 = null;
};
$hxClasses["$CKJ"] = $CKJ;
$CKJ.__name__ = "$CKJ";
$CKJ.$A3 = function(promises) {
	if(promises.length < 1) {
		return new $CKJ().$22([]);
	}
	var ll = promises.length;
	var returnPromise = new $CKJ();
	var onError = function(error) {
		returnPromise.$12(error);
	};
	var progress = new Array(ll);
	var emitAverageProgress = function() {
		var sum = 0.0;
		var _g = 0;
		while(_g < progress.length) sum += progress[_g++];
		returnPromise.$52(sum / ll);
	};
	var results = new Array(ll);
	var complete = 0;
	var _g = 0;
	var _g1 = ll;
	while(_g < _g1) {
		var ii = [_g++];
		progress[ii[0]] = 0.0;
		promises[ii[0]].$y2((function(ii) {
			return function(value) {
				complete += 1;
				results[ii[0]] = value;
				if(progress[ii[0]] < 1) {
					progress[ii[0]] = 1;
					emitAverageProgress();
				}
				if(complete == ll) {
					returnPromise.$22(results);
				}
			};
		})(ii)).$42((function(ii) {
			return function(p) {
				progress[ii[0]] = p;
				emitAverageProgress();
			};
		})(ii)).$z2(onError);
	}
	return returnPromise;
};
$CKJ.prototype = {
	$y2: function(fn) {
		var _gthis = this;
		if(this.$92 == 2) {
			return this;
		}
		var returnPromise = new $CKJ();
		this.$Vb(returnPromise,function() {
			if(_gthis.$92 == 1) {
				returnPromise.$62(fn(_gthis.$82));
			} else {
				returnPromise.$12(_gthis.$82);
			}
		});
		return returnPromise;
	}
	,$z2: function(fn) {
		var _gthis = this;
		if(this.$92 == 1) {
			return this;
		}
		var returnPromise = new $CKJ();
		this.$Vb(returnPromise,function() {
			if(_gthis.$92 == 2) {
				returnPromise.$62(fn(_gthis.$82));
			} else {
				returnPromise.$22(_gthis.$82);
			}
		});
		return returnPromise;
	}
	,$12: function(error) {
		return this.$72(2,error);
	}
	,$22: function(value) {
		return this.$72(1,value);
	}
	,$42: function(fn) {
		if(this.$92 == 0) {
			if(this.$_2 == null) {
				this.$_2 = new $CaE();
			}
			this.$_2.$eb(fn);
		}
		return this;
	}
	,$52: function(progress) {
		if(this.$92 == 0) {
			if(this.$_2 != null) {
				this.$_2.$fb(progress);
			}
		}
	}
	,$Vb: function(otherPromise,fn) {
		if(this.$92 == 0) {
			if(this.$$2 == null) {
				this.$$2 = [fn];
			} else {
				this.$$2.push(fn);
			}
		} else {
			$CcE.$Gc.$qa.$Ac(fn);
		}
		this.$42(function(progress) {
			otherPromise.$52(progress);
		});
	}
	,$62: function(result) {
		var _gthis = this;
		if(((result) instanceof $CKJ)) {
			result.$y2(function(value) {
				_gthis.$22(value);
			}).$z2(function(error) {
				_gthis.$12(error);
			});
		} else {
			this.$22(result);
		}
	}
	,$72: function(state,result) {
		if(this.$92 == 0) {
			this.$82 = result;
			this.$92 = state;
			if(this.$$2 != null) {
				var _g = 0;
				var _g1 = this.$$2;
				while(_g < _g1.length) _g1[_g++]();
				this.$$2 = null;
			}
		}
		return this;
	}
	,__class__: $CKJ
};
var $CMJ = function(fn) {
	this.next = null;
	this.$F3 = fn;
};
$hxClasses["$CMJ"] = $CMJ;
$CMJ.__name__ = "$CMJ";
$CMJ.prototype = {
	__class__: $CMJ
};
var $CNJ = function() { };
$hxClasses["$CNJ"] = $CNJ;
$CNJ.__name__ = "$CNJ";
$CNJ.$G3 = function(fileName) {
	var dot = fileName.lastIndexOf(".");
	if(dot > 0) {
		return HxOverrides.substr(fileName,dot + 1,null);
	} else {
		return null;
	}
};
$CNJ.$H3 = function(fileName) {
	var dot = fileName.lastIndexOf(".");
	if(dot > 0) {
		return HxOverrides.substr(fileName,0,dot);
	} else {
		return fileName;
	}
};
$CNJ.$I3 = function(url) {
	var question = url.lastIndexOf("?");
	if(question >= 0) {
		url = HxOverrides.substr(url,0,question);
	}
	var slash = url.lastIndexOf("/");
	if(slash >= 0) {
		url = HxOverrides.substr(url,slash + 1,null);
	}
	return $CNJ.$G3(url);
};
$CNJ.$J3 = function(base,relative) {
	if(base.length > 0 && base.charCodeAt(base.length - 1) != 47) {
		base += "/";
	}
	return base + relative;
};
$CNJ.$M3 = function(message,fields) {
	var ll = fields.length;
	if(ll > 0) {
		message += message.length > 0 ? " [" : "[";
		var ii = 0;
		while(ii < ll) {
			if(ii > 0) {
				message += ", ";
			}
			var value = fields[ii + 1];
			if(((value) instanceof Error)) {
				var stack = value.stack;
				if(stack != null) {
					value = stack;
				}
			}
			message += fields[ii] + "=" + $CG.$1(value);
			ii += 2;
		}
		message += "]";
	}
	return message;
};
var $COJ = function() {
};
$hxClasses["$COJ"] = $COJ;
$COJ.__name__ = "$COJ";
$COJ.prototype = {
	__class__: $COJ
};
var $CPJ = function() {
};
$hxClasses["$CPJ"] = $CPJ;
$CPJ.__name__ = "$CPJ";
$CPJ.prototype = {
	$X3: function(points) {
		var ll = points.length;
		if(ll < 6) {
			return [];
		}
		var n = this.$5S;
		if(n == null) {
			n = new $COJ();
			n.$P3 = this.$T3;
			this.$T3 = n;
		} else {
			this.$5S = n.next;
		}
		n.$Q3 = -1;
		n.$CH = -1;
		n.$QC = 0;
		n.$RC = 0;
		n.next = null;
		n.$cL = null;
		n.$R3 = false;
		n.$O3 = null;
		n.$N3 = null;
		var root = n;
		var first = root;
		var sum = 0.;
		var ii = 0;
		var jj = ll - 2;
		while(ii < ll) {
			sum += (points[jj] - points[ii]) * (points[ii + 1] + points[jj + 1]);
			jj = ii;
			ii += 2;
		}
		if(sum > 0) {
			ii = 0;
			var n = 0;
			while(ii < ll) {
				var x = points[ii];
				var y = points[ii + 1];
				var i = n++;
				var n1 = this.$5S;
				if(n1 == null) {
					n1 = new $COJ();
					n1.$P3 = this.$T3;
					this.$T3 = n1;
				} else {
					this.$5S = n1.next;
				}
				n1.$Q3 = i;
				n1.$CH = -1;
				n1.$QC = x;
				n1.$RC = y;
				n1.next = null;
				n1.$cL = root;
				n1.$R3 = false;
				n1.$O3 = null;
				n1.$N3 = null;
				if(root != null) {
					root.next = n1;
				}
				root = n1;
				ii += 2;
			}
		} else {
			ii = ll - 2;
			var n = ii / 2 | 0;
			while(ii >= 0) {
				var x = points[ii];
				var y = points[ii + 1];
				var i = n--;
				var n1 = this.$5S;
				if(n1 == null) {
					n1 = new $COJ();
					n1.$P3 = this.$T3;
					this.$T3 = n1;
				} else {
					this.$5S = n1.next;
				}
				n1.$Q3 = i;
				n1.$CH = -1;
				n1.$QC = x;
				n1.$RC = y;
				n1.next = null;
				n1.$cL = root;
				n1.$R3 = false;
				n1.$O3 = null;
				n1.$N3 = null;
				if(root != null) {
					root.next = n1;
				}
				root = n1;
				ii -= 2;
			}
		}
		root.next = first.next;
		root.next.$cL = root;
		return this.$Y3(root,ll > 160);
	}
	,$Y3: function(root,useZOrder) {
		this.$S3 = [];
		root = this.$b3(root);
		if(useZOrder && root != null) {
			var maxX = root.$QC;
			this.$U3 = maxX;
			var maxY = root.$RC;
			this.$V3 = maxY;
			var p = root.next;
			while(p != root) {
				var x = p.$QC;
				var y = p.$RC;
				if(x < this.$U3) {
					this.$U3 = x;
				}
				if(y < this.$V3) {
					this.$V3 = y;
				}
				if(x > maxX) {
					maxX = x;
				}
				if(y > maxY) {
					maxY = y;
				}
				p = p.next;
			}
			this.$Tf = Math.max(maxX - this.$U3,maxY - this.$V3);
			this.$W3 = true;
		} else {
			this.$W3 = false;
		}
		this.$e3(root);
		var result = this.$S3;
		this.$S3 = null;
		var n = this.$T3;
		if(this.$5S != null) {
			while(n != this.$5S) n = n.$P3;
			n = n.$P3;
		}
		while(n != null) {
			n.next = this.$5S;
			this.$5S = n;
			n = n.$P3;
		}
		return result;
	}
	,$b3: function(start,end) {
		if(start == null) {
			return start;
		}
		if(end == null) {
			end = start;
		}
		var p = start;
		var again;
		while(true) {
			again = false;
			var tmp;
			if(!p.$R3) {
				var p2 = p.next;
				if(!(p.$QC == p2.$QC && p.$RC == p2.$RC)) {
					var p1 = p.$cL;
					var r = p.next;
					tmp = (p.$RC - p1.$RC) * (r.$QC - p.$QC) - (p.$QC - p1.$QC) * (r.$RC - p.$RC) == 0;
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				p.next.$cL = p.$cL;
				p.$cL.next = p.next;
				if(p.$O3 != null) {
					p.$O3.$N3 = p.$N3;
				}
				if(p.$N3 != null) {
					p.$N3.$O3 = p.$O3;
				}
				end = p.$cL;
				p = end;
				if(p == p.next) {
					return null;
				}
				again = true;
			} else {
				p = p.next;
			}
			if(!(again || p != end)) {
				break;
			}
		}
		return end;
	}
	,$e3: function(ear,pass) {
		if(pass == null) {
			pass = 0;
		}
		if(ear == null) {
			return;
		}
		if(pass == 0 && this.$W3) {
			this.$p3(ear);
		}
		var stop = ear;
		var prev;
		var next;
		while(ear.$cL != ear.next) {
			prev = ear.$cL;
			next = ear.next;
			if(this.$W3 ? this.$g3(ear) : this.$f3(ear)) {
				this.$S3.push(prev.$Q3);
				this.$S3.push(ear.$Q3);
				this.$S3.push(next.$Q3);
				ear.next.$cL = ear.$cL;
				ear.$cL.next = ear.next;
				if(ear.$O3 != null) {
					ear.$O3.$N3 = ear.$N3;
				}
				if(ear.$N3 != null) {
					ear.$N3.$O3 = ear.$O3;
				}
				ear = next.next;
				stop = next.next;
				continue;
			}
			ear = next;
			if(next == stop) {
				switch(pass) {
				case 0:
					this.$e3(this.$b3(next),1);
					break;
				case 1:
					ear = this.$h3(next);
					this.$e3(ear,2);
					break;
				case 2:
					this.$i3(next);
					break;
				}
				break;
			}
		}
	}
	,$f3: function(ear) {
		var a = ear.$cL;
		var c = ear.next;
		if((ear.$RC - a.$RC) * (c.$QC - ear.$QC) - (ear.$QC - a.$QC) * (c.$RC - ear.$RC) >= 0) {
			return false;
		}
		var p = ear.next.next;
		while(p != ear.$cL) {
			var tmp;
			var ax = a.$QC;
			var ay = a.$RC;
			var bx = ear.$QC;
			var by = ear.$RC;
			var cx = c.$QC;
			var cy = c.$RC;
			var px = p.$QC;
			var py = p.$RC;
			if((cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0) {
				var p1 = p.$cL;
				var r = p.next;
				tmp = (p.$RC - p1.$RC) * (r.$QC - p.$QC) - (p.$QC - p1.$QC) * (r.$RC - p.$RC) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.next;
		}
		return true;
	}
	,$g3: function(ear) {
		var a = ear.$cL;
		var c = ear.next;
		if((ear.$RC - a.$RC) * (c.$QC - ear.$QC) - (ear.$QC - a.$QC) * (c.$RC - ear.$RC) >= 0) {
			return false;
		}
		var x = 32767 * ((a.$QC < ear.$QC ? a.$QC < c.$QC ? a.$QC : c.$QC : ear.$QC < c.$QC ? ear.$QC : c.$QC) - this.$U3) / this.$Tf | 0;
		var y = 32767 * ((a.$RC < ear.$RC ? a.$RC < c.$RC ? a.$RC : c.$RC : ear.$RC < c.$RC ? ear.$RC : c.$RC) - this.$V3) / this.$Tf | 0;
		x = (x | x << 8) & 16711935;
		x = (x | x << 4) & 252645135;
		x = (x | x << 2) & 858993459;
		x = (x | x << 1) & 1431655765;
		y = (y | y << 8) & 16711935;
		y = (y | y << 4) & 252645135;
		y = (y | y << 2) & 858993459;
		y = (y | y << 1) & 1431655765;
		var minZ = x | y << 1;
		var x = 32767 * ((a.$QC > ear.$QC ? a.$QC > c.$QC ? a.$QC : c.$QC : ear.$QC > c.$QC ? ear.$QC : c.$QC) - this.$U3) / this.$Tf | 0;
		var y = 32767 * ((a.$RC > ear.$RC ? a.$RC > c.$RC ? a.$RC : c.$RC : ear.$RC > c.$RC ? ear.$RC : c.$RC) - this.$V3) / this.$Tf | 0;
		x = (x | x << 8) & 16711935;
		x = (x | x << 4) & 252645135;
		x = (x | x << 2) & 858993459;
		x = (x | x << 1) & 1431655765;
		y = (y | y << 8) & 16711935;
		y = (y | y << 4) & 252645135;
		y = (y | y << 2) & 858993459;
		y = (y | y << 1) & 1431655765;
		var maxZ = x | y << 1;
		var p = ear.$N3;
		while(p != null && p.$CH <= maxZ) {
			var tmp;
			var tmp1;
			if(p != ear.$cL && p != ear.next) {
				var ax = a.$QC;
				var ay = a.$RC;
				var bx = ear.$QC;
				var by = ear.$RC;
				var cx = c.$QC;
				var cy = c.$RC;
				var px = p.$QC;
				var py = p.$RC;
				tmp1 = (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p1 = p.$cL;
				var r = p.next;
				tmp = (p.$RC - p1.$RC) * (r.$QC - p.$QC) - (p.$QC - p1.$QC) * (r.$RC - p.$RC) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.$N3;
		}
		p = ear.$O3;
		while(p != null && p.$CH >= minZ) {
			var tmp;
			var tmp1;
			if(p != ear.$cL && p != ear.next) {
				var ax = a.$QC;
				var ay = a.$RC;
				var bx = ear.$QC;
				var by = ear.$RC;
				var cx = c.$QC;
				var cy = c.$RC;
				var px = p.$QC;
				var py = p.$RC;
				tmp1 = (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p1 = p.$cL;
				var r = p.next;
				tmp = (p.$RC - p1.$RC) * (r.$QC - p.$QC) - (p.$QC - p1.$QC) * (r.$RC - p.$RC) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.$O3;
		}
		return true;
	}
	,$h3: function(start) {
		var p = start;
		while(true) {
			var a = p.$cL;
			var b = p.next.next;
			var tmp;
			var tmp1;
			var p2 = p.next;
			if((p.$RC - a.$RC) * (p2.$QC - p.$QC) - (p.$QC - a.$QC) * (p2.$RC - p.$RC) > 0 != (p.$RC - a.$RC) * (b.$QC - p.$QC) - (p.$QC - a.$QC) * (b.$RC - p.$RC) > 0 && (b.$RC - p2.$RC) * (a.$QC - b.$QC) - (b.$QC - p2.$QC) * (a.$RC - b.$RC) > 0 != (b.$RC - p2.$RC) * (p.$QC - b.$QC) - (b.$QC - p2.$QC) * (p.$RC - b.$RC) > 0) {
				var p1 = a.$cL;
				var r = a.next;
				if((a.$RC - p1.$RC) * (r.$QC - a.$QC) - (a.$QC - p1.$QC) * (r.$RC - a.$RC) < 0) {
					var r1 = a.next;
					if((b.$RC - a.$RC) * (r1.$QC - b.$QC) - (b.$QC - a.$QC) * (r1.$RC - b.$RC) >= 0) {
						var q = a.$cL;
						tmp1 = (q.$RC - a.$RC) * (b.$QC - q.$QC) - (q.$QC - a.$QC) * (b.$RC - q.$RC) >= 0;
					} else {
						tmp1 = false;
					}
				} else {
					var r2 = a.$cL;
					if(!((b.$RC - a.$RC) * (r2.$QC - b.$QC) - (b.$QC - a.$QC) * (r2.$RC - b.$RC) < 0)) {
						var q1 = a.next;
						tmp1 = (q1.$RC - a.$RC) * (b.$QC - q1.$QC) - (q1.$QC - a.$QC) * (b.$RC - q1.$RC) < 0;
					} else {
						tmp1 = true;
					}
				}
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p3 = b.$cL;
				var r3 = b.next;
				if((b.$RC - p3.$RC) * (r3.$QC - b.$QC) - (b.$QC - p3.$QC) * (r3.$RC - b.$RC) < 0) {
					var r4 = b.next;
					if((a.$RC - b.$RC) * (r4.$QC - a.$QC) - (a.$QC - b.$QC) * (r4.$RC - a.$RC) >= 0) {
						var q2 = b.$cL;
						tmp = (q2.$RC - b.$RC) * (a.$QC - q2.$QC) - (q2.$QC - b.$QC) * (a.$RC - q2.$RC) >= 0;
					} else {
						tmp = false;
					}
				} else {
					var r5 = b.$cL;
					if(!((a.$RC - b.$RC) * (r5.$QC - a.$QC) - (a.$QC - b.$QC) * (r5.$RC - a.$RC) < 0)) {
						var q3 = b.next;
						tmp = (q3.$RC - b.$RC) * (a.$QC - q3.$QC) - (q3.$QC - b.$QC) * (a.$RC - q3.$RC) < 0;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				this.$S3.push(a.$Q3);
				this.$S3.push(p.$Q3);
				this.$S3.push(b.$Q3);
				p.next.$cL = p.$cL;
				p.$cL.next = p.next;
				if(p.$O3 != null) {
					p.$O3.$N3 = p.$N3;
				}
				if(p.$N3 != null) {
					p.$N3.$O3 = p.$O3;
				}
				var p4 = p.next;
				p4.next.$cL = p4.$cL;
				p4.$cL.next = p4.next;
				if(p4.$O3 != null) {
					p4.$O3.$N3 = p4.$N3;
				}
				if(p4.$N3 != null) {
					p4.$N3.$O3 = p4.$O3;
				}
				start = b;
				p = b;
			}
			p = p.next;
			if(!(p != start)) {
				break;
			}
		}
		return p;
	}
	,$i3: function(start) {
		var a = start;
		while(true) {
			var b = a.next.next;
			while(b != a.$cL) {
				if(a.$Q3 != b.$Q3 && this.$l3(a,b)) {
					var c = this.$j3(a,b);
					a = this.$b3(a,a.next);
					c = this.$b3(c,c.next);
					this.$e3(a);
					this.$e3(c);
					return;
				}
				b = b.next;
			}
			a = a.next;
			if(!(a != start)) {
				break;
			}
		}
	}
	,$j3: function(a,b) {
		var n = this.$5S;
		if(n == null) {
			n = new $COJ();
			n.$P3 = this.$T3;
			this.$T3 = n;
		} else {
			this.$5S = n.next;
		}
		n.$Q3 = a.$Q3;
		n.$CH = -1;
		n.$QC = a.$QC;
		n.$RC = a.$RC;
		n.next = null;
		n.$cL = null;
		n.$R3 = false;
		n.$O3 = null;
		n.$N3 = null;
		var a2 = n;
		var n = this.$5S;
		if(n == null) {
			n = new $COJ();
			n.$P3 = this.$T3;
			this.$T3 = n;
		} else {
			this.$5S = n.next;
		}
		n.$Q3 = b.$Q3;
		n.$CH = -1;
		n.$QC = b.$QC;
		n.$RC = b.$RC;
		n.next = null;
		n.$cL = null;
		n.$R3 = false;
		n.$O3 = null;
		n.$N3 = null;
		var b2 = n;
		var an = a.next;
		var bp = b.$cL;
		a.next = b;
		b.$cL = a;
		a2.next = an;
		an.$cL = a2;
		b2.next = a2;
		a2.$cL = b2;
		bp.next = b2;
		b2.$cL = bp;
		return b2;
	}
	,$l3: function(a,b) {
		if(!(a.$QC == b.$QC && a.$RC == b.$RC)) {
			var tmp;
			var tmp1;
			if(a.next.$Q3 != b.$Q3 && a.$cL.$Q3 != b.$Q3 && !this.$n3(a,b)) {
				var p = a.$cL;
				var r = a.next;
				if((a.$RC - p.$RC) * (r.$QC - a.$QC) - (a.$QC - p.$QC) * (r.$RC - a.$RC) < 0) {
					var r = a.next;
					if((b.$RC - a.$RC) * (r.$QC - b.$QC) - (b.$QC - a.$QC) * (r.$RC - b.$RC) >= 0) {
						var q = a.$cL;
						tmp1 = (q.$RC - a.$RC) * (b.$QC - q.$QC) - (q.$QC - a.$QC) * (b.$RC - q.$RC) >= 0;
					} else {
						tmp1 = false;
					}
				} else {
					var r = a.$cL;
					if(!((b.$RC - a.$RC) * (r.$QC - b.$QC) - (b.$QC - a.$QC) * (r.$RC - b.$RC) < 0)) {
						var q = a.next;
						tmp1 = (q.$RC - a.$RC) * (b.$QC - q.$QC) - (q.$QC - a.$QC) * (b.$RC - q.$RC) < 0;
					} else {
						tmp1 = true;
					}
				}
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p = b.$cL;
				var r = b.next;
				if((b.$RC - p.$RC) * (r.$QC - b.$QC) - (b.$QC - p.$QC) * (r.$RC - b.$RC) < 0) {
					var r = b.next;
					if((a.$RC - b.$RC) * (r.$QC - a.$QC) - (a.$QC - b.$QC) * (r.$RC - a.$RC) >= 0) {
						var q = b.$cL;
						tmp = (q.$RC - b.$RC) * (a.$QC - q.$QC) - (q.$QC - b.$QC) * (a.$RC - q.$RC) >= 0;
					} else {
						tmp = false;
					}
				} else {
					var r = b.$cL;
					if(!((a.$RC - b.$RC) * (r.$QC - a.$QC) - (a.$QC - b.$QC) * (r.$RC - a.$RC) < 0)) {
						var q = b.next;
						tmp = (q.$RC - b.$RC) * (a.$QC - q.$QC) - (q.$QC - b.$QC) * (a.$RC - q.$RC) < 0;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				return this.$m3(a,b);
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,$m3: function(a,b) {
		var p = a;
		var inside = false;
		var px = (a.$QC + b.$QC) / 2;
		var py = (a.$RC + b.$RC) / 2;
		while(true) {
			if(p.$RC > py != p.next.$RC > py && px < (p.next.$QC - p.$QC) * (py - p.$RC) / (p.next.$RC - p.$RC) + p.$QC) {
				inside = !inside;
			}
			p = p.next;
			if(!(p != a)) {
				break;
			}
		}
		return inside;
	}
	,$n3: function(a,b) {
		var p = a;
		while(true) {
			var tmp;
			if(p.$Q3 != a.$Q3 && p.next.$Q3 != a.$Q3 && p.$Q3 != b.$Q3 && p.next.$Q3 != b.$Q3) {
				var q1 = p.next;
				tmp = (q1.$RC - p.$RC) * (a.$QC - q1.$QC) - (q1.$QC - p.$QC) * (a.$RC - q1.$RC) > 0 != (q1.$RC - p.$RC) * (b.$QC - q1.$QC) - (q1.$QC - p.$QC) * (b.$RC - q1.$RC) > 0 && (b.$RC - a.$RC) * (p.$QC - b.$QC) - (b.$QC - a.$QC) * (p.$RC - b.$RC) > 0 != (b.$RC - a.$RC) * (q1.$QC - b.$QC) - (b.$QC - a.$QC) * (q1.$RC - b.$RC) > 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return true;
			}
			p = p.next;
			if(!(p != a)) {
				break;
			}
		}
		return false;
	}
	,$p3: function(start) {
		var p = start;
		while(true) {
			if(p.$CH < 0) {
				var x = 32767 * (p.$QC - this.$U3) / this.$Tf | 0;
				var y = 32767 * (p.$RC - this.$V3) / this.$Tf | 0;
				x = (x | x << 8) & 16711935;
				x = (x | x << 4) & 252645135;
				x = (x | x << 2) & 858993459;
				x = (x | x << 1) & 1431655765;
				y = (y | y << 8) & 16711935;
				y = (y | y << 4) & 252645135;
				y = (y | y << 2) & 858993459;
				y = (y | y << 1) & 1431655765;
				p.$CH = x | y << 1;
			}
			p.$O3 = p.$cL;
			p.$N3 = p.next;
			p = p.next;
			if(!(p != start)) {
				break;
			}
		}
		p.$O3.$N3 = null;
		p.$O3 = null;
		this.$q3(p);
	}
	,$q3: function(list) {
		var p;
		var q;
		var e;
		var tail;
		var numMerges;
		var pSize;
		var qSize;
		var inSize = 1;
		while(true) {
			p = list;
			list = null;
			tail = null;
			numMerges = 0;
			while(p != null) {
				++numMerges;
				q = p;
				pSize = 0;
				var _g = 0;
				var _g1 = inSize;
				while(_g < _g1) {
					++_g;
					++pSize;
					q = q.$N3;
					if(q == null) {
						break;
					}
				}
				qSize = inSize;
				while(pSize > 0 || qSize > 0 && q != null) {
					if(pSize == 0) {
						e = q;
						q = q.$N3;
						--qSize;
					} else if(qSize == 0 || q == null) {
						e = p;
						p = p.$N3;
						--pSize;
					} else if(p.$CH <= q.$CH) {
						e = p;
						p = p.$N3;
						--pSize;
					} else {
						e = q;
						q = q.$N3;
						--qSize;
					}
					if(tail != null) {
						tail.$N3 = e;
					} else {
						list = e;
					}
					e.$O3 = tail;
					tail = e;
				}
				p = q;
			}
			tail.$N3 = null;
			inSize *= 2;
			if(!(numMerges > 1)) {
				break;
			}
		}
		return list;
	}
	,__class__: $CPJ
};
var $CQJ = function() { };
$hxClasses["$CQJ"] = $CQJ;
$CQJ.__name__ = "$CQJ";
var $CRJ = function() {
	$CtB.call(this);
};
$hxClasses["$CRJ"] = $CRJ;
$CRJ.__name__ = "$CRJ";
$CRJ.__super__ = $CtB;
$CRJ.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 19;
	}
	,$tO: function() {
		var assets = new $CLE();
		this.$pO.$8(assets);
		$CQJ.$z3 = assets;
		$CQJ.$y3 = assets;
		$CQJ.$03 = assets;
		$CQJ.$3Z = assets;
		this.$pO.$8(new $CyB("Home"));
	}
	,__class__: $CRJ
});
var $CSJ = function(startX,startY,w,h,callback) {
	this.$V4 = 0.1;
	this.$L4 = new $CZE();
	$CtB.call(this);
	this.$QC = startX | 0;
	this.$RC = startY | 0;
	this.$Y4 = w;
	this.$Z4 = h;
	this.$d4 = callback;
};
$hxClasses["$CSJ"] = $CSJ;
$CSJ.__name__ = "$CSJ";
$CSJ.__super__ = $CtB;
$CSJ.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 6;
	}
	,$rO: function() {
		if($CQJ.$63) {
			this.$zO($CcE.$Gc.$ya.down,$bind(this,this.$s4));
		}
		this.$zO($CcE.$Gc.getKeyboard().down,$bind(this,this.$t4));
		this.$zO($CcE.$Gc.getKeyboard().up,$bind(this,this.$u4));
		this.$f4();
	}
	,$f4: function() {
		this.$U4 = 0;
		this.$kd = [];
		this.$K4 = [];
		this.$N4 = [];
		this.$Q4 = new $CRE();
		$CUJ.$N5(this.$pO,this.$Q4,"blank",false,0,0);
		this.$W4 = -$CQJ.$E4 * $CQJ.$C4 / 2 + $CQJ.$E4 * 0.5;
		this.$X4 = -$CQJ.$E4 * $CQJ.$D4 / 2 + $CQJ.$E4 * 0.5;
		while(true) {
			if(this.$M4 != null) {
				var _this = this.$kd;
				var _g_current = 0;
				while(_g_current < _this.length) {
					++_g_current;
					var i = 0;
					while(i < $CQJ.$C4) {
						var j = 0;
						while(j < $CQJ.$D4) {
							this.$M4[i][j].dispose();
							++j;
						}
						++i;
					}
				}
			}
			this.$M4 = [];
			var i1 = 0;
			while(i1 < $CQJ.$C4) {
				var col = [];
				var j1 = 0;
				while(j1 < $CQJ.$D4) {
					var type = $CUJ.$E5(1,$CQJ.$B4);
					if(j1 > 1) {
						while(col[j1 - 1].$na[7].$hI == type && col[j1 - 2].$na[7].$hI == type) type = $CUJ.$E5(1,$CQJ.$B4);
					}
					if(i1 > 1) {
						while(this.$M4[i1 - 1][j1].$na[7].$hI == type && this.$M4[i1 - 2][j1].$na[7].$hI == type) type = $CUJ.$E5(1,$CQJ.$B4);
					}
					var tile = new $CRE().$8(new $CTJ(i1,j1,type,this.$W4 + i1 * $CQJ.$E4,this.$X4 + j1 * $CQJ.$E4,$bind(this,this.$g4)));
					this.$Q4.$rB(tile);
					this.$kd.push(tile);
					col.push(tile);
					++j1;
				}
				this.$M4.push(col);
				++i1;
			}
			if(!(this.$n4() < 10)) {
				break;
			}
		}
		this.$S4 = true;
	}
	,$g4: function(tile) {
		var _gthis = this;
		if(this.$K4.length < 2) {
			tile.$na[7].$94();
			this.$K4.push(tile);
		}
		if(this.$K4.length == 2) {
			$CQJ.$_3 = false;
			var script = new $C6I();
			script.$SP(new $C8I([new $C3I(0.2),new $C2I(function() {
				_gthis.$h4();
			})]));
			tile.$8(script);
		}
		$CQJ.$K4 = this.$K4;
	}
	,$h4: function() {
		var _gthis = this;
		var adjacent = false;
		var tile1 = this.$K4[0];
		var tile2 = this.$K4[1];
		if(tile1.$na[7].$z4 == tile2.$na[7].$z4) {
			if(tile1.$na[7].$y4 == tile2.$na[7].$y4 + 1) {
				adjacent = true;
			} else if(tile1.$na[7].$y4 == tile2.$na[7].$y4 - 1) {
				adjacent = true;
			}
		} else if(tile1.$na[7].$y4 == tile2.$na[7].$y4) {
			if(tile1.$na[7].$z4 == tile2.$na[7].$z4 + 1) {
				adjacent = true;
			} else if(tile1.$na[7].$z4 == tile2.$na[7].$z4 - 1) {
				adjacent = true;
			}
		}
		var row1 = tile1.$na[7].$z4;
		var column1 = tile1.$na[7].$y4;
		if(adjacent) {
			tile1.$na[10].$QC.$jb(tile2.$na[10].$QC.$Lb,$CQJ.$F4);
			tile1.$na[10].$RC.$jb(tile2.$na[10].$RC.$Lb,$CQJ.$F4);
			tile2.$na[10].$QC.$jb(tile1.$na[10].$QC.$Lb,$CQJ.$F4);
			tile2.$na[10].$RC.$jb(tile1.$na[10].$RC.$Lb,$CQJ.$F4);
			tile1.$na[7].$z4 = tile2.$na[7].$z4;
			tile1.$na[7].$y4 = tile2.$na[7].$y4;
			tile2.$na[7].$z4 = row1;
			tile2.$na[7].$y4 = column1;
			var script = new $C6I();
			script.$SP(new $C8I([new $C3I($CQJ.$F4 + 0.1),new $C2I(function() {
				var temp = _gthis.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4];
				_gthis.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4] = _gthis.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4];
				_gthis.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4] = temp;
				if(_gthis.$k4()) {
					tile1.$na[7].$74();
					tile2.$na[7].$74();
				} else {
					row1 = tile1.$na[7].$z4;
					column1 = tile1.$na[7].$y4;
					tile1.$na[10].$QC.$jb(tile2.$na[10].$QC.$Lb,$CQJ.$F4);
					tile1.$na[10].$RC.$jb(tile2.$na[10].$RC.$Lb,$CQJ.$F4);
					tile2.$na[10].$QC.$jb(tile1.$na[10].$QC.$Lb,$CQJ.$F4);
					tile2.$na[10].$RC.$jb(tile1.$na[10].$RC.$Lb,$CQJ.$F4);
					tile1.$na[7].$z4 = tile2.$na[7].$z4;
					tile1.$na[7].$y4 = tile2.$na[7].$y4;
					tile2.$na[7].$z4 = row1;
					tile2.$na[7].$y4 = column1;
					var temp = _gthis.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4];
					_gthis.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4] = _gthis.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4];
					_gthis.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4] = temp;
				}
			}),new $C3I($CQJ.$F4 + 0.1),new $C2I(function() {
				if(_gthis.$E != null) {
					if(_gthis.$E.length > 0) {
						var _this = _gthis.$E;
						var _g_current = 0;
						while(_g_current < _this.length) _this[_g_current++].$na[7].$E();
					}
				}
				_gthis.$i4();
			})]));
			tile1.$8(script);
		} else {
			this.$i4();
		}
	}
	,$i4: function() {
		this.$K4[0].$na[7].$i4();
		this.$K4[1].$na[7].$i4();
		this.$K4 = [];
		$CQJ.$_3 = true;
		$CQJ.$A4 = false;
	}
	,$j4: function() {
		var i = 0;
		while(i < $CQJ.$C4) {
			var j = 0;
			while(j < $CQJ.$D4) {
				this.$M4[i][j].$na[7].$84(false);
				++j;
			}
			++i;
		}
	}
	,$k4: function() {
		var gotMatch = false;
		this.$E = [];
		var i = 0;
		while(i < $CQJ.$C4) {
			var j = 0;
			while(j < $CQJ.$D4) {
				this.$M4[i][j].$na[7].$84(false);
				++j;
			}
			++i;
		}
		var i = 2;
		while(i < $CQJ.$C4) {
			var j = 0;
			while(j < $CQJ.$D4) {
				var tile = this.$M4[i][j];
				var tilel1 = this.$M4[i - 1][j];
				var tilel2 = this.$M4[i - 2][j];
				if(tile.$na[7].$hI == tilel1.$na[7].$hI && tilel1.$na[7].$hI == tilel2.$na[7].$hI) {
					tile.$na[7].$x4 = true;
					tilel1.$na[7].$x4 = true;
					tilel2.$na[7].$x4 = true;
					gotMatch = true;
				}
				++j;
			}
			++i;
		}
		var i = 0;
		while(i < $CQJ.$C4) {
			var j = 2;
			while(j < $CQJ.$D4) {
				var tile = this.$M4[i][j];
				var tilel1 = this.$M4[i][j - 1];
				var tilel2 = this.$M4[i][j - 2];
				if(tile.$na[7].$hI == tilel1.$na[7].$hI && tilel1.$na[7].$hI == tilel2.$na[7].$hI) {
					tile.$na[7].$x4 = true;
					tilel1.$na[7].$x4 = true;
					tilel2.$na[7].$x4 = true;
					gotMatch = true;
				}
				++j;
			}
			++i;
		}
		var i = 0;
		while(i < $CQJ.$C4) {
			var j = 0;
			while(j < $CQJ.$D4) {
				this.$M4[i][j].$na[7].$84(true);
				++j;
			}
			++i;
		}
		if(gotMatch) {
			this.$L4.$fb();
			this.$l4();
		}
		return gotMatch;
	}
	,$l4: function() {
		var _gthis = this;
		this.$N4 = [];
		$CQJ.$_3 = false;
		var i = 0;
		while(i < $CQJ.$C4) {
			var removals = 0;
			var removed = [];
			var j = $CQJ.$D4;
			var n = 0;
			while(n < $CQJ.$D4) {
				--j;
				var tile = this.$M4[i][j];
				if(tile.$na[7].$x4) {
					++removals;
					tile.$na[7].$14 = this.$X4 - removals * $CQJ.$E4;
					removed.push(tile);
					var idx = this.$M4[i].indexOf(tile);
					if(idx >= 0) {
						this.$M4[i].splice(idx,1);
					}
					tile.$na[7].$E();
				} else {
					tile.$na[7].$04 = removals;
				}
				++n;
			}
			var _g = 0;
			while(_g < removed.length) {
				var t = removed[_g];
				++_g;
				t.$na[7].$04 = removals;
				this.$M4[i].unshift(t);
			}
			++i;
		}
		var script = new $C6I();
		script.$SP(new $C8I([new $C3I(0.35),new $C2I(function() {
			_gthis.$m4();
		})]));
		this.$pO.$8(script);
	}
	,$m4: function() {
		var _gthis = this;
		var delay = 0.0;
		var i = 0;
		while(i < $CQJ.$C4) {
			var r = 0;
			var j = 0;
			while(j < $CQJ.$D4) {
				var tile = this.$M4[i][j];
				tile.$na[7].$z4 = r++;
				if(tile.$na[7].$x4) {
					tile.$na[10].$RC.set__(tile.$na[7].$14);
					tile.$na[7].$64();
				}
				if(this.$V4 * tile.$na[7].$04 > delay) {
					delay = this.$V4 * tile.$na[7].$04;
				}
				if(this.$V4 * tile.$na[7].$04 > this.$V4 * tile.$na[7].$04) {
					delay = this.$V4 * tile.$na[7].$04;
				}
				tile.$na[10].$RC.$kb($CQJ.$E4 * tile.$na[7].$04,this.$V4 * tile.$na[7].$04);
				tile.$na[7].$x4 = false;
				++j;
			}
			++i;
		}
		var script = new $C6I();
		script.$SP(new $C8I([new $C3I(delay + 0.1),new $C2I(function() {
			if(!_gthis.$k4()) {
				$CQJ.$_3 = true;
				if(_gthis.$n4() == 0) {
					_gthis.$r4();
				}
			}
		})]));
		this.$pO.$8(script);
	}
	,$n4: function() {
		this.$J4 = [];
		var i = 2;
		while(i < $CQJ.$C4) {
			var j = 0;
			while(j < $CQJ.$D4) {
				var tile1 = this.$M4[i][j];
				var tile2 = this.$M4[i - 1][j];
				var temp = this.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4];
				this.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4] = this.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4];
				this.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4] = temp;
				if(this.$o4()) {
					this.$J4.push([tile1,tile2]);
				}
				var temp1 = this.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4];
				this.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4] = this.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4];
				this.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4] = temp1;
				++j;
			}
			++i;
		}
		var i = 0;
		while(i < $CQJ.$C4) {
			var j = 2;
			while(j < $CQJ.$D4) {
				var tile1 = this.$M4[i][j];
				var tile2 = this.$M4[i][j - 1];
				var temp = this.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4];
				this.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4] = this.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4];
				this.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4] = temp;
				if(this.$o4()) {
					this.$J4.push([tile1,tile2]);
				}
				var temp1 = this.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4];
				this.$M4[tile1.$na[7].$y4][tile1.$na[7].$z4] = this.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4];
				this.$M4[tile2.$na[7].$y4][tile2.$na[7].$z4] = temp1;
				++j;
			}
			++i;
		}
		if(this.$J4.length <= 0) {
			this.$r4();
		}
		$CQJ.$J4 = this.$J4;
		return this.$J4.length;
	}
	,$o4: function() {
		var gotMatch = false;
		this.$E = [];
		var i = 0;
		while(i < $CQJ.$C4) {
			var j = 0;
			while(j < $CQJ.$D4) {
				this.$M4[i][j].$na[7].$84(false);
				++j;
			}
			++i;
		}
		var i = 2;
		while(i < $CQJ.$C4) {
			var j = 0;
			while(j < $CQJ.$D4) {
				var tile = this.$M4[i][j];
				var tilel1 = this.$M4[i - 1][j];
				var tilel2 = this.$M4[i - 2][j];
				if(tile.$na[7].$hI == tilel1.$na[7].$hI && tilel1.$na[7].$hI == tilel2.$na[7].$hI) {
					tile.$na[7].$x4 = true;
					tilel1.$na[7].$x4 = true;
					tilel2.$na[7].$x4 = true;
					gotMatch = true;
				}
				++j;
			}
			++i;
		}
		var i = 0;
		while(i < $CQJ.$C4) {
			var j = 2;
			while(j < $CQJ.$D4) {
				var tile = this.$M4[i][j];
				var tilel1 = this.$M4[i][j - 1];
				var tilel2 = this.$M4[i][j - 2];
				if(tile.$na[7].$hI == tilel1.$na[7].$hI && tilel1.$na[7].$hI == tilel2.$na[7].$hI) {
					tile.$na[7].$x4 = true;
					tilel1.$na[7].$x4 = true;
					tilel2.$na[7].$x4 = true;
					gotMatch = true;
				}
				++j;
			}
			++i;
		}
		return gotMatch;
	}
	,$p4: function() {
		this.$n4();
		if(this.$J4.length > 0) {
			var _this = this.$J4;
			var _g_current = 0;
			while(_g_current < _this.length) {
				var hint = _this[_g_current++];
				hint[0].$na[7].$Us();
				hint[1].$na[7].$Us();
			}
		}
	}
	,$q4: function() {
		if($CQJ.$_3) {
			if(this.$N4.length > 0) {
				this.$N4[0].$na[7].$Us();
				this.$N4[1].$na[7].$Us();
			} else {
				this.$n4();
				if(this.$J4.length > 0) {
					var hint = this.$J4[$CUJ.$E5(0,this.$J4.length - 1)];
					hint[0].$na[7].$Us();
					hint[1].$na[7].$Us();
					this.$N4.push(hint[0]);
					this.$N4.push(hint[1]);
				}
			}
		}
	}
	,$r4: function() {
		var _gthis = this;
		$CQJ.$_3 = false;
		var txt = new $CRE();
		$CUJ.$R5(this.$pO,txt,$CQJ.$33,"Center",0,-30,$C3C.$EV($CQJ.$13,"noSwaps"));
		txt = new $CRE();
		$CUJ.$R5(this.$pO,txt,$CQJ.$33,"Center",0,30,$C3C.$EV($CQJ.$13,"gameOver"));
		var script = new $C6I();
		script.$SP(new $C8I([new $C3I(2),new $C2I(function() {
			_gthis.$d4();
		})]));
		this.$pO.$8(script);
	}
	,$vO: function(dt) {
	}
	,$s4: function(event) {
	}
	,$t4: function(e) {
		if($CQJ.$H4) {
			if(e.$TC != kit_input_Key.Number1) {
				if(e.$TC != kit_input_Key.Number2) {
					if(e.$TC == kit_input_Key.Number9) {
						this.$j4();
					} else if(e.$TC == kit_input_Key.Number0) {
						this.$k4();
					} else if(e.$TC == kit_input_Key.Number7) {
						this.$l4();
					} else if(e.$TC == kit_input_Key.Number8) {
						this.$m4();
					} else if(e.$TC == kit_input_Key.Number3) {
						this.$n4();
					} else if(e.$TC == kit_input_Key.Number4) {
						this.$p4();
					} else if(e.$TC == kit_input_Key.H) {
						this.$q4();
					}
				}
			}
		}
	}
	,$u4: function(e) {
	}
	,__class__: $CSJ
});
var project_Match3Object = function() {
	this.tileSize = 60;
	this.rows = 10;
	this.columns = 10;
	this.numGems = 8;
	this.levelCount = 5;
	kit_creator_CreatorObject.call(this);
};
$hxClasses["project.Match3Object"] = project_Match3Object;
project_Match3Object.__name__ = "project.Match3Object";
project_Match3Object.__super__ = kit_creator_CreatorObject;
project_Match3Object.prototype = $extend(kit_creator_CreatorObject.prototype,{
	$tO: function() {
		var _gthis = this;
		kit_creator_CreatorObject.prototype.$tO.call(this);
		if(this.numGems != null) {
			$CQJ.$B4 = this.numGems;
		}
		if(this.columns != null) {
			$CQJ.$C4 = this.columns;
		}
		if(this.rows != null) {
			$CQJ.$D4 = this.rows;
		}
		if(this.numGems != null) {
			$CQJ.$B4 = this.numGems;
		}
		if(this.tileSize != null) {
			$CQJ.$E4 = this.tileSize;
		}
		var match3 = new $CSJ(0,0,this.info.$IP | 0,this.info.$JP | 0,function() {
			if(_gthis.onGameOver != null) {
				_gthis.$pO.$Oa(_gthis.onGameOver,_gthis.$pO);
			}
		});
		var count = 0;
		match3.$L4.$eb(function() {
			if((count += 1) == _gthis.levelCount) {
				if(_gthis.onGameOver != null) {
					_gthis.$pO.$Oa(_gthis.onGameOver,_gthis.$pO);
				}
			} else if(_gthis.onMatch != null) {
				_gthis.$pO.$Oa(_gthis.onMatch,_gthis.$pO);
			}
		});
		var sprite = new $C6B();
		this.info.$OP(sprite);
		this.$pO.$8(sprite);
		this.$pO.$rB(new $CRE().$8(match3));
	}
	,__class__: project_Match3Object
});
var project_MoveToHintTile = function() {
	this.ease = ez_TweenEase.Linear;
	this.duration = 0.5;
	ez_TweenAction.call(this);
};
$hxClasses["project.MoveToHintTile"] = project_MoveToHintTile;
project_MoveToHintTile.__name__ = "project.MoveToHintTile";
project_MoveToHintTile.__super__ = ez_TweenAction;
project_MoveToHintTile.prototype = $extend(ez_TweenAction.prototype,{
	$RP: function(target) {
		var boardX = null;
		var boardY = null;
		var tileOffsetX = null;
		var tileOffsetY = null;
		var startX = null;
		var startY = null;
		var endX = null;
		var endY = null;
		var instance = this.script.$pO.$Za(10,$C3E).$7d.h[this.boardObject.__id__];
		if(instance != null) {
			var instanceSprite = instance.$na[10];
			if(instanceSprite != null) {
				boardX = instanceSprite.$QC.$Lb;
				boardY = instanceSprite.$RC.$Lb;
			}
		}
		tileOffsetX = boardX + $CQJ.$E4 / 2;
		tileOffsetY = boardY + $CQJ.$E4 / 2;
		if($CQJ.$J4.length > 0) {
			var _this = $CQJ.$J4;
			var _g_current = 0;
			while(_g_current < _this.length) {
				var hint = _this[_g_current++];
				startX = tileOffsetX + hint[0].$na[7].$pO.$na[10].$QC.$Lb;
				startY = tileOffsetY + hint[0].$na[7].$pO.$na[10].$RC.$Lb;
				endX = tileOffsetX + hint[1].$na[7].$pO.$na[10].$QC.$Lb;
				endY = tileOffsetY + hint[1].$na[7].$pO.$na[10].$RC.$Lb;
			}
		}
		var sprite = target.$na[10];
		sprite.$QC.set__(startX);
		sprite.$RC.set__(startY);
		return this.$rP(target,sprite.$QC,endX != null ? endX : sprite.$QC.$Lb,sprite.$RC,endY != null ? endY : sprite.$RC.$Lb,this.duration,this.ease);
	}
	,__class__: project_MoveToHintTile
});
var project_MoveToMatchTile = function() {
	this.ease = ez_TweenEase.Linear;
	this.duration = 0.5;
	kit_creator_CreatorAction.call(this);
};
$hxClasses["project.MoveToMatchTile"] = project_MoveToMatchTile;
project_MoveToMatchTile.__name__ = "project.MoveToMatchTile";
project_MoveToMatchTile.__super__ = kit_creator_CreatorAction;
project_MoveToMatchTile.prototype = $extend(kit_creator_CreatorAction.prototype,{
	$QP: function(target) {
		var boardX = null;
		var boardY = null;
		var tileOffsetX = null;
		var tileOffsetY = null;
		var endX = null;
		var endY = null;
		var instance = this.script.$pO.$Za(10,$C3E).$7d.h[this.boardObject.__id__];
		if(instance != null) {
			var instanceSprite = instance.$na[10];
			if(instanceSprite != null) {
				boardX = instanceSprite.$QC.$Lb;
				boardY = instanceSprite.$RC.$Lb;
			}
		}
		tileOffsetX = boardX - $CQJ.$E4 / 2;
		tileOffsetY = boardY - $CQJ.$E4 / 2;
		if($CQJ.$K4.length > 0) {
			endX = tileOffsetX + $CQJ.$K4[1].$na[7].$pO.$na[10].$QC.$Lb;
			endY = tileOffsetY + $CQJ.$K4[1].$na[7].$pO.$na[10].$RC.$Lb;
		}
		var sprite = target.$na[10];
		sprite.$QC.set__(endX);
		sprite.$RC.set__(endY);
	}
	,__class__: project_MoveToMatchTile
});
var project_PlayParticlesAtMatchTile = function() {
	this.ease = ez_TweenEase.Linear;
	this.duration = 0.5;
	this.particleSystem = null;
	this.amount = null;
	kit_creator_GroupAction.call(this);
};
$hxClasses["project.PlayParticlesAtMatchTile"] = project_PlayParticlesAtMatchTile;
project_PlayParticlesAtMatchTile.__name__ = "project.PlayParticlesAtMatchTile";
project_PlayParticlesAtMatchTile.__super__ = kit_creator_GroupAction;
project_PlayParticlesAtMatchTile.prototype = $extend(kit_creator_GroupAction.prototype,{
	$RP: function(target) {
		var boardX = null;
		var boardY = null;
		var tileOffsetX = null;
		var tileOffsetY = null;
		var startX = null;
		var startY = null;
		var endX = null;
		var endY = null;
		var instance = this.script.$pO.$Za(10,$C3E).$7d.h[this.boardObject.__id__];
		if(instance != null) {
			var instanceSprite = instance.$na[10];
			if(instanceSprite != null) {
				boardX = instanceSprite.$QC.$Lb;
				boardY = instanceSprite.$RC.$Lb;
			}
		}
		tileOffsetX = boardX;
		tileOffsetY = boardY;
		if($CQJ.$K4.length == 2) {
			startX = tileOffsetX + $CQJ.$K4[0].$na[7].$pO.$na[10].$QC.$Lb;
			startY = tileOffsetY + $CQJ.$K4[0].$na[7].$pO.$na[10].$RC.$Lb;
			endX = tileOffsetX + $CQJ.$K4[1].$na[7].$pO.$na[10].$QC.$Lb;
			endY = tileOffsetY + $CQJ.$K4[1].$na[7].$pO.$na[10].$RC.$Lb;
		}
		this.$v4(target,endX,endY);
		this.$v4(target,endX + 30,endY);
		this.$v4(target,endX - 30,endY);
		this.$v4(target,startX,startY);
		return null;
	}
	,$v4: function(target,px,py) {
		var assets = target.$Za(13);
		if(assets == null) {
			return null;
		}
		var emitter = assets.$tZ(this.particleSystem).$uk();
		emitter.$tj.$eb(function() {
			emitter.$pO.dispose();
		});
		if(this.amount != null) {
			emitter.set_maxParticles(this.amount);
		}
		emitter.$sQ(px,py);
		target.$gB.$rB(new $CRE().$8(emitter));
		return kit_creator_CreatorAction.$TP(this.subActions,emitter.$pO);
	}
	,__class__: project_PlayParticlesAtMatchTile
});
var $CTJ = function(c,r,t,startX,startY,callback) {
	this.$rI = true;
	this.$x4 = false;
	this.$w4 = 0.3;
	$CtB.call(this);
	this.$QC = startX | 0;
	this.$RC = startY | 0;
	this.$y4 = c;
	this.$z4 = r;
	if(t < 0) {
		this.$hI = $CUJ.$E5(1,$CQJ.$B4);
	} else {
		this.$hI = t;
	}
	this.$54 = callback;
};
$hxClasses["$CTJ"] = $CTJ;
$CTJ.__name__ = "$CTJ";
$CTJ.__super__ = $CtB;
$CTJ.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 7;
	}
	,$rO: function() {
		this.$pO.$8(new $ChF($CQJ.$3Z.getTexture("blank")));
		this.$pO.$na[10].$rQ();
		this.$pO.$na[10].$sQ(this.$QC,this.$RC);
		this.$24 = new $CRE();
		$CUJ.$N5(this.$pO,this.$24,"game/tile",true,0,0);
		this.$24.$na[10].$PQ.set__(this.$w4);
		this.$44 = new $CRE();
		$CUJ.$N5(this.$pO,this.$44,"game/highlight",true,0,0);
		this.$44.$na[10].set_visible(false);
		this.$34 = new $CRE();
		$CUJ.$N5(this.$pO,this.$34,"game/gem_" + this.$hI,true,0,0);
		this.$zO($CcE.$Gc.$va.down,$bind(this,this.$$4));
		this.$zO($CcE.$Gc.$va.up,$bind(this,this.$_4));
		this.$zO($CcE.$Gc.$va.move,$bind(this,this.$A5));
	}
	,$64: function() {
		this.$hI = $CUJ.$E5(1,$CQJ.$B4);
		var value = this.$34.$na[10];
		(((value) instanceof $ChF) ? value : null).$Ge = $CQJ.$3Z.getTexture("game/gem_" + this.$hI);
		this.$34.$na[10].$PQ.set__(1);
		this.$34.$na[10].$NQ.set__(1);
		this.$34.$na[10].$OQ.set__(1);
	}
	,$74: function() {
		this.$44.$na[10].set_visible(false);
		this.$24.$na[10].$PQ.$jb(this.$w4,0.1);
	}
	,$84: function(show) {
		if(show) {
			this.$44.$na[10].set_visible(this.$x4);
		} else {
			this.$04 = 0;
			this.$x4 = false;
			this.$44.$na[10].set_visible(false);
		}
		this.$24.$na[10].$PQ.$jb(this.$w4,0.2);
	}
	,$E: function() {
		this.$34.$na[10].$PQ.$jb(0,0.25);
		this.$34.$na[10].$NQ.$jb(0.3,0.25);
		this.$34.$na[10].$OQ.$jb(0.3,0.25);
		this.$44.$na[10].set_visible(false);
	}
	,$94: function() {
		this.$24.$na[10].$PQ.set__(1);
		this.$rI = false;
	}
	,$i4: function() {
		if(this.$24.$na[11] != null) {
			this.$24.$na[11].$a2();
		}
		this.$24.$na[10].$PQ.$jb(this.$w4,0.2);
		this.$rI = true;
	}
	,$Us: function() {
		var _gthis = this;
		this.$24.$na[10].$PQ.$jb(1,0.4);
		var script = new $C6I();
		script.$SP(new $C8I([new $C3I(0.5),new $C2I(function() {
			_gthis.$24.$na[10].$PQ.$jb(_gthis.$w4 + 0.1,0.4);
		}),new $C3I(0.5),new $C2I(function() {
			_gthis.$24.$na[10].$PQ.$jb(1,0.5);
		}),new $C3I(0.5),new $C2I(function() {
			_gthis.$24.$na[10].$PQ.$jb(_gthis.$w4 + 0.1,0.5);
		}),new $C3I(0.5),new $C2I(function() {
			_gthis.$24.$na[10].$PQ.$jb(1,0.5);
		}),new $C3I(0.5),new $C2I(function() {
			_gthis.$24.$na[10].$PQ.$jb(_gthis.$w4,0.4);
		})]));
		this.$24.$8(script);
	}
	,$vO: function(dt) {
		if(this.$hI == 0) {
			var fh = this.$34.$na[10].$FP;
			fh.set__(fh.$Lb + 90 * dt);
		}
	}
	,$$4: function(event) {
		if(this.$rI && event.$_g == this.$34.$na[10] && $CQJ.$_3) {
			this.$54(this.$pO);
		}
		$CQJ.$A4 = true;
	}
	,$_4: function(event) {
		$CQJ.$A4 = false;
	}
	,$A5: function(event) {
		if($CQJ.$A4 && this.$rI && event.$_g == this.$34.$na[10] && $CQJ.$_3) {
			this.$54(this.$pO);
		}
	}
	,__class__: $CTJ
});
var $CUJ = function() {
	$CtB.call(this);
};
$hxClasses["$CUJ"] = $CUJ;
$CUJ.__name__ = "$CUJ";
$CUJ.$E5 = function(min,max) {
	return Math.round(Math.random() * (max - min) + min);
};
$CUJ.$N5 = function(parent,ent,image,centered,x,y,pack,liteScale) {
	if(liteScale == null) {
		liteScale = 1;
	}
	if(pack == null) {
		pack = "MAIN";
	}
	switch(pack) {
	case "GAME":
		ent.$8(new $ChF($CQJ.$03.getTexture(image)));
		break;
	case "LOADER":
		ent.$8(new $ChF($CQJ.$z3.getTexture(image)));
		break;
	default:
		ent.$8(new $ChF($CQJ.$3Z.getTexture(image)));
	}
	parent.$rB(ent);
	if(centered) {
		ent.$na[10].$rQ();
	}
	ent.$na[10].$QC.set__(x);
	ent.$na[10].$RC.set__(y);
	if($CQJ.$s3) {
		if(liteScale == 80) {
			ent.$na[10].$wQ(1.25);
		} else if(liteScale == 50) {
			ent.$na[10].$wQ(2);
		}
	}
};
$CUJ.$R5 = function(parent,ent,fnt,align,x,y,xml) {
	ent.$8(new $CnF(fnt));
	parent.$rB(ent);
	if(align == "Left") {
		var value = ent.$na[10];
		(((value) instanceof $CnF) ? value : null).set_align(kit_display_TextAlign.Left);
	} else if(align == "Right") {
		var value = ent.$na[10];
		(((value) instanceof $CnF) ? value : null).set_align(kit_display_TextAlign.Right);
	} else {
		var value = ent.$na[10];
		(((value) instanceof $CnF) ? value : null).set_align(kit_display_TextAlign.Center);
	}
	var value = ent.$na[10];
	(((value) instanceof $CnF) ? value : null).$QC.set__(x);
	var value = ent.$na[10];
	(((value) instanceof $CnF) ? value : null).$RC.set__(y);
	var value = ent.$na[10];
	(((value) instanceof $CnF) ? value : null).set_text($C8C.get_innerData(xml));
	var value = ent.$na[10];
	var fh = (((value) instanceof $CnF) ? value : null).$QC;
	fh.set__(fh.$Lb + (parseFloat($C4C.$EV(xml,"offsetX")) | 0));
	var value = ent.$na[10];
	var fh = (((value) instanceof $CnF) ? value : null).$RC;
	fh.set__(fh.$Lb + (parseFloat($C4C.$EV(xml,"offsetY")) | 0));
	var value = ent.$na[10];
	(((value) instanceof $CnF) ? value : null).$wQ(parseFloat($C4C.$EV(xml,"fontScale")));
};
$CUJ.__super__ = $CtB;
$CUJ.prototype = $extend($CtB.prototype,{
	get_entitySlot: function() {
		return 8;
	}
	,__class__: $CUJ
});
var $CVJ = function(name,timelines,duration) {
	this.$Ui = 0;
	this.$e5 = new $CUC();
	if(name == null) {
		throw haxe_Exception.thrown(new $CwJ("name cannot be null."));
	}
	this.$CP = name;
	this.$Ui = duration;
	this.$g5(timelines);
};
$hxClasses["$CVJ"] = $CVJ;
$CVJ.__name__ = "$CVJ";
$CVJ.$j5 = function(values,target,step) {
	var low = 0;
	var high = values.length / step - 2 | 0;
	if(high == 0) {
		return step;
	}
	var current = high >>> 1;
	while(true) {
		if(values[(current + 1) * step] <= target) {
			low = current + 1;
		} else {
			high = current;
		}
		if(low == high) {
			return (low + 1) * step;
		}
		current = low + high >>> 1;
	}
};
$CVJ.$k5 = function(values,target) {
	var low = 0;
	var high = values.length - 2;
	if(high == 0) {
		return 1;
	}
	var current = high >>> 1;
	while(true) {
		if(values[current + 1] <= target) {
			low = current + 1;
		} else {
			high = current;
		}
		if(low == high) {
			return low + 1;
		}
		current = low + high >>> 1;
	}
};
$CVJ.prototype = {
	$g5: function(timelines) {
		if(timelines == null) {
			throw haxe_Exception.thrown(new $CwJ("timelines cannot be null."));
		}
		this.$d5 = timelines;
		var this1 = this.$e5;
		var keys = [];
		var key = this1.keys();
		while(key.hasNext()) keys.push(key.next());
		var _g = 0;
		while(_g < keys.length) this1.remove(keys[_g++]);
		var _g = 0;
		var _g1 = timelines;
		while(_g < _g1.length) {
			var this1 = this.$e5;
			var val = _g1[_g++].getPropertyId();
			if(!this1.h.hasOwnProperty(val)) {
				this1.h[val] = true;
			}
		}
	}
	,$h5: function(id) {
		return this.$e5.h.hasOwnProperty(id);
	}
	,__class__: $CVJ
};
var $CWJ = function() { };
$hxClasses["$CWJ"] = $CWJ;
$CWJ.__name__ = "$CWJ";
$CWJ.__isInterface__ = true;
$CWJ.prototype = {
	__class__: $CWJ
};
var $CaJ = function() { };
$hxClasses["$CaJ"] = $CaJ;
$CaJ.__name__ = "$CaJ";
$CaJ.__isInterface__ = true;
$CaJ.__interfaces__ = [$CWJ];
var $CbJ = function() { };
$hxClasses["$CbJ"] = $CbJ;
$CbJ.__name__ = "$CbJ";
$CbJ.__isInterface__ = true;
$CbJ.__interfaces__ = [$CWJ];
var $CcJ = function(frameCount) {
	if(frameCount <= 0) {
		throw haxe_Exception.thrown(new $CwJ("frameCount must be > 0: " + frameCount));
	}
	var length = (frameCount - 1) * 19;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var array = [];
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.$z5 = array;
};
$hxClasses["$CcJ"] = $CcJ;
$CcJ.__name__ = "$CcJ";
$CcJ.__interfaces__ = [$CWJ];
$CcJ.prototype = {
	getPropertyId: function() {
		return 0;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
	}
	,$55: function(frameIndex,percent) {
		if(percent < 0) {
			percent = 0;
		} else if(percent > 1) {
			percent = 1;
		}
		var curves = this.$z5;
		var i = frameIndex * 19;
		var type = curves[i];
		if(type == 0) {
			return percent;
		}
		if(type == 1) {
			return 0;
		}
		++i;
		var x = 0;
		var start = i;
		var n = i + 19 - 1;
		while(i < n) {
			x = curves[i];
			if(x >= percent) {
				if(i == start) {
					return curves[i + 1] * percent / x;
				}
				var prevX = curves[i - 2];
				var prevY = curves[i - 1];
				return prevY + (curves[i + 1] - prevY) * (percent - prevX) / (x - prevX);
			}
			i += 2;
		}
		var y = curves[i - 1];
		return y + (1 - y) * (percent - x) / (1 - x);
	}
	,__class__: $CcJ
};
var $CdJ = function(frameCount) {
	this.$$5 = 0;
	$CcJ.call(this,frameCount);
	var length = frameCount << 1;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var array = [];
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.$Si = array;
};
$hxClasses["$CdJ"] = $CdJ;
$CdJ.__name__ = "$CdJ";
$CdJ.__interfaces__ = [$CaJ];
$CdJ.__super__ = $CcJ;
$CdJ.prototype = $extend($CcJ.prototype,{
	getPropertyId: function() {
		return this.$$5;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.$g_[this.$$5];
		if(!bone.$rI) {
			return;
		}
		var frames = this.$Si;
		if(time < frames[0]) {
			while(true) {
				if(blend == 0) {
					bone.$FP = bone.$HU.$FP;
					return;
				} else if(blend == 1) {
					var r = bone.$HU.$FP - bone.$FP;
					bone.$FP += (r - (16384 - (16384.499999999996 - r / 360 | 0)) * 360) * alpha;
				}
				break;
			}
			return;
		}
		if(time >= frames[frames.length - 2]) {
			var r = frames[frames.length + (-1)];
			while(true) {
				if(blend == 0) {
					bone.$FP = bone.$HU.$FP + r * alpha;
					break;
				} else if(blend == 1) {
					r += bone.$HU.$FP - bone.$FP;
					r -= (16384 - (16384.499999999996 - r / 360 | 0)) * 360;
					bone.$FP += r * alpha;
				} else if(blend == 2) {
					r += bone.$HU.$FP - bone.$FP;
					r -= (16384 - (16384.499999999996 - r / 360 | 0)) * 360;
					bone.$FP += r * alpha;
				} else if(blend == 3) {
					bone.$FP += r * alpha;
				}
				break;
			}
			return;
		}
		var frame = $CVJ.$j5(frames,time,2);
		var prevRotation = frames[frame + (-1)];
		var frameTime = frames[frame];
		var percent = this.$55((frame >> 1) - 1,1 - (time - frameTime) / (frames[frame + (-2)] - frameTime));
		var r = frames[frame + 1] - prevRotation;
		r = prevRotation + (r - (16384 - (16384.499999999996 - r / 360 | 0)) * 360) * percent;
		while(true) {
			if(blend == 0) {
				bone.$FP = bone.$HU.$FP + (r - (16384 - (16384.499999999996 - r / 360 | 0)) * 360) * alpha;
				break;
			} else if(blend == 1) {
				r += bone.$HU.$FP - bone.$FP;
				bone.$FP += (r - (16384 - (16384.499999999996 - r / 360 | 0)) * 360) * alpha;
			} else if(blend == 2) {
				r += bone.$HU.$FP - bone.$FP;
				bone.$FP += (r - (16384 - (16384.499999999996 - r / 360 | 0)) * 360) * alpha;
			} else if(blend == 3) {
				bone.$FP += (r - (16384 - (16384.499999999996 - r / 360 | 0)) * 360) * alpha;
			}
			break;
		}
	}
	,__class__: $CdJ
});
var $CjJ = function(frameCount) {
	this.$H6 = 0;
	if(frameCount <= 0) {
		throw haxe_Exception.thrown(new $CwJ("frameCount must be > 0: " + frameCount));
	}
	var length = frameCount;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var array = [];
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.$Si = array;
	var length = frameCount;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var array = [];
	if(length != 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			array[len - 1] = null;
		}
	}
	this.$R6 = array;
};
$hxClasses["$CjJ"] = $CjJ;
$CjJ.__name__ = "$CjJ";
$CjJ.__interfaces__ = [$CbJ];
$CjJ.prototype = {
	getPropertyId: function() {
		return 67108864 + this.$H6;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var slot = skeleton.$jAB[this.$H6];
		if(!slot.$LCB.$rI) {
			return;
		}
		if(direction == 1 && blend == 0) {
			var attachmentName = slot.$HU.$VCB;
			var attachment = attachmentName == null ? null : skeleton.$V6(this.$H6,attachmentName);
			if(slot.$f2 != attachment) {
				slot.$f2 = attachment;
				slot.$NCB = slot.$LCB.$j2.$7b;
				var this1 = slot.$q5;
				this1.splice(0,this1.length);
			}
			return;
		}
		var frames = this.$Si;
		if(time < frames[0]) {
			if(blend == 0 || blend == 1) {
				var attachmentName = slot.$HU.$VCB;
				var attachment = attachmentName == null ? null : skeleton.$V6(this.$H6,attachmentName);
				if(slot.$f2 != attachment) {
					slot.$f2 = attachment;
					slot.$NCB = slot.$LCB.$j2.$7b;
					var this1 = slot.$q5;
					this1.splice(0,this1.length);
				}
			}
			return;
		}
		var frameIndex = 0;
		if(time >= frames[frames.length - 1]) {
			frameIndex = frames.length - 1;
		} else {
			frameIndex = $CVJ.$k5(frames,time) - 1;
		}
		var attachmentName = this.$R6[frameIndex];
		var attachment = attachmentName == null ? null : skeleton.$V6(this.$H6,attachmentName);
		if(slot.$f2 != attachment) {
			slot.$f2 = attachment;
			slot.$NCB = slot.$LCB.$j2.$7b;
			var this1 = slot.$q5;
			this1.splice(0,this1.length);
		}
	}
	,__class__: $CjJ
};
var $ClJ = function(frameCount) {
	if(frameCount <= 0) {
		throw haxe_Exception.thrown(new $CwJ("frameCount must be > 0: " + frameCount));
	}
	var length = frameCount;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var array = [];
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.$Si = array;
	var length = frameCount;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var array = [];
	if(length != 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			array[len - 1] = null;
		}
	}
	this.$W6 = array;
};
$hxClasses["$ClJ"] = $ClJ;
$ClJ.__name__ = "$ClJ";
$ClJ.__interfaces__ = [$CWJ];
$ClJ.prototype = {
	getPropertyId: function() {
		return 7 << 24;
	}
	,apply: function(skeleton,lastTime,time,firedEvents,alpha,blend,direction) {
		if(firedEvents == null) {
			return;
		}
		var frames = this.$Si;
		var frameCount = frames.length;
		if(lastTime > time) {
			this.apply(skeleton,lastTime,999999999,firedEvents,alpha,blend,direction);
			lastTime = -1;
		} else if(lastTime >= frames[frameCount - 1]) {
			return;
		}
		if(time < frames[0]) {
			return;
		}
		var frame = 0;
		if(lastTime < frames[0]) {
			frame = 0;
		} else {
			frame = $CVJ.$k5(frames,lastTime);
			var frameTime = frames[frame];
			while(frame > 0) {
				if(frames[frame - 1] != frameTime) {
					break;
				}
				--frame;
			}
		}
		while(frame < frameCount && time >= frames[frame]) {
			firedEvents.push(this.$W6[frame]);
			++frame;
		}
	}
	,__class__: $ClJ
};
var $CmJ = function(frameCount) {
	if(frameCount <= 0) {
		throw haxe_Exception.thrown(new $CwJ("frameCount must be > 0: " + frameCount));
	}
	var length = frameCount;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var array = [];
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.$Si = array;
	var length = frameCount;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var array = [];
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			array[len - 1] = null;
		}
	}
	while(true) break;
	this.$Y6 = array;
};
$hxClasses["$CmJ"] = $CmJ;
$CmJ.__name__ = "$CmJ";
$CmJ.__interfaces__ = [$CWJ];
$CmJ.prototype = {
	getPropertyId: function() {
		return 8 << 24;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var drawOrder = skeleton.$s5;
		var slots = skeleton.$jAB;
		if(direction == 1 && blend == 0) {
			var src = slots;
			var dest = drawOrder;
			var length = slots.length;
			if(src == null) {
				throw haxe_Exception.thrown(new $CwJ("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new $CwJ("dest cannot be null."));
			}
			try {
				$C$K.$v(src,0,dest,0,length);
			} catch( _g ) {
				throw haxe_Exception.thrown(new $CoK("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
			return;
		}
		var frames = this.$Si;
		if(time < frames[0]) {
			if(blend == 0 || blend == 1) {
				var src = slots;
				var dest = drawOrder;
				var length = slots.length;
				if(src == null) {
					throw haxe_Exception.thrown(new $CwJ("src cannot be null."));
				}
				if(dest == null) {
					throw haxe_Exception.thrown(new $CwJ("dest cannot be null."));
				}
				try {
					$C$K.$v(src,0,dest,0,length);
				} catch( _g ) {
					throw haxe_Exception.thrown(new $CoK("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
				}
			}
			return;
		}
		var frame = 0;
		if(time >= frames[frames.length - 1]) {
			frame = frames.length - 1;
		} else {
			frame = $CVJ.$k5(frames,time) - 1;
		}
		var drawOrderToSetupIndex = this.$Y6[frame];
		if(drawOrderToSetupIndex == null) {
			var src = slots;
			var dest = drawOrder;
			var length = slots.length;
			if(src == null) {
				throw haxe_Exception.thrown(new $CwJ("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new $CwJ("dest cannot be null."));
			}
			try {
				$C$K.$v(src,0,dest,0,length);
			} catch( _g ) {
				throw haxe_Exception.thrown(new $CoK("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			var i = 0;
			var n = drawOrderToSetupIndex.length;
			while(i < n) {
				drawOrder[i] = slots[drawOrderToSetupIndex[i]];
				++i;
			}
		}
	}
	,__class__: $CmJ
};
var $CvJ = function(message,id) {
	if(id == null) {
		id = 0;
	}
	if(message == null) {
		message = "";
	}
	this.$fV = message;
	this.$h7 = id;
	this.$CP = "Error";
};
$hxClasses["$CvJ"] = $CvJ;
$CvJ.__name__ = "$CvJ";
$CvJ.prototype = {
	toString: function() {
		if(this.$fV != null) {
			return this.$fV;
		} else {
			return "Error";
		}
	}
	,__class__: $CvJ
};
var $CwJ = function(message) {
	if(message == null) {
		message = "";
	}
	$CvJ.call(this,message);
	this.$CP = "IllegalArgumentException";
};
$hxClasses["$CwJ"] = $CwJ;
$CwJ.__name__ = "$CwJ";
$CwJ.__super__ = $CvJ;
$CwJ.prototype = $extend($CvJ.prototype,{
	__class__: $CwJ
});
var $CxJ = function(data) {
	this.$q7 = new $C4J();
	this.$p7 = 1;
	this.$o7 = false;
	this.$n7 = new $CUC();
	this.$m7 = null;
	this.$l7 = [];
	this.$W6 = [];
	this.$k7 = [];
	this.$m7 = new $C0J();
	this.$m7.$K9 = this;
	if(data == null) {
		throw haxe_Exception.thrown(new $CwJ("data cannot be null."));
	}
	this.$HU = data;
};
$hxClasses["$CxJ"] = $CxJ;
$CxJ.__name__ = "$CxJ";
$CxJ.prototype = {
	$r7: function(to,delta) {
		var from = to.$N8;
		if(from == null) {
			return true;
		}
		var finished = this.$r7(from,delta);
		from.$W8 = from.$X8;
		from.$a8 = from.$b8;
		if(to.$d8 > 0 && to.$d8 >= to.$e8) {
			if(from.$g8 == 0 || to.$e8 == 0) {
				to.$N8 = from.$N8;
				if(from.$N8 != null) {
					from.$N8.$O8 = to;
				}
				to.$f8 = from.$f8;
				var _this = this.$m7;
				_this.$7d.push(2);
				_this.$7d.push(from);
				_this.$K9.$o7 = true;
			}
			return finished;
		}
		from.$Z8 += delta * from.$p7;
		to.$d8 += delta;
		return false;
	}
	,$Wg: function(skeleton) {
		if(skeleton == null) {
			throw haxe_Exception.thrown(new $CwJ("skeleton cannot be null."));
		}
		if(this.$o7) {
			this.$o7 = false;
			var this1 = this.$n7;
			var keys = [];
			var key = this1.keys();
			while(key.hasNext()) keys.push(key.next());
			var _g = 0;
			while(_g < keys.length) this1.remove(keys[_g++]);
			var i = 0;
			var n = this.$k7.length;
			while(i < n) {
				var entry = this.$k7[i];
				if(entry == null) {
					++i;
					continue;
				}
				while(entry.$N8 != null) entry = entry.$N8;
				while(true) {
					if(entry.$O8 == null || entry.$h8 != 3) {
						var to = entry.$O8;
						var timelines = entry.$M8.$d5;
						var timelinesCount = entry.$M8.$d5.length;
						var this1 = entry.$i8;
						var len = this1.length;
						if(len > timelinesCount) {
							this1.splice(timelinesCount,timelinesCount - len);
						} else if(len < timelinesCount) {
							while(len < timelinesCount) {
								this1.push(0);
								++len;
							}
						}
						var timelineMode = this1;
						var this2 = entry.$j8;
						this2.splice(0,this2.length);
						var this3 = entry.$j8;
						var len1 = this3.length;
						if(len1 > timelinesCount) {
							this3.splice(timelinesCount,timelinesCount - len1);
						} else if(len1 < timelinesCount) {
							this3[timelinesCount - 1] = null;
						}
						var timelineHoldMix = this3;
						var propertyIDs = this.$n7;
						if(to != null && to.$Q8) {
							var i1 = 0;
							while(i1 < timelinesCount) {
								var val = timelines[i1].getPropertyId();
								if(!propertyIDs.h.hasOwnProperty(val)) {
									propertyIDs.h[val] = true;
								}
								timelineMode[i1] = 2;
								++i1;
							}
						} else {
							var _gotoLabel_outer;
							while(true) {
								_gotoLabel_outer = 0;
								var i2 = 0;
								while(i2 < timelinesCount) {
									var result = timelines[i2];
									var id = result.getPropertyId();
									var tmp;
									if(propertyIDs.h.hasOwnProperty(id)) {
										tmp = false;
									} else {
										propertyIDs.h[id] = true;
										tmp = true;
									}
									if(!tmp) {
										timelineMode[i2] = 0;
									} else if(to == null || ((result) instanceof $CjJ) || ((result) instanceof $CmJ) || ((result) instanceof $ClJ) || !to.$M8.$h5(id)) {
										timelineMode[i2] = 1;
									} else {
										var next = to.$O8;
										while(next != null) {
											if(next.$M8.$h5(id)) {
												next = next.$O8;
												continue;
											}
											if(next.$e8 > 0) {
												timelineMode[i2] = 3;
												timelineHoldMix[i2] = next;
												next = next.$O8;
												_gotoLabel_outer = 2;
												break;
											}
											break;
										}
										if(_gotoLabel_outer == 2) {
											_gotoLabel_outer = 0;
											++i2;
											continue;
										}
										if(_gotoLabel_outer >= 1) {
											break;
										}
										timelineMode[i2] = 2;
									}
									++i2;
								}
								if(_gotoLabel_outer == 0) {
									break;
								}
							}
						}
					}
					entry = entry.$O8;
					if(!(entry != null)) {
						break;
					}
				}
				++i;
			}
			var this1 = this.$n7;
			var keys = [];
			var key = this1.keys();
			while(key.hasNext()) keys.push(key.next());
			var _g = 0;
			while(_g < keys.length) this1.remove(keys[_g++]);
			var i = this.$k7.length - 1;
			while(i >= 0) {
				var entry = this.$k7[i];
				while(entry != null) {
					var timelines = entry.$M8.$d5;
					var timelinesCount = entry.$M8.$d5.length;
					var timelineMode = entry.$i8;
					var propertyIDs = this.$n7;
					var i1 = 0;
					while(i1 < timelinesCount) {
						if(((timelines[i1]) instanceof $CjJ)) {
							var val = timelines[i1].$H6;
							var tmp;
							if(propertyIDs.h.hasOwnProperty(val)) {
								tmp = false;
							} else {
								propertyIDs.h[val] = true;
								tmp = true;
							}
							if(!tmp) {
								timelineMode[i1] |= 4;
							}
						}
						++i1;
					}
					entry = entry.$N8;
				}
				--i;
			}
		}
		var events = this.$W6;
		var applied = false;
		var i = 0;
		var n = this.$k7.length;
		while(i < n) {
			var current = this.$k7[i];
			if(current == null || current.$Y8 > 0) {
				++i;
				continue;
			}
			applied = true;
			var blend = i == 0 ? 1 : current.$h8;
			var mix = current.$PQ;
			if(current.$N8 != null) {
				mix *= this.$s7(current,skeleton,blend);
			} else if(current.$Z8 >= current.$c8 && current.next == null) {
				mix = 0;
			}
			var animationLast = current.$W8;
			var animationTime;
			if(current.$Zd) {
				var duration = current.$V8 - current.$U8;
				animationTime = duration == 0 ? current.$U8 : current.$Z8 % duration + current.$U8;
			} else {
				animationTime = Math.min(current.$Z8 + current.$U8,current.$V8);
			}
			var timelineCount = current.$M8.$d5.length;
			var timelines = current.$M8.$d5;
			if(i == 0 && mix == 1 || blend == 3) {
				var ii = 0;
				while(ii < timelineCount) {
					timelines[ii].apply(skeleton,animationLast,animationTime,events,mix,blend,0);
					++ii;
				}
			} else {
				var timelineMode = current.$i8;
				var firstFrame = current.$k8.length != timelineCount << 1;
				if(firstFrame) {
					var this1 = current.$k8;
					var size = timelineCount << 1;
					var len = this1.length;
					if(len > size) {
						this1.splice(size,size - len);
					} else if(len < size) {
						while(len < size) {
							this1.push(0);
							++len;
						}
					}
				}
				var timelinesRotation = current.$k8;
				var ii1 = 0;
				while(ii1 < timelineCount) {
					var result = timelines[ii1];
					var timelineBlend = (timelineMode[ii1] & 3) == 0 ? blend : 0;
					if(((result) instanceof $CdJ)) {
						this.$t7(result,skeleton,animationTime,mix,timelineBlend,timelinesRotation,ii1 << 1,firstFrame);
					} else {
						result.apply(skeleton,animationLast,animationTime,events,mix,timelineBlend,0);
					}
					++ii1;
				}
			}
			var animationStart = current.$U8;
			var animationEnd = current.$V8;
			var duration1 = animationEnd - animationStart;
			var trackLastWrapped = current.$a8 % duration1;
			var events1 = this.$W6;
			var i1 = 0;
			var n1 = events1.length;
			while(i1 < n1) {
				var event = events1[i1];
				if(event.$7b < trackLastWrapped) {
					break;
				}
				if(event.$7b > animationEnd) {
					++i1;
					continue;
				}
				var _this = this.$m7;
				_this.$7d.push(5);
				_this.$7d.push(current);
				_this.$7d.push(event);
				++i1;
			}
			var complete = false;
			if(current.$Zd) {
				complete = duration1 == 0 || trackLastWrapped > current.$Z8 % duration1;
			} else {
				complete = animationTime >= animationEnd && current.$W8 < animationEnd;
			}
			if(complete) {
				var _this1 = this.$m7;
				_this1.$7d.push(4);
				_this1.$7d.push(current);
			}
			while(i1 < n1) {
				if(events1[i1].$7b < animationStart) {
					++i1;
					continue;
				}
				var _this2 = this.$m7;
				_this2.$7d.push(5);
				_this2.$7d.push(current);
				_this2.$7d.push(events1[i1]);
				++i1;
			}
			events.splice(0,events.length);
			current.$X8 = animationTime;
			current.$b8 = current.$Z8;
			++i;
		}
		var _this = this.$m7;
		if(!_this.$L9) {
			_this.$L9 = true;
			var objects = _this.$7d;
			var listeners = _this.$K9.$l7;
			var i = 0;
			while(i < objects.length) {
				var type = objects[i];
				var result = objects[i + 1];
				while(true) {
					if(type == 0) {
						if(result.$hm != null) {
							result.$hm.start(result);
						}
						var ii = 0;
						while(ii < listeners.length) {
							listeners[ii].start(result);
							++ii;
						}
						break;
					} else if(type == 1) {
						if(result.$hm != null) {
							result.$hm.interrupt(result);
						}
						var ii1 = 0;
						while(ii1 < listeners.length) {
							listeners[ii1].interrupt(result);
							++ii1;
						}
						break;
					} else if(type == 2) {
						if(result.$hm != null) {
							result.$hm.end(result);
						}
						var ii2 = 0;
						while(ii2 < listeners.length) {
							listeners[ii2].end(result);
							++ii2;
						}
						if(result.$hm != null) {
							result.$hm.dispose(result);
						}
						var ii3 = 0;
						while(ii3 < listeners.length) {
							listeners[ii3].dispose(result);
							++ii3;
						}
						_this.$K9.$q7.$Q9(result);
						break;
					} else if(type == 3) {
						if(result.$hm != null) {
							result.$hm.dispose(result);
						}
						var ii4 = 0;
						while(ii4 < listeners.length) {
							listeners[ii4].dispose(result);
							++ii4;
						}
						_this.$K9.$q7.$Q9(result);
						break;
					} else if(type == 4) {
						if(result.$hm != null) {
							result.$hm.complete(result);
						}
						var ii5 = 0;
						while(ii5 < listeners.length) {
							listeners[ii5].complete(result);
							++ii5;
						}
						break;
					} else if(type == 5) {
						var result1 = objects[i++ + 2];
						if(result.$hm != null) {
							result.$hm.event(result,result1);
						}
						var ii6 = 0;
						while(ii6 < listeners.length) {
							listeners[ii6].event(result,result1);
							++ii6;
						}
						break;
					}
					break;
				}
				i += 2;
			}
			var this1 = _this.$7d;
			this1.splice(0,this1.length);
			_this.$L9 = false;
		}
		return applied;
	}
	,$s7: function(to,skeleton,blend) {
		var from = to.$N8;
		if(from.$N8 != null) {
			this.$s7(from,skeleton,blend);
		}
		var mix = 0;
		if(to.$e8 == 0) {
			mix = 1;
			if(blend == 1) {
				blend = 0;
			}
		} else {
			mix = to.$d8 / to.$e8;
			if(mix > 1) {
				mix = 1;
			}
			if(blend != 1) {
				blend = from.$h8;
			}
		}
		var events = mix < from.$R8 ? this.$W6 : null;
		var attachments = mix < from.$S8;
		var drawOrder = mix < from.$T8;
		var animationLast = from.$W8;
		var animationTime;
		if(from.$Zd) {
			var duration = from.$V8 - from.$U8;
			animationTime = duration == 0 ? from.$U8 : from.$Z8 % duration + from.$U8;
		} else {
			animationTime = Math.min(from.$Z8 + from.$U8,from.$V8);
		}
		var timelineCount = from.$M8.$d5.length;
		var timelines = from.$M8.$d5;
		var alphaHold = from.$PQ * to.$f8;
		var alphaMix = alphaHold * (1 - mix);
		if(blend == 3) {
			var i = 0;
			while(i < timelineCount) {
				timelines[i].apply(skeleton,animationLast,animationTime,events,alphaMix,blend,1);
				++i;
			}
		} else {
			var timelineMode = from.$i8;
			var timelineHoldMix = from.$j8;
			var firstFrame = from.$k8.length != timelineCount << 1;
			if(firstFrame) {
				var this1 = from.$k8;
				var size = timelineCount << 1;
				var len = this1.length;
				if(len > size) {
					this1.splice(size,size - len);
				} else if(len < size) {
					while(len < size) {
						this1.push(0);
						++len;
					}
				}
			}
			var timelinesRotation = from.$k8;
			from.$g8 = 0;
			var i = 0;
			while(i < timelineCount) {
				var result = timelines[i];
				var direction = 1;
				var timelineBlend = 0;
				var alpha = 0;
				var _continueAfterSwitch0 = false;
				while(true) {
					var _switchCond0 = timelineMode[i] & 3;
					if(_switchCond0 == 0) {
						timelineBlend = blend;
						if(!attachments && ((result) instanceof $CjJ)) {
							if((timelineMode[i] & 4) == 4) {
								_continueAfterSwitch0 = true;
								break;
							}
							timelineBlend = 0;
						}
						if(!drawOrder && ((result) instanceof $CmJ)) {
							_continueAfterSwitch0 = true;
							break;
						}
						alpha = alphaMix;
						break;
					} else if(_switchCond0 == 1) {
						timelineBlend = 0;
						alpha = alphaMix;
						break;
					} else if(_switchCond0 == 2) {
						timelineBlend = 0;
						alpha = alphaHold;
						break;
					} else {
						timelineBlend = 0;
						var result1 = timelineHoldMix[i];
						alpha = alphaHold * Math.max(0,1 - result1.$d8 / result1.$e8 | 0);
						break;
					}
				}
				if(_continueAfterSwitch0) {
					++i;
					continue;
				}
				from.$g8 += alpha;
				if(((result) instanceof $CdJ)) {
					this.$t7(result,skeleton,animationTime,alpha,timelineBlend,timelinesRotation,i << 1,firstFrame);
				} else {
					if(timelineBlend == 0) {
						if(((result) instanceof $CjJ)) {
							if(attachments || (timelineMode[i] & 4) == 4) {
								direction = 0;
							}
						} else if(((result) instanceof $CmJ)) {
							if(drawOrder) {
								direction = 0;
							}
						}
					}
					result.apply(skeleton,animationLast,animationTime,events,alpha,timelineBlend,direction);
				}
				++i;
			}
		}
		if(to.$e8 > 0) {
			var animationStart = from.$U8;
			var animationEnd = from.$V8;
			var duration = animationEnd - animationStart;
			var trackLastWrapped = from.$a8 % duration;
			var events = this.$W6;
			var i = 0;
			var n = events.length;
			while(i < n) {
				var event = events[i];
				if(event.$7b < trackLastWrapped) {
					break;
				}
				if(event.$7b > animationEnd) {
					++i;
					continue;
				}
				var _this = this.$m7;
				_this.$7d.push(5);
				_this.$7d.push(from);
				_this.$7d.push(event);
				++i;
			}
			var complete = false;
			if(from.$Zd) {
				complete = duration == 0 || trackLastWrapped > from.$Z8 % duration;
			} else {
				complete = animationTime >= animationEnd && from.$W8 < animationEnd;
			}
			if(complete) {
				var _this = this.$m7;
				_this.$7d.push(4);
				_this.$7d.push(from);
			}
			while(i < n) {
				if(events[i].$7b < animationStart) {
					++i;
					continue;
				}
				var _this = this.$m7;
				_this.$7d.push(5);
				_this.$7d.push(from);
				_this.$7d.push(events[i]);
				++i;
			}
		}
		var this1 = this.$W6;
		this1.splice(0,this1.length);
		from.$X8 = animationTime;
		from.$b8 = from.$Z8;
		return mix;
	}
	,$t7: function(timeline,skeleton,time,alpha,blend,timelinesRotation,i,firstFrame) {
		if(firstFrame) {
			timelinesRotation[i] = 0;
		}
		if(alpha == 1) {
			timeline.apply(skeleton,0,time,null,1,blend,0);
			return;
		}
		var bone = skeleton.$g_[timeline.$$5];
		if(!bone.$rI) {
			return;
		}
		var frames = timeline.$Si;
		var r1 = 0;
		var r2 = 0;
		if(time < frames[0]) {
			while(true) {
				if(blend == 0) {
					bone.$FP = bone.$HU.$FP;
					return;
				} else if(blend == 1) {
					r1 = bone.$FP;
					r2 = bone.$HU.$FP;
				} else {
					return;
				}
				break;
			}
		} else {
			r1 = blend == 0 ? bone.$HU.$FP : bone.$FP;
			if(time >= frames[frames.length - 2]) {
				r2 = bone.$HU.$FP + frames[frames.length + (-1)];
			} else {
				var frame = $CVJ.$j5(frames,time,2);
				var prevRotation = frames[frame + (-1)];
				var frameTime = frames[frame];
				var percent = timeline.$55((frame >> 1) - 1,1 - (time - frameTime) / (frames[frame + (-2)] - frameTime));
				r2 = frames[frame + 1] - prevRotation;
				r2 -= (16384 - (16384.499999999996 - r2 / 360 | 0)) * 360;
				r2 = prevRotation + r2 * percent + bone.$HU.$FP;
				r2 -= (16384 - (16384.499999999996 - r2 / 360 | 0)) * 360;
			}
		}
		var total = 0;
		var diff = r2 - r1;
		diff -= (16384 - (16384.499999999996 - diff / 360 | 0)) * 360;
		if(diff == 0) {
			total = timelinesRotation[i];
		} else {
			var lastTotal = 0;
			var lastDiff = 0;
			if(firstFrame) {
				lastTotal = 0;
				lastDiff = diff;
			} else {
				lastTotal = timelinesRotation[i];
				lastDiff = timelinesRotation[i + 1];
			}
			var current = diff > 0;
			var dir = lastTotal >= 0;
			if((lastDiff > 0 ? 1 : lastDiff < 0 ? -1 : 0) != (diff > 0 ? 1 : diff < 0 ? -1 : 0) && Math.abs(lastDiff) <= 90) {
				if(Math.abs(lastTotal) > 180) {
					lastTotal += 360 * (lastTotal > 0 ? 1 : lastTotal < 0 ? -1 : 0);
				}
				dir = current;
			}
			total = diff + lastTotal - lastTotal % 360;
			if(dir != current) {
				total += 360 * (lastTotal > 0 ? 1 : lastTotal < 0 ? -1 : 0);
			}
			timelinesRotation[i] = total;
		}
		timelinesRotation[i + 1] = diff;
		r1 += total * alpha;
		bone.$FP = r1 - (16384 - (16384.499999999996 - r1 / 360 | 0)) * 360;
	}
	,__class__: $CxJ
};
var $CyJ = function() { };
$hxClasses["$CyJ"] = $CyJ;
$CyJ.__name__ = "$CyJ";
$CyJ.__isInterface__ = true;
$CyJ.prototype = {
	__class__: $CyJ
};
var $CzJ = function() {
	this.$k8 = [];
	this.$j8 = [];
	this.$i8 = [];
	this.$h8 = 2;
	this.$g8 = 0;
	this.$f8 = 0;
	this.$e8 = 0;
	this.$d8 = 0;
	this.$PQ = 0;
	this.$p7 = 0;
	this.$c8 = 0;
	this.$b8 = 0;
	this.$a8 = 0;
	this.$Z8 = 0;
	this.$Y8 = 0;
	this.$X8 = 0;
	this.$W8 = 0;
	this.$V8 = 0;
	this.$U8 = 0;
	this.$T8 = 0;
	this.$S8 = 0;
	this.$R8 = 0;
	this.$Q8 = false;
	this.$Zd = false;
	this.$O8 = null;
	this.$N8 = null;
};
$hxClasses["$CzJ"] = $CzJ;
$CzJ.__name__ = "$CzJ";
$CzJ.__interfaces__ = [$CyJ];
$CzJ.prototype = {
	reset: function() {
		this.next = null;
		this.$N8 = null;
		this.$O8 = null;
		this.$M8 = null;
		this.$hm = null;
		var this1 = this.$i8;
		this1.splice(0,this1.length);
		var this1 = this.$j8;
		this1.splice(0,this1.length);
		var this1 = this.$k8;
		this1.splice(0,this1.length);
	}
	,__class__: $CzJ
};
var $C0J = function() {
	this.$L9 = false;
	this.$7d = [];
};
$hxClasses["$C0J"] = $C0J;
$C0J.__name__ = "$C0J";
$C0J.prototype = {
	__class__: $C0J
};
var $C3J = function(initialCapacity,max) {
	if(max == null) {
		max = 999999999;
	}
	if(initialCapacity == null) {
		initialCapacity = 64;
	}
	this.$O9 = 0;
	this.$P = 0;
	this.$P9 = [];
	this.$P = max;
};
$hxClasses["$C3J"] = $C3J;
$C3J.__name__ = "$C3J";
$C3J.prototype = {
	$Q9: function(object) {
		if(object == null) {
			throw haxe_Exception.thrown(new $CwJ("object cannot be null."));
		}
		if(this.$P9.length < this.$P) {
			this.$P9.push(object);
			this.$O9 = Math.max(this.$O9,this.$P9.length);
		}
		this.$IE(object);
	}
	,$IE: function(object) {
		if(js_Boot.__implements(object,$CyJ)) {
			(js_Boot.__cast(object , $CyJ)).reset();
		}
	}
	,__class__: $C3J
};
var $C4J = function(initialCapacity,max) {
	$C3J.call(this,initialCapacity,max);
};
$hxClasses["$C4J"] = $C4J;
$C4J.__name__ = "$C4J";
$C4J.__super__ = $C3J;
$C4J.prototype = $extend($C3J.prototype,{
	__class__: $C4J
});
var $C6J = function(skeletonData) {
	if(skeletonData == null) {
		throw haxe_Exception.thrown(new $CwJ("skeletonData cannot be null."));
	}
	this.$f9 = skeletonData;
};
$hxClasses["$C6J"] = $C6J;
$C6J.__name__ = "$C6J";
$C6J.prototype = {
	__class__: $C6J
};
var $C$J = function() { };
$hxClasses["$C$J"] = $C$J;
$C$J.__name__ = "$C$J";
$C$J.__isInterface__ = true;
$C$J.prototype = {
	__class__: $C$J
};
var $C_$J = function(data,skeleton,parent) {
	this.$rI = false;
	this.$D$ = false;
	this.$C$ = 0;
	this.$B$ = 0;
	this.$_G = 0;
	this.$A$ = 0;
	this.$6 = 0;
	this.$TD = 0;
	this.$_9 = false;
	this.$$9 = 0;
	this.$99 = 0;
	this.$89 = 0;
	this.$79 = 0;
	this.$69 = 0;
	this.$59 = 0;
	this.$49 = 0;
	this.$39 = 0;
	this.$29 = 0;
	this.$OQ = 0;
	this.$NQ = 0;
	this.$FP = 0;
	this.$RC = 0;
	this.$QC = 0;
	this.$hB = [];
	if(data == null) {
		throw haxe_Exception.thrown(new $CwJ("data cannot be null."));
	}
	if(skeleton == null) {
		throw haxe_Exception.thrown(new $CwJ("skeleton cannot be null."));
	}
	this.$HU = data;
	this.$j2 = skeleton;
	this.$gB = parent;
	var data = this.$HU;
	this.$QC = data.$QC;
	this.$RC = data.$RC;
	this.$FP = data.$FP;
	this.$NQ = data.$NQ;
	this.$OQ = data.$OQ;
	this.$29 = data.$29;
	this.$39 = data.$39;
};
$hxClasses["$C_J"] = $C_$J;
$C_$J.__name__ = "$C_J";
$C_$J.__interfaces__ = [$C$J];
$C_$J.prototype = {
	update: function() {
		this.$F$(this.$QC,this.$RC,this.$FP,this.$NQ,this.$OQ,this.$29,this.$39);
	}
	,$F$: function(x,y,rotation,scaleX,scaleY,shearX,shearY) {
		this.$49 = x;
		this.$59 = y;
		this.$69 = rotation;
		this.$79 = scaleX;
		this.$89 = scaleY;
		this.$99 = shearX;
		this.$$9 = shearY;
		this.$_9 = true;
		var parent = this.$gB;
		if(parent == null) {
			var skeleton = this.$j2;
			var rotationY = rotation + 90 + shearY;
			var sx = skeleton.$NQ;
			var sy = skeleton.$OQ;
			this.$TD = Math.cos((rotation + shearX) * $CNL.$WFB) * scaleX * sx;
			this.$6 = Math.cos(rotationY * $CNL.$WFB) * scaleY * sx;
			this.$_G = Math.sin((rotation + shearX) * $CNL.$WFB) * scaleX * sy;
			this.$B$ = Math.sin(rotationY * $CNL.$WFB) * scaleY * sy;
			this.$A$ = x * sx + skeleton.$QC;
			this.$C$ = y * sy + skeleton.$RC;
			return;
		}
		var pa = parent.$TD;
		var pb = parent.$6;
		var pc = parent.$_G;
		var pd = parent.$B$;
		this.$A$ = pa * x + pb * y + parent.$A$;
		this.$C$ = pc * x + pd * y + parent.$C$;
		while(true) {
			var _switchCond0 = this.$HU.$9$;
			if(_switchCond0 == 0) {
				var rotationY = rotation + 90 + shearY;
				var la = Math.cos((rotation + shearX) * $CNL.$WFB) * scaleX;
				var lb = Math.cos(rotationY * $CNL.$WFB) * scaleY;
				var lc = Math.sin((rotation + shearX) * $CNL.$WFB) * scaleX;
				var ld = Math.sin(rotationY * $CNL.$WFB) * scaleY;
				this.$TD = pa * la + pb * lc;
				this.$6 = pa * lb + pb * ld;
				this.$_G = pc * la + pd * lc;
				this.$B$ = pc * lb + pd * ld;
				return;
			} else if(_switchCond0 == 1) {
				var rotationY1 = rotation + 90 + shearY;
				this.$TD = Math.cos((rotation + shearX) * $CNL.$WFB) * scaleX;
				this.$6 = Math.cos(rotationY1 * $CNL.$WFB) * scaleY;
				this.$_G = Math.sin((rotation + shearX) * $CNL.$WFB) * scaleX;
				this.$B$ = Math.sin(rotationY1 * $CNL.$WFB) * scaleY;
				break;
			} else if(_switchCond0 == 2) {
				var s = pa * pa + pc * pc;
				var prx = 0;
				if(s > 0.0001) {
					s = Math.abs(pa * pd - pb * pc) / s;
					pb = pc * s;
					pd = pa * s;
					prx = Math.atan2(pc,pa) * $CNL.$XFB;
				} else {
					pa = 0;
					pc = 0;
					prx = 90 - Math.atan2(pd,pb) * $CNL.$XFB;
				}
				var rx = rotation + shearX - prx;
				var ry = rotation + shearY - prx + 90;
				var la1 = Math.cos(rx * $CNL.$WFB) * scaleX;
				var lb1 = Math.cos(ry * $CNL.$WFB) * scaleY;
				var lc1 = Math.sin(rx * $CNL.$WFB) * scaleX;
				var ld1 = Math.sin(ry * $CNL.$WFB) * scaleY;
				this.$TD = pa * la1 - pb * lc1;
				this.$6 = pa * lb1 - pb * ld1;
				this.$_G = pc * la1 + pd * lc1;
				this.$B$ = pc * lb1 + pd * ld1;
				break;
			} else if(_switchCond0 == 3) {
				var cos = Math.cos(rotation * $CNL.$WFB);
				var sin = Math.sin(rotation * $CNL.$WFB);
				var za = (pa * cos + pb * sin) / this.$j2.$NQ;
				var zc = (pc * cos + pd * sin) / this.$j2.$OQ;
				var s1 = Math.sqrt(za * za + zc * zc);
				if(s1 > 0.00001) {
					s1 = 1 / s1;
				}
				za *= s1;
				zc *= s1;
				s1 = Math.sqrt(za * za + zc * zc);
				if(this.$HU.$9$ == 3 && pa * pd - pb * pc < 0 != (this.$j2.$NQ < 0 != this.$j2.$OQ < 0)) {
					s1 = -s1;
				}
				var r = 1.57079635 + Math.atan2(zc,za);
				var zb = Math.cos(r) * s1;
				var zd = Math.sin(r) * s1;
				var la2 = Math.cos(shearX * $CNL.$WFB) * scaleX;
				var lb2 = Math.cos((90 + shearY) * $CNL.$WFB) * scaleY;
				var lc2 = Math.sin(shearX * $CNL.$WFB) * scaleX;
				var ld2 = Math.sin((90 + shearY) * $CNL.$WFB) * scaleY;
				this.$TD = za * la2 + zb * lc2;
				this.$6 = za * lb2 + zb * ld2;
				this.$_G = zc * la2 + zd * lc2;
				this.$B$ = zc * lb2 + zd * ld2;
				break;
			} else if(_switchCond0 == 4) {
				var cos1 = Math.cos(rotation * $CNL.$WFB);
				var sin1 = Math.sin(rotation * $CNL.$WFB);
				var za1 = (pa * cos1 + pb * sin1) / this.$j2.$NQ;
				var zc1 = (pc * cos1 + pd * sin1) / this.$j2.$OQ;
				var s2 = Math.sqrt(za1 * za1 + zc1 * zc1);
				if(s2 > 0.00001) {
					s2 = 1 / s2;
				}
				za1 *= s2;
				zc1 *= s2;
				s2 = Math.sqrt(za1 * za1 + zc1 * zc1);
				if(this.$HU.$9$ == 3 && pa * pd - pb * pc < 0 != (this.$j2.$NQ < 0 != this.$j2.$OQ < 0)) {
					s2 = -s2;
				}
				var r1 = 1.57079635 + Math.atan2(zc1,za1);
				var zb1 = Math.cos(r1) * s2;
				var zd1 = Math.sin(r1) * s2;
				var la3 = Math.cos(shearX * $CNL.$WFB) * scaleX;
				var lb3 = Math.cos((90 + shearY) * $CNL.$WFB) * scaleY;
				var lc3 = Math.sin(shearX * $CNL.$WFB) * scaleX;
				var ld3 = Math.sin((90 + shearY) * $CNL.$WFB) * scaleY;
				this.$TD = za1 * la3 + zb1 * lc3;
				this.$6 = za1 * lb3 + zb1 * ld3;
				this.$_G = zc1 * la3 + zd1 * lc3;
				this.$B$ = zc1 * lb3 + zd1 * ld3;
				break;
			}
			break;
		}
		this.$TD *= this.$j2.$NQ;
		this.$6 *= this.$j2.$NQ;
		this.$_G *= this.$j2.$OQ;
		this.$B$ *= this.$j2.$OQ;
	}
	,__class__: $C_$J
};
var $CAK = function(index,name,parent) {
	this.$$$ = false;
	this.$9$ = 0;
	this.$39 = 0;
	this.$29 = 0;
	this.$OQ = 1;
	this.$NQ = 1;
	this.$FP = 0;
	this.$RC = 0;
	this.$QC = 0;
	this.$7 = 0;
	this.$eU = 0;
	if(index < 0) {
		throw haxe_Exception.thrown(new $CwJ("index must be >= 0."));
	}
	if(name == null) {
		throw haxe_Exception.thrown(new $CwJ("name cannot be null."));
	}
	this.$eU = index;
	this.$CP = name;
	this.$gB = parent;
};
$hxClasses["$CAK"] = $CAK;
$CAK.__name__ = "$CAK";
$CAK.prototype = {
	__class__: $CAK
};
var $CDK = function(name) {
	this.$$$ = false;
	this.$R_ = 0;
	if(name == null) {
		throw haxe_Exception.thrown(new $CwJ("name cannot be null."));
	}
	this.$CP = name;
};
$hxClasses["$CDK"] = $CDK;
$CDK.__name__ = "$CDK";
$CDK.prototype = {
	__class__: $CDK
};
var $CEK = function(time,data) {
	this.$7b = 0;
	if(data == null) {
		throw haxe_Exception.thrown(new $CwJ("data cannot be null."));
	}
	this.$7b = time;
	this.$HU = data;
};
$hxClasses["$CEK"] = $CEK;
$CEK.__name__ = "$CEK";
$CEK.prototype = {
	__class__: $CEK
};
var $CFK = function() { };
$hxClasses["$CFK"] = $CFK;
$CFK.__name__ = "$CFK";
var $CGK = function(data,skeleton) {
	this.$rI = false;
	this.$l_ = 0;
	this.$k_ = 1;
	this.$j_ = false;
	this.$i_ = false;
	this.$h_ = 0;
	if(data == null) {
		throw haxe_Exception.thrown(new $CwJ("data cannot be null."));
	}
	if(skeleton == null) {
		throw haxe_Exception.thrown(new $CwJ("skeleton cannot be null."));
	}
	this.$HU = data;
	this.$k_ = data.$k_;
	this.$l_ = data.$l_;
	this.$h_ = data.$h_;
	this.$i_ = data.$i_;
	this.$j_ = data.$j_;
	this.$g_ = [];
	var _g = 0;
	var _g1 = data.$g_;
	while(_g < _g1.length) this.$g_.push(skeleton.$2AB(_g1[_g++].$CP));
	this.$_N = skeleton.$2AB(data.$_N.$CP);
};
$hxClasses["$CGK"] = $CGK;
$CGK.__name__ = "$CGK";
$CGK.__interfaces__ = [$C$J];
$CGK.$w_ = function(bone,targetX,targetY,compress,stretch,uniform,alpha) {
	if(bone == null) {
		throw haxe_Exception.thrown(new $CwJ("bone cannot be null."));
	}
	if(!bone.$_9) {
		bone.$_9 = true;
		var parent = bone.$gB;
		if(parent == null) {
			bone.$49 = bone.$A$;
			bone.$59 = bone.$C$;
			bone.$69 = Math.atan2(bone.$_G,bone.$TD) * $CNL.$XFB;
			bone.$79 = Math.sqrt(bone.$TD * bone.$TD + bone.$_G * bone.$_G);
			bone.$89 = Math.sqrt(bone.$6 * bone.$6 + bone.$B$ * bone.$B$);
			bone.$99 = 0;
			bone.$$9 = Math.atan2(bone.$TD * bone.$6 + bone.$_G * bone.$B$,bone.$TD * bone.$B$ - bone.$6 * bone.$_G) * $CNL.$XFB;
		} else {
			var pa = parent.$TD;
			var pb = parent.$6;
			var pc = parent.$_G;
			var pd = parent.$B$;
			var pid = 1 / (pa * pd - pb * pc);
			var dx = bone.$A$ - parent.$A$;
			var dy = bone.$C$ - parent.$C$;
			bone.$49 = dx * pd * pid - dy * pb * pid;
			bone.$59 = dy * pa * pid - dx * pc * pid;
			var ia = pid * pd;
			var id = pid * pa;
			var ib = pid * pb;
			var ic = pid * pc;
			var ra = ia * bone.$TD - ib * bone.$_G;
			var rb = ia * bone.$6 - ib * bone.$B$;
			var rc = id * bone.$_G - ic * bone.$TD;
			var rd = id * bone.$B$ - ic * bone.$6;
			bone.$99 = 0;
			bone.$79 = Math.sqrt(ra * ra + rc * rc);
			if(bone.$79 > 0.0001) {
				var det = ra * rd - rb * rc;
				bone.$89 = det / bone.$79;
				bone.$$9 = Math.atan2(ra * rb + rc * rd,det) * $CNL.$XFB;
				bone.$69 = Math.atan2(rc,ra) * $CNL.$XFB;
			} else {
				bone.$79 = 0;
				bone.$89 = Math.sqrt(rb * rb + rd * rd);
				bone.$$9 = 0;
				bone.$69 = 90 - Math.atan2(rd,rb) * $CNL.$XFB;
			}
		}
	}
	var p = bone.$gB;
	var id = 1 / (p.$TD * p.$B$ - p.$6 * p.$_G);
	var x = targetX - p.$A$;
	var y = targetY - p.$C$;
	var tx = (x * p.$B$ - y * p.$6) * id - bone.$49;
	var ty = (y * p.$TD - x * p.$_G) * id - bone.$59;
	var rotationIK = Math.atan2(ty,tx) * $CNL.$XFB - bone.$99 - bone.$69;
	if(bone.$79 < 0) {
		rotationIK += 180;
	}
	if(rotationIK > 180) {
		rotationIK -= 360;
	} else if(rotationIK < -180) {
		rotationIK += 360;
	}
	var sx = bone.$79;
	var sy = bone.$89;
	if(compress || stretch) {
		var b = bone.$HU.$7 * sx;
		var dd = Math.sqrt(tx * tx + ty * ty);
		if(compress && dd < b || stretch && dd > b && b > 0.0001) {
			var s = (dd / b - 1) * alpha + 1;
			sx *= s;
			if(uniform) {
				sy *= s;
			}
		}
	}
	bone.$F$(bone.$49,bone.$59,bone.$69 + rotationIK * alpha,sx,sy,bone.$99,bone.$$9);
};
$CGK.$Wg = function(parent,child,targetX,targetY,bendDir,stretch,softness,alpha) {
	if(parent == null) {
		throw haxe_Exception.thrown(new $CwJ("parent cannot be null."));
	}
	if(child == null) {
		throw haxe_Exception.thrown(new $CwJ("child cannot be null."));
	}
	if(alpha == 0) {
		child.$F$(child.$QC,child.$RC,child.$FP,child.$NQ,child.$OQ,child.$29,child.$39);
		return;
	}
	if(!parent.$_9) {
		parent.$_9 = true;
		var parent1 = parent.$gB;
		if(parent1 == null) {
			parent.$49 = parent.$A$;
			parent.$59 = parent.$C$;
			parent.$69 = Math.atan2(parent.$_G,parent.$TD) * $CNL.$XFB;
			parent.$79 = Math.sqrt(parent.$TD * parent.$TD + parent.$_G * parent.$_G);
			parent.$89 = Math.sqrt(parent.$6 * parent.$6 + parent.$B$ * parent.$B$);
			parent.$99 = 0;
			parent.$$9 = Math.atan2(parent.$TD * parent.$6 + parent.$_G * parent.$B$,parent.$TD * parent.$B$ - parent.$6 * parent.$_G) * $CNL.$XFB;
		} else {
			var pa = parent1.$TD;
			var pb = parent1.$6;
			var pc = parent1.$_G;
			var pd = parent1.$B$;
			var pid = 1 / (pa * pd - pb * pc);
			var dx = parent.$A$ - parent1.$A$;
			var dy = parent.$C$ - parent1.$C$;
			parent.$49 = dx * pd * pid - dy * pb * pid;
			parent.$59 = dy * pa * pid - dx * pc * pid;
			var ia = pid * pd;
			var id = pid * pa;
			var ib = pid * pb;
			var ic = pid * pc;
			var ra = ia * parent.$TD - ib * parent.$_G;
			var rb = ia * parent.$6 - ib * parent.$B$;
			var rc = id * parent.$_G - ic * parent.$TD;
			var rd = id * parent.$B$ - ic * parent.$6;
			parent.$99 = 0;
			parent.$79 = Math.sqrt(ra * ra + rc * rc);
			if(parent.$79 > 0.0001) {
				var det = ra * rd - rb * rc;
				parent.$89 = det / parent.$79;
				parent.$$9 = Math.atan2(ra * rb + rc * rd,det) * $CNL.$XFB;
				parent.$69 = Math.atan2(rc,ra) * $CNL.$XFB;
			} else {
				parent.$79 = 0;
				parent.$89 = Math.sqrt(rb * rb + rd * rd);
				parent.$$9 = 0;
				parent.$69 = 90 - Math.atan2(rd,rb) * $CNL.$XFB;
			}
		}
	}
	if(!child.$_9) {
		child.$_9 = true;
		var parent1 = child.$gB;
		if(parent1 == null) {
			child.$49 = child.$A$;
			child.$59 = child.$C$;
			child.$69 = Math.atan2(child.$_G,child.$TD) * $CNL.$XFB;
			child.$79 = Math.sqrt(child.$TD * child.$TD + child.$_G * child.$_G);
			child.$89 = Math.sqrt(child.$6 * child.$6 + child.$B$ * child.$B$);
			child.$99 = 0;
			child.$$9 = Math.atan2(child.$TD * child.$6 + child.$_G * child.$B$,child.$TD * child.$B$ - child.$6 * child.$_G) * $CNL.$XFB;
		} else {
			var pa = parent1.$TD;
			var pb = parent1.$6;
			var pc = parent1.$_G;
			var pd = parent1.$B$;
			var pid = 1 / (pa * pd - pb * pc);
			var dx = child.$A$ - parent1.$A$;
			var dy = child.$C$ - parent1.$C$;
			child.$49 = dx * pd * pid - dy * pb * pid;
			child.$59 = dy * pa * pid - dx * pc * pid;
			var ia = pid * pd;
			var id = pid * pa;
			var ib = pid * pb;
			var ic = pid * pc;
			var ra = ia * child.$TD - ib * child.$_G;
			var rb = ia * child.$6 - ib * child.$B$;
			var rc = id * child.$_G - ic * child.$TD;
			var rd = id * child.$B$ - ic * child.$6;
			child.$99 = 0;
			child.$79 = Math.sqrt(ra * ra + rc * rc);
			if(child.$79 > 0.0001) {
				var det = ra * rd - rb * rc;
				child.$89 = det / child.$79;
				child.$$9 = Math.atan2(ra * rb + rc * rd,det) * $CNL.$XFB;
				child.$69 = Math.atan2(rc,ra) * $CNL.$XFB;
			} else {
				child.$79 = 0;
				child.$89 = Math.sqrt(rb * rb + rd * rd);
				child.$$9 = 0;
				child.$69 = 90 - Math.atan2(rd,rb) * $CNL.$XFB;
			}
		}
	}
	var px = parent.$49;
	var py = parent.$59;
	var psx = parent.$79;
	var sx = psx;
	var psy = parent.$89;
	var csx = child.$79;
	var os1 = 0;
	var os2 = 0;
	var s2 = 0;
	if(psx < 0) {
		psx = -psx;
		os1 = 180;
		s2 = -1;
	} else {
		os1 = 0;
		s2 = 1;
	}
	if(psy < 0) {
		psy = -psy;
		s2 = -s2;
	}
	if(csx < 0) {
		csx = -csx;
		os2 = 180;
	} else {
		os2 = 0;
	}
	var cx = child.$49;
	var cy = 0;
	var cwx = 0;
	var cwy = 0;
	var a = parent.$TD;
	var b = parent.$6;
	var c = parent.$_G;
	var d = parent.$B$;
	var u = Math.abs(psx - psy) <= 0.0001;
	if(!u) {
		cy = 0;
		cwx = a * cx + parent.$A$;
		cwy = c * cx + parent.$C$;
	} else {
		cy = child.$59;
		cwx = a * cx + b * cy + parent.$A$;
		cwy = c * cx + d * cy + parent.$C$;
	}
	var pp = parent.$gB;
	a = pp.$TD;
	b = pp.$6;
	c = pp.$_G;
	d = pp.$B$;
	var id = 1 / (a * d - b * c);
	var x = cwx - pp.$A$;
	var y = cwy - pp.$C$;
	var dx = (x * d - y * b) * id - px;
	var dy = (y * a - x * c) * id - py;
	var l1 = Math.sqrt(dx * dx + dy * dy);
	var l2 = child.$HU.$7 * csx;
	var a1 = 0;
	var a2 = 0;
	if(l1 < 0.0001) {
		$CGK.$w_(parent,targetX,targetY,false,stretch,false,alpha);
		child.$F$(cx,cy,0,child.$79,child.$89,child.$99,child.$$9);
		return;
	}
	x = targetX - pp.$A$;
	y = targetY - pp.$C$;
	var tx = (x * d - y * b) * id - px;
	var ty = (y * a - x * c) * id - py;
	var dd = tx * tx + ty * ty;
	if(softness != 0) {
		softness *= psx * (csx + 1) / 2;
		var td = Math.sqrt(dd);
		var sd = td - l1 - l2 * psx + softness;
		if(sd > 0) {
			var p = Math.min(1,sd / (softness * 2) | 0) - 1;
			p = (sd - softness * (1 - p * p)) / td;
			tx -= p * tx;
			ty -= p * ty;
			dd = tx * tx + ty * ty;
		}
	}
	while(true) {
		if(u) {
			l2 *= psx;
			var cos = (dd - l1 * l1 - l2 * l2) / (2 * l1 * l2);
			if(cos < -1) {
				cos = -1;
			} else if(cos > 1) {
				cos = 1;
				if(stretch) {
					sx *= (Math.sqrt(dd) / (l1 + l2) - 1) * alpha + 1;
				}
			}
			a2 = Math.acos(cos) * bendDir;
			a = l1 + l2 * cos;
			b = l2 * Math.sin(a2);
			a1 = Math.atan2(ty * a - tx * b,tx * a + ty * b);
		} else {
			a = psx * l2;
			b = psy * l2;
			var aa = a * a;
			var bb = b * b;
			var ta = Math.atan2(ty,tx);
			c = bb * l1 * l1 + aa * dd - aa * bb;
			var c1 = -2 * bb * l1;
			var c2 = bb - aa;
			d = c1 * c1 - 4 * c2 * c;
			if(d >= 0) {
				var q = Math.sqrt(d);
				if(c1 < 0) {
					q = -q;
				}
				q = -(c1 + q) / 2;
				var r0 = q / c2;
				var r1 = c / q;
				var r = Math.abs(r0) < Math.abs(r1) ? r0 : r1;
				if(r * r <= dd) {
					y = Math.sqrt(dd - r * r) * bendDir;
					a1 = ta - Math.atan2(y,r);
					a2 = Math.atan2(y / psy,(r - l1) / psx);
					break;
				}
			}
			var minAngle = 3.1415927;
			var minX = l1 - a;
			var minDist = minX * minX;
			var minY = 0;
			var maxAngle = 0;
			var maxX = l1 + a;
			var maxDist = maxX * maxX;
			var maxY = 0;
			c = -a * l1 / (aa - bb);
			if(c >= -1 && c <= 1) {
				c = Math.acos(c);
				x = a * Math.cos(c) + l1;
				y = b * Math.sin(c);
				d = x * x + y * y;
				if(d < minDist) {
					minAngle = c;
					minDist = d;
					minX = x;
					minY = y;
				}
				if(d > maxDist) {
					maxAngle = c;
					maxDist = d;
					maxX = x;
					maxY = y;
				}
			}
			if(dd <= (minDist + maxDist) / 2) {
				a1 = ta - Math.atan2(minY * bendDir,minX);
				a2 = minAngle * bendDir;
			} else {
				a1 = ta - Math.atan2(maxY * bendDir,maxX);
				a2 = maxAngle * bendDir;
			}
		}
		break;
	}
	var os = Math.atan2(cy,cx) * s2;
	var rotation = parent.$69;
	a1 = (a1 - os) * $CNL.$XFB + os1 - rotation;
	if(a1 > 180) {
		a1 -= 360;
	} else if(a1 < -180) {
		a1 += 360;
	}
	parent.$F$(px,py,rotation + a1 * alpha,sx,parent.$89,0,0);
	rotation = child.$69;
	a2 = ((a2 + os) * $CNL.$XFB - child.$99) * s2 + os2 - rotation;
	if(a2 > 180) {
		a2 -= 360;
	} else if(a2 < -180) {
		a2 += 360;
	}
	child.$F$(cx,cy,rotation + a2 * alpha,child.$79,child.$89,child.$99,child.$$9);
};
$CGK.prototype = {
	update: function() {
		var target = this.$_N;
		var bones = this.$g_;
		while(true) {
			var _switchCond0 = bones.length;
			if(_switchCond0 == 1) {
				$CGK.$w_(bones.length > 0 ? bones[0] : null,target.$A$,target.$C$,this.$i_,this.$j_,this.$HU.$x_,this.$k_);
				break;
			} else if(_switchCond0 == 2) {
				$CGK.$Wg(bones.length > 0 ? bones[0] : null,bones[1],target.$A$,target.$C$,this.$h_,this.$j_,this.$l_,this.$k_);
				break;
			}
			break;
		}
	}
	,__class__: $CGK
};
var $CHK = function(name) {
	this.$l_ = 0;
	this.$k_ = 1;
	this.$x_ = false;
	this.$j_ = false;
	this.$i_ = false;
	this.$h_ = 1;
	this.$g_ = [];
	$CDK.call(this,name);
};
$hxClasses["$CHK"] = $CHK;
$CHK.__name__ = "$CHK";
$CHK.__super__ = $CDK;
$CHK.prototype = $extend($CDK.prototype,{
	__class__: $CHK
});
var $CIK = function(data,skeleton) {
	var array = [];
	var len = array.length;
	if(len > 10) {
		array.splice(10,10 - len);
	} else if(len < 10) {
		while(len < 10) {
			array.push(0);
			++len;
		}
	}
	this.$4_ = array;
	this.$3_ = [];
	this.$z5 = [];
	this.$vk = [];
	this.$2_ = [];
	this.$1_ = [];
	this.$rI = false;
	this.$0_ = 0;
	this.$z_ = 0;
	this.$Ce = 0;
	this.$4C = 0;
	if(data == null) {
		throw haxe_Exception.thrown(new $CwJ("data cannot be null."));
	}
	if(skeleton == null) {
		throw haxe_Exception.thrown(new $CwJ("skeleton cannot be null."));
	}
	this.$HU = data;
	this.$g_ = [];
	var _g = 0;
	var _g1 = data.$g_;
	while(_g < _g1.length) this.$g_.push(skeleton.$2AB(_g1[_g++].$CP));
	this.$_N = skeleton.$4AB(data.$_N.$CP);
	this.$4C = data.$4C;
	this.$Ce = data.$Ce;
	this.$z_ = data.$z_;
	this.$0_ = data.$0_;
};
$hxClasses["$CIK"] = $CIK;
$CIK.__name__ = "$CIK";
$CIK.__interfaces__ = [$C$J];
$CIK.prototype = {
	update: function() {
		var attachment = this.$_N.$f2;
		if(!((attachment) instanceof $ClK)) {
			return;
		}
		var rotateMix = this.$z_;
		var translateMix = this.$0_;
		var rotate = rotateMix > 0;
		if(!(translateMix > 0) && !rotate) {
			return;
		}
		var data = this.$HU;
		var percentSpacing = data.$HAB == 2;
		var rotateMode = data.$IAB;
		var tangents = rotateMode == 0;
		var scale = rotateMode == 2;
		var boneCount = this.$g_.length;
		var spacesCount = tangents ? boneCount : boneCount + 1;
		var bones = this.$g_;
		var this1 = this.$1_;
		var len = this1.length;
		if(len > spacesCount) {
			this1.splice(spacesCount,spacesCount - len);
		} else if(len < spacesCount) {
			while(len < spacesCount) {
				this1.push(0);
				++len;
			}
		}
		var spaces = this1;
		var lengths = null;
		var spacing = this.$Ce;
		if(scale || !percentSpacing) {
			if(scale) {
				var this1 = this.$3_;
				var len = this1.length;
				if(len > boneCount) {
					this1.splice(boneCount,boneCount - len);
				} else if(len < boneCount) {
					while(len < boneCount) {
						this1.push(0);
						++len;
					}
				}
				lengths = this1;
			}
			var lengthSpacing = data.$HAB == 0;
			var i = 0;
			var n = spacesCount - 1;
			while(i < n) {
				var result = bones[i];
				var setupLength = result.$HU.$7;
				if(setupLength < $CIK.$FAB) {
					if(scale) {
						lengths[i] = 0;
					}
					spaces[++i] = 0;
				} else if(percentSpacing) {
					if(scale) {
						var x = setupLength * result.$TD;
						var y = setupLength * result.$_G;
						lengths[i] = Math.sqrt(x * x + y * y);
					}
					spaces[++i] = spacing;
				} else {
					var x1 = setupLength * result.$TD;
					var y1 = setupLength * result.$_G;
					var length = Math.sqrt(x1 * x1 + y1 * y1);
					if(scale) {
						lengths[i] = length;
					}
					spaces[++i] = (lengthSpacing ? setupLength + spacing : spacing) * length / setupLength;
				}
			}
		} else {
			var i = 1;
			while(i < spacesCount) {
				spaces[i] = spacing;
				++i;
			}
		}
		var result = attachment;
		var percentPosition = data.$GAB == 1;
		var target = this.$_N;
		var position = this.$4C;
		var spaces1 = this.$1_;
		var this1 = this.$2_;
		var size = spacesCount * 3 + 2;
		var len = this1.length;
		if(len > size) {
			this1.splice(size,size - len);
		} else if(len < size) {
			while(len < size) {
				this1.push(0);
				++len;
			}
		}
		var out = this1;
		var world = null;
		var closed = result.$xDB;
		var verticesLength = result.$MDB;
		var curveCount = verticesLength / 6 | 0;
		var prevCurve = -1;
		var positions;
		if(!result.$yDB) {
			var lengths1 = result.$3_;
			curveCount -= closed ? 1 : 2;
			var pathLength = lengths1[curveCount];
			if(percentPosition) {
				position *= pathLength;
			}
			if(percentSpacing) {
				var i = 1;
				while(i < spacesCount) {
					spaces1[i] *= pathLength;
					++i;
				}
			}
			var this1 = this.$vk;
			var len = this1.length;
			if(len > 8) {
				this1.splice(8,8 - len);
			} else if(len < 8) {
				while(len < 8) {
					this1.push(0);
					++len;
				}
			}
			world = this1;
			var i = 0;
			var o = 0;
			var curve = 0;
			while(i < spacesCount) {
				var space = spaces1[i];
				var p = position += space;
				if(closed) {
					p %= pathLength;
					if(p < 0) {
						p += pathLength;
					}
					curve = 0;
				} else if(p < 0) {
					if(prevCurve != -2) {
						prevCurve = -2;
						var skeleton = target.$LCB.$j2;
						var deformArray = target.$q5;
						var vertices = result.$LDB;
						var bones1 = result.$g_;
						if(bones1 == null) {
							if(deformArray.length > 0) {
								vertices = deformArray;
							}
							var bone = target.$LCB;
							var x = bone.$A$;
							var y = bone.$C$;
							var a = bone.$TD;
							var b = bone.$6;
							var c = bone.$_G;
							var d = bone.$B$;
							var v = 2;
							var w = 0;
							while(w < 4) {
								var vx = vertices[v];
								var vy = vertices[v + 1];
								world[w] = vx * a + vy * b + x;
								world[w + 1] = vx * c + vy * d + y;
								v += 2;
								w += 2;
							}
						} else {
							var v1 = 0;
							var skip = 0;
							var i1 = 0;
							while(i1 < 2) {
								var n = bones1[v1];
								v1 += n + 1;
								skip += n;
								i1 += 2;
							}
							var skeletonBones = skeleton.$n_();
							if(deformArray.length == 0) {
								var w1 = 0;
								var b1 = skip * 3;
								while(w1 < 4) {
									var wx = 0;
									var wy = 0;
									var n1 = bones1[v1++];
									n1 += v1;
									while(v1 < n1) {
										var result1 = skeletonBones[bones1[v1]];
										var vx1 = vertices[b1];
										var vy1 = vertices[b1 + 1];
										var weight = vertices[b1 + 2];
										wx += (vx1 * result1.$TD + vy1 * result1.$6 + result1.$A$) * weight;
										wy += (vx1 * result1.$_G + vy1 * result1.$B$ + result1.$C$) * weight;
										++v1;
										b1 += 3;
									}
									world[w1] = wx;
									world[w1 + 1] = wy;
									w1 += 2;
								}
							} else {
								var w2 = 0;
								var b2 = skip * 3;
								var f = skip << 1;
								while(w2 < 4) {
									var wx1 = 0;
									var wy1 = 0;
									var n2 = bones1[v1++];
									n2 += v1;
									while(v1 < n2) {
										var result2 = skeletonBones[bones1[v1]];
										var vx2 = vertices[b2] + deformArray[f];
										var vy2 = vertices[b2 + 1] + deformArray[f + 1];
										var weight1 = vertices[b2 + 2];
										wx1 += (vx2 * result2.$TD + vy2 * result2.$6 + result2.$A$) * weight1;
										wy1 += (vx2 * result2.$_G + vy2 * result2.$B$ + result2.$C$) * weight1;
										++v1;
										b2 += 3;
										f += 2;
									}
									world[w2] = wx1;
									world[w2 + 1] = wy1;
									w2 += 2;
								}
							}
						}
					}
					var x1 = world[0];
					var y1 = world[1];
					var r = Math.atan2(world[3] - y1,world[2] - x1);
					out[o] = x1 + p * Math.cos(r);
					out[o + 1] = y1 + p * Math.sin(r);
					out[o + 2] = r;
					++i;
					o += 3;
					continue;
				} else if(p > pathLength) {
					if(prevCurve != -3) {
						prevCurve = -3;
						var start = verticesLength - 6;
						var skeleton1 = target.$LCB.$j2;
						var deformArray1 = target.$q5;
						var vertices1 = result.$LDB;
						var bones2 = result.$g_;
						if(bones2 == null) {
							if(deformArray1.length > 0) {
								vertices1 = deformArray1;
							}
							var bone1 = target.$LCB;
							var x2 = bone1.$A$;
							var y2 = bone1.$C$;
							var a1 = bone1.$TD;
							var b3 = bone1.$6;
							var c1 = bone1.$_G;
							var d1 = bone1.$B$;
							var v2 = start;
							var w3 = 0;
							while(w3 < 4) {
								var vx3 = vertices1[v2];
								var vy3 = vertices1[v2 + 1];
								world[w3] = vx3 * a1 + vy3 * b3 + x2;
								world[w3 + 1] = vx3 * c1 + vy3 * d1 + y2;
								v2 += 2;
								w3 += 2;
							}
						} else {
							var v3 = 0;
							var skip1 = 0;
							var i2 = 0;
							while(i2 < start) {
								var n3 = bones2[v3];
								v3 += n3 + 1;
								skip1 += n3;
								i2 += 2;
							}
							var skeletonBones1 = skeleton1.$n_();
							if(deformArray1.length == 0) {
								var w4 = 0;
								var b4 = skip1 * 3;
								while(w4 < 4) {
									var wx2 = 0;
									var wy2 = 0;
									var n4 = bones2[v3++];
									n4 += v3;
									while(v3 < n4) {
										var result3 = skeletonBones1[bones2[v3]];
										var vx4 = vertices1[b4];
										var vy4 = vertices1[b4 + 1];
										var weight2 = vertices1[b4 + 2];
										wx2 += (vx4 * result3.$TD + vy4 * result3.$6 + result3.$A$) * weight2;
										wy2 += (vx4 * result3.$_G + vy4 * result3.$B$ + result3.$C$) * weight2;
										++v3;
										b4 += 3;
									}
									world[w4] = wx2;
									world[w4 + 1] = wy2;
									w4 += 2;
								}
							} else {
								var w5 = 0;
								var b5 = skip1 * 3;
								var f1 = skip1 << 1;
								while(w5 < 4) {
									var wx3 = 0;
									var wy3 = 0;
									var n5 = bones2[v3++];
									n5 += v3;
									while(v3 < n5) {
										var result4 = skeletonBones1[bones2[v3]];
										var vx5 = vertices1[b5] + deformArray1[f1];
										var vy5 = vertices1[b5 + 1] + deformArray1[f1 + 1];
										var weight3 = vertices1[b5 + 2];
										wx3 += (vx5 * result4.$TD + vy5 * result4.$6 + result4.$A$) * weight3;
										wy3 += (vx5 * result4.$_G + vy5 * result4.$B$ + result4.$C$) * weight3;
										++v3;
										b5 += 3;
										f1 += 2;
									}
									world[w5] = wx3;
									world[w5 + 1] = wy3;
									w5 += 2;
								}
							}
						}
					}
					var p1 = p - pathLength;
					var x11 = world[2];
					var y11 = world[3];
					var r1 = Math.atan2(y11 - world[1],x11 - world[0]);
					out[o] = x11 + p1 * Math.cos(r1);
					out[o + 1] = y11 + p1 * Math.sin(r1);
					out[o + 2] = r1;
					++i;
					o += 3;
					continue;
				}
				while(true) {
					var length = lengths1[curve];
					if(p > length) {
						++curve;
						continue;
					}
					if(curve == 0) {
						p /= length;
					} else {
						var prev = lengths1[curve - 1];
						p = (p - prev) / (length - prev);
					}
					break;
				}
				if(curve != prevCurve) {
					prevCurve = curve;
					if(closed && curve == curveCount) {
						var start1 = verticesLength - 4;
						var skeleton2 = target.$LCB.$j2;
						var deformArray2 = target.$q5;
						var vertices2 = result.$LDB;
						var bones3 = result.$g_;
						if(bones3 == null) {
							if(deformArray2.length > 0) {
								vertices2 = deformArray2;
							}
							var bone2 = target.$LCB;
							var x3 = bone2.$A$;
							var y3 = bone2.$C$;
							var a2 = bone2.$TD;
							var b6 = bone2.$6;
							var c2 = bone2.$_G;
							var d2 = bone2.$B$;
							var v4 = start1;
							var w6 = 0;
							while(w6 < 4) {
								var vx6 = vertices2[v4];
								var vy6 = vertices2[v4 + 1];
								world[w6] = vx6 * a2 + vy6 * b6 + x3;
								world[w6 + 1] = vx6 * c2 + vy6 * d2 + y3;
								v4 += 2;
								w6 += 2;
							}
						} else {
							var v5 = 0;
							var skip2 = 0;
							var i3 = 0;
							while(i3 < start1) {
								var n6 = bones3[v5];
								v5 += n6 + 1;
								skip2 += n6;
								i3 += 2;
							}
							var skeletonBones2 = skeleton2.$n_();
							if(deformArray2.length == 0) {
								var w7 = 0;
								var b7 = skip2 * 3;
								while(w7 < 4) {
									var wx4 = 0;
									var wy4 = 0;
									var n7 = bones3[v5++];
									n7 += v5;
									while(v5 < n7) {
										var result5 = skeletonBones2[bones3[v5]];
										var vx7 = vertices2[b7];
										var vy7 = vertices2[b7 + 1];
										var weight4 = vertices2[b7 + 2];
										wx4 += (vx7 * result5.$TD + vy7 * result5.$6 + result5.$A$) * weight4;
										wy4 += (vx7 * result5.$_G + vy7 * result5.$B$ + result5.$C$) * weight4;
										++v5;
										b7 += 3;
									}
									world[w7] = wx4;
									world[w7 + 1] = wy4;
									w7 += 2;
								}
							} else {
								var w8 = 0;
								var b8 = skip2 * 3;
								var f2 = skip2 << 1;
								while(w8 < 4) {
									var wx5 = 0;
									var wy5 = 0;
									var n8 = bones3[v5++];
									n8 += v5;
									while(v5 < n8) {
										var result6 = skeletonBones2[bones3[v5]];
										var vx8 = vertices2[b8] + deformArray2[f2];
										var vy8 = vertices2[b8 + 1] + deformArray2[f2 + 1];
										var weight5 = vertices2[b8 + 2];
										wx5 += (vx8 * result6.$TD + vy8 * result6.$6 + result6.$A$) * weight5;
										wy5 += (vx8 * result6.$_G + vy8 * result6.$B$ + result6.$C$) * weight5;
										++v5;
										b8 += 3;
										f2 += 2;
									}
									world[w8] = wx5;
									world[w8 + 1] = wy5;
									w8 += 2;
								}
							}
						}
						var skeleton3 = target.$LCB.$j2;
						var deformArray3 = target.$q5;
						var vertices3 = result.$LDB;
						var bones4 = result.$g_;
						if(bones4 == null) {
							if(deformArray3.length > 0) {
								vertices3 = deformArray3;
							}
							var bone3 = target.$LCB;
							var x4 = bone3.$A$;
							var y4 = bone3.$C$;
							var a3 = bone3.$TD;
							var b9 = bone3.$6;
							var c3 = bone3.$_G;
							var d3 = bone3.$B$;
							var v6 = 0;
							var w9 = 4;
							while(w9 < 8) {
								var vx9 = vertices3[v6];
								var vy9 = vertices3[v6 + 1];
								world[w9] = vx9 * a3 + vy9 * b9 + x4;
								world[w9 + 1] = vx9 * c3 + vy9 * d3 + y4;
								v6 += 2;
								w9 += 2;
							}
						} else {
							var v7 = 0;
							while(true) break;
							var skeletonBones3 = skeleton3.$n_();
							if(deformArray3.length == 0) {
								var w10 = 4;
								var b10 = 0;
								while(w10 < 8) {
									var wx6 = 0;
									var wy6 = 0;
									var n9 = bones4[v7++];
									n9 += v7;
									while(v7 < n9) {
										var result7 = skeletonBones3[bones4[v7]];
										var vx10 = vertices3[b10];
										var vy10 = vertices3[b10 + 1];
										var weight6 = vertices3[b10 + 2];
										wx6 += (vx10 * result7.$TD + vy10 * result7.$6 + result7.$A$) * weight6;
										wy6 += (vx10 * result7.$_G + vy10 * result7.$B$ + result7.$C$) * weight6;
										++v7;
										b10 += 3;
									}
									world[w10] = wx6;
									world[w10 + 1] = wy6;
									w10 += 2;
								}
							} else {
								var w11 = 4;
								var b11 = 0;
								var f3 = 0;
								while(w11 < 8) {
									var wx7 = 0;
									var wy7 = 0;
									var n10 = bones4[v7++];
									n10 += v7;
									while(v7 < n10) {
										var result8 = skeletonBones3[bones4[v7]];
										var vx11 = vertices3[b11] + deformArray3[f3];
										var vy11 = vertices3[b11 + 1] + deformArray3[f3 + 1];
										var weight7 = vertices3[b11 + 2];
										wx7 += (vx11 * result8.$TD + vy11 * result8.$6 + result8.$A$) * weight7;
										wy7 += (vx11 * result8.$_G + vy11 * result8.$B$ + result8.$C$) * weight7;
										++v7;
										b11 += 3;
										f3 += 2;
									}
									world[w11] = wx7;
									world[w11 + 1] = wy7;
									w11 += 2;
								}
							}
						}
					} else {
						var start2 = curve * 6 + 2;
						var skeleton4 = target.$LCB.$j2;
						var deformArray4 = target.$q5;
						var vertices4 = result.$LDB;
						var bones5 = result.$g_;
						if(bones5 == null) {
							if(deformArray4.length > 0) {
								vertices4 = deformArray4;
							}
							var bone4 = target.$LCB;
							var x5 = bone4.$A$;
							var y5 = bone4.$C$;
							var a4 = bone4.$TD;
							var b12 = bone4.$6;
							var c4 = bone4.$_G;
							var d4 = bone4.$B$;
							var v8 = start2;
							var w12 = 0;
							while(w12 < 8) {
								var vx12 = vertices4[v8];
								var vy12 = vertices4[v8 + 1];
								world[w12] = vx12 * a4 + vy12 * b12 + x5;
								world[w12 + 1] = vx12 * c4 + vy12 * d4 + y5;
								v8 += 2;
								w12 += 2;
							}
						} else {
							var v9 = 0;
							var skip3 = 0;
							var i4 = 0;
							while(i4 < start2) {
								var n11 = bones5[v9];
								v9 += n11 + 1;
								skip3 += n11;
								i4 += 2;
							}
							var skeletonBones4 = skeleton4.$n_();
							if(deformArray4.length == 0) {
								var w13 = 0;
								var b13 = skip3 * 3;
								while(w13 < 8) {
									var wx8 = 0;
									var wy8 = 0;
									var n12 = bones5[v9++];
									n12 += v9;
									while(v9 < n12) {
										var result9 = skeletonBones4[bones5[v9]];
										var vx13 = vertices4[b13];
										var vy13 = vertices4[b13 + 1];
										var weight8 = vertices4[b13 + 2];
										wx8 += (vx13 * result9.$TD + vy13 * result9.$6 + result9.$A$) * weight8;
										wy8 += (vx13 * result9.$_G + vy13 * result9.$B$ + result9.$C$) * weight8;
										++v9;
										b13 += 3;
									}
									world[w13] = wx8;
									world[w13 + 1] = wy8;
									w13 += 2;
								}
							} else {
								var w14 = 0;
								var b14 = skip3 * 3;
								var f4 = skip3 << 1;
								while(w14 < 8) {
									var wx9 = 0;
									var wy9 = 0;
									var n13 = bones5[v9++];
									n13 += v9;
									while(v9 < n13) {
										var result10 = skeletonBones4[bones5[v9]];
										var vx14 = vertices4[b14] + deformArray4[f4];
										var vy14 = vertices4[b14 + 1] + deformArray4[f4 + 1];
										var weight9 = vertices4[b14 + 2];
										wx9 += (vx14 * result10.$TD + vy14 * result10.$6 + result10.$A$) * weight9;
										wy9 += (vx14 * result10.$_G + vy14 * result10.$B$ + result10.$C$) * weight9;
										++v9;
										b14 += 3;
										f4 += 2;
									}
									world[w14] = wx9;
									world[w14 + 1] = wy9;
									w14 += 2;
								}
							}
						}
					}
				}
				var x12 = world[0];
				var y12 = world[1];
				var cx1 = world[2];
				var cy1 = world[3];
				var cx2 = world[4];
				var cy2 = world[5];
				var tangents1 = tangents || i > 0 && space < $CIK.$FAB;
				if(p < $CIK.$FAB || isNaN(p)) {
					out[o] = x12;
					out[o + 1] = y12;
					out[o + 2] = Math.atan2(cy1 - y12,cx1 - x12);
				} else {
					var tt = p * p;
					var ttt = tt * p;
					var u = 1 - p;
					var uu = u * u;
					var uuu = uu * u;
					var ut = u * p;
					var ut3 = ut * 3;
					var uut3 = u * ut3;
					var utt3 = ut3 * p;
					var x6 = x12 * uuu + cx1 * uut3 + cx2 * utt3 + world[6] * ttt;
					var y6 = y12 * uuu + cy1 * uut3 + cy2 * utt3 + world[7] * ttt;
					out[o] = x6;
					out[o + 1] = y6;
					if(tangents1) {
						if(p < 0.001) {
							out[o + 2] = Math.atan2(cy1 - y12,cx1 - x12);
						} else {
							out[o + 2] = Math.atan2(y6 - (y12 * uu + cy1 * ut * 2 + cy2 * tt),x6 - (x12 * uu + cx1 * ut * 2 + cx2 * tt));
						}
					}
				}
				++i;
				o += 3;
			}
			positions = out;
		} else {
			if(closed) {
				verticesLength += 2;
				var this1 = this.$vk;
				var len = this1.length;
				if(len > verticesLength) {
					this1.splice(verticesLength,verticesLength - len);
				} else if(len < verticesLength) {
					while(len < verticesLength) {
						this1.push(0);
						++len;
					}
				}
				world = this1;
				var count = verticesLength - 4;
				count = (count >> 1) * 2;
				var skeleton = target.$LCB.$j2;
				var deformArray = target.$q5;
				var vertices = result.$LDB;
				var bones1 = result.$g_;
				if(bones1 == null) {
					if(deformArray.length > 0) {
						vertices = deformArray;
					}
					var bone = target.$LCB;
					var x = bone.$A$;
					var y = bone.$C$;
					var a = bone.$TD;
					var b = bone.$6;
					var c = bone.$_G;
					var d = bone.$B$;
					var v = 2;
					var w = 0;
					while(w < count) {
						var vx = vertices[v];
						var vy = vertices[v + 1];
						world[w] = vx * a + vy * b + x;
						world[w + 1] = vx * c + vy * d + y;
						v += 2;
						w += 2;
					}
				} else {
					var v = 0;
					var skip = 0;
					var i = 0;
					while(i < 2) {
						var n = bones1[v];
						v += n + 1;
						skip += n;
						i += 2;
					}
					var skeletonBones = skeleton.$n_();
					if(deformArray.length == 0) {
						var w = 0;
						var b = skip * 3;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result1 = skeletonBones[bones1[v]];
								var vx = vertices[b];
								var vy = vertices[b + 1];
								var weight = vertices[b + 2];
								wx += (vx * result1.$TD + vy * result1.$6 + result1.$A$) * weight;
								wy += (vx * result1.$_G + vy * result1.$B$ + result1.$C$) * weight;
								++v;
								b += 3;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					} else {
						var w = 0;
						var b = skip * 3;
						var f = skip << 1;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result1 = skeletonBones[bones1[v]];
								var vx = vertices[b] + deformArray[f];
								var vy = vertices[b + 1] + deformArray[f + 1];
								var weight = vertices[b + 2];
								wx += (vx * result1.$TD + vy * result1.$6 + result1.$A$) * weight;
								wy += (vx * result1.$_G + vy * result1.$B$ + result1.$C$) * weight;
								++v;
								b += 3;
								f += 2;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					}
				}
				var count = 2;
				var offset = verticesLength - 4;
				count = offset + 2;
				var skeleton = target.$LCB.$j2;
				var deformArray = target.$q5;
				var vertices = result.$LDB;
				var bones1 = result.$g_;
				if(bones1 == null) {
					if(deformArray.length > 0) {
						vertices = deformArray;
					}
					var bone = target.$LCB;
					var x = bone.$A$;
					var y = bone.$C$;
					var a = bone.$TD;
					var b = bone.$6;
					var c = bone.$_G;
					var d = bone.$B$;
					var v = 0;
					var w = offset;
					while(w < count) {
						var vx = vertices[v];
						var vy = vertices[v + 1];
						world[w] = vx * a + vy * b + x;
						world[w + 1] = vx * c + vy * d + y;
						v += 2;
						w += 2;
					}
				} else {
					var v = 0;
					while(true) break;
					var skeletonBones = skeleton.$n_();
					if(deformArray.length == 0) {
						var w = offset;
						var b = 0;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result1 = skeletonBones[bones1[v]];
								var vx = vertices[b];
								var vy = vertices[b + 1];
								var weight = vertices[b + 2];
								wx += (vx * result1.$TD + vy * result1.$6 + result1.$A$) * weight;
								wy += (vx * result1.$_G + vy * result1.$B$ + result1.$C$) * weight;
								++v;
								b += 3;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					} else {
						var w = offset;
						var b = 0;
						var f = 0;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result1 = skeletonBones[bones1[v]];
								var vx = vertices[b] + deformArray[f];
								var vy = vertices[b + 1] + deformArray[f + 1];
								var weight = vertices[b + 2];
								wx += (vx * result1.$TD + vy * result1.$6 + result1.$A$) * weight;
								wy += (vx * result1.$_G + vy * result1.$B$ + result1.$C$) * weight;
								++v;
								b += 3;
								f += 2;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					}
				}
				world[verticesLength - 2] = world[0];
				world[verticesLength - 1] = world[1];
			} else {
				--curveCount;
				verticesLength -= 4;
				var this1 = this.$vk;
				var len = this1.length;
				if(len > verticesLength) {
					this1.splice(verticesLength,verticesLength - len);
				} else if(len < verticesLength) {
					while(len < verticesLength) {
						this1.push(0);
						++len;
					}
				}
				world = this1;
				var count = verticesLength;
				count = (count >> 1) * 2;
				var skeleton = target.$LCB.$j2;
				var deformArray = target.$q5;
				var vertices = result.$LDB;
				var bones1 = result.$g_;
				if(bones1 == null) {
					if(deformArray.length > 0) {
						vertices = deformArray;
					}
					var bone = target.$LCB;
					var x = bone.$A$;
					var y = bone.$C$;
					var a = bone.$TD;
					var b = bone.$6;
					var c = bone.$_G;
					var d = bone.$B$;
					var v = 2;
					var w = 0;
					while(w < count) {
						var vx = vertices[v];
						var vy = vertices[v + 1];
						world[w] = vx * a + vy * b + x;
						world[w + 1] = vx * c + vy * d + y;
						v += 2;
						w += 2;
					}
				} else {
					var v = 0;
					var skip = 0;
					var i = 0;
					while(i < 2) {
						var n = bones1[v];
						v += n + 1;
						skip += n;
						i += 2;
					}
					var skeletonBones = skeleton.$n_();
					if(deformArray.length == 0) {
						var w = 0;
						var b = skip * 3;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result1 = skeletonBones[bones1[v]];
								var vx = vertices[b];
								var vy = vertices[b + 1];
								var weight = vertices[b + 2];
								wx += (vx * result1.$TD + vy * result1.$6 + result1.$A$) * weight;
								wy += (vx * result1.$_G + vy * result1.$B$ + result1.$C$) * weight;
								++v;
								b += 3;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					} else {
						var w = 0;
						var b = skip * 3;
						var f = skip << 1;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result1 = skeletonBones[bones1[v]];
								var vx = vertices[b] + deformArray[f];
								var vy = vertices[b + 1] + deformArray[f + 1];
								var weight = vertices[b + 2];
								wx += (vx * result1.$TD + vy * result1.$6 + result1.$A$) * weight;
								wy += (vx * result1.$_G + vy * result1.$B$ + result1.$C$) * weight;
								++v;
								b += 3;
								f += 2;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					}
				}
			}
			var this1 = this.$z5;
			var len = this1.length;
			if(len > curveCount) {
				this1.splice(curveCount,curveCount - len);
			} else if(len < curveCount) {
				while(len < curveCount) {
					this1.push(0);
					++len;
				}
			}
			var curves = this1;
			var pathLength = 0;
			var x1 = world[0];
			var y1 = world[1];
			var cx1 = 0;
			var cy1 = 0;
			var cx2 = 0;
			var cy2 = 0;
			var x2 = 0;
			var y2 = 0;
			var tmpx = 0;
			var tmpy = 0;
			var dddfx = 0;
			var dddfy = 0;
			var ddfx = 0;
			var ddfy = 0;
			var dfx = 0;
			var dfy = 0;
			var i = 0;
			var w = 2;
			while(i < curveCount) {
				cx1 = world[w];
				cy1 = world[w + 1];
				cx2 = world[w + 2];
				cy2 = world[w + 3];
				x2 = world[w + 4];
				y2 = world[w + 5];
				tmpx = (x1 - cx1 * 2 + cx2) * 0.1875;
				tmpy = (y1 - cy1 * 2 + cy2) * 0.1875;
				dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;
				dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;
				ddfx = tmpx * 2 + dddfx;
				ddfy = tmpy * 2 + dddfy;
				dfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;
				dfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;
				pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
				dfx += ddfx;
				dfy += ddfy;
				ddfx += dddfx;
				ddfy += dddfy;
				pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
				dfx += ddfx;
				dfy += ddfy;
				pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
				dfx += ddfx + dddfx;
				dfy += ddfy + dddfy;
				pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
				curves[i] = pathLength;
				x1 = x2;
				y1 = y2;
				++i;
				w += 6;
			}
			if(percentPosition) {
				position *= pathLength;
			} else {
				position *= pathLength / result.$3_[curveCount - 1];
			}
			if(percentSpacing) {
				var i = 1;
				while(i < spacesCount) {
					spaces1[i] *= pathLength;
					++i;
				}
			}
			var segments = this.$4_;
			var curveLength = 0;
			var i = 0;
			var o = 0;
			var curve = 0;
			var segment = 0;
			while(i < spacesCount) {
				var space = spaces1[i];
				var p = position += space;
				if(closed) {
					p %= pathLength;
					if(p < 0) {
						p += pathLength;
					}
					curve = 0;
				} else if(p < 0) {
					var x11 = world[0];
					var y11 = world[1];
					var r = Math.atan2(world[3] - y11,world[2] - x11);
					out[o] = x11 + p * Math.cos(r);
					out[o + 1] = y11 + p * Math.sin(r);
					out[o + 2] = r;
					++i;
					o += 3;
					continue;
				} else if(p > pathLength) {
					var p1 = p - pathLength;
					var i1 = verticesLength - 4;
					var x12 = world[i1 + 2];
					var y12 = world[i1 + 3];
					var r1 = Math.atan2(y12 - world[i1 + 1],x12 - world[i1]);
					out[o] = x12 + p1 * Math.cos(r1);
					out[o + 1] = y12 + p1 * Math.sin(r1);
					out[o + 2] = r1;
					++i;
					o += 3;
					continue;
				}
				while(true) {
					var length = curves[curve];
					if(p > length) {
						++curve;
						continue;
					}
					if(curve == 0) {
						p /= length;
					} else {
						var prev = curves[curve - 1];
						p = (p - prev) / (length - prev);
					}
					break;
				}
				if(curve != prevCurve) {
					prevCurve = curve;
					var ii = curve * 6;
					x1 = world[ii];
					y1 = world[ii + 1];
					cx1 = world[ii + 2];
					cy1 = world[ii + 3];
					cx2 = world[ii + 4];
					cy2 = world[ii + 5];
					x2 = world[ii + 6];
					y2 = world[ii + 7];
					tmpx = (x1 - cx1 * 2 + cx2) * 0.03;
					tmpy = (y1 - cy1 * 2 + cy2) * 0.03;
					dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;
					dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;
					ddfx = tmpx * 2 + dddfx;
					ddfy = tmpy * 2 + dddfy;
					dfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;
					dfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;
					curveLength = Math.sqrt(dfx * dfx + dfy * dfy);
					segments[0] = curveLength;
					ii = 1;
					while(ii < 8) {
						dfx += ddfx;
						dfy += ddfy;
						ddfx += dddfx;
						ddfy += dddfy;
						curveLength += Math.sqrt(dfx * dfx + dfy * dfy);
						segments[ii] = curveLength;
						++ii;
					}
					dfx += ddfx;
					dfy += ddfy;
					curveLength += Math.sqrt(dfx * dfx + dfy * dfy);
					segments[8] = curveLength;
					dfx += ddfx + dddfx;
					dfy += ddfy + dddfy;
					curveLength += Math.sqrt(dfx * dfx + dfy * dfy);
					segments[9] = curveLength;
					segment = 0;
				}
				p *= curveLength;
				while(true) {
					var length1 = segments[segment];
					if(p > length1) {
						++segment;
						continue;
					}
					if(segment == 0) {
						p /= length1;
					} else {
						var prev1 = segments[segment - 1];
						p = segment + (p - prev1) / (length1 - prev1);
					}
					break;
				}
				var p2 = p * 0.1;
				var tangents1 = tangents || i > 0 && space < $CIK.$FAB;
				if(p2 < $CIK.$FAB || isNaN(p2)) {
					out[o] = x1;
					out[o + 1] = y1;
					out[o + 2] = Math.atan2(cy1 - y1,cx1 - x1);
				} else {
					var tt = p2 * p2;
					var ttt = tt * p2;
					var u = 1 - p2;
					var uu = u * u;
					var uuu = uu * u;
					var ut = u * p2;
					var ut3 = ut * 3;
					var uut3 = u * ut3;
					var utt3 = ut3 * p2;
					var x = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt;
					var y = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;
					out[o] = x;
					out[o + 1] = y;
					if(tangents1) {
						if(p2 < 0.001) {
							out[o + 2] = Math.atan2(cy1 - y1,cx1 - x1);
						} else {
							out[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt),x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));
						}
					}
				}
				++i;
				o += 3;
			}
			positions = out;
		}
		var boneX = positions[0];
		var boneY = positions[1];
		var offsetRotation = data.$JAB;
		var tip = false;
		if(offsetRotation == 0) {
			tip = rotateMode == 1;
		} else {
			tip = false;
			var p = this.$_N.$LCB;
			offsetRotation *= p.$TD * p.$B$ - p.$6 * p.$_G > 0 ? $CNL.$WFB : -$CNL.$WFB;
		}
		var i = 0;
		var p = 3;
		while(i < boneCount) {
			var result = bones[i];
			result.$A$ += (boneX - result.$A$) * translateMix;
			result.$C$ += (boneY - result.$C$) * translateMix;
			var x = positions[p];
			var y = positions[p + 1];
			var dx = x - boneX;
			var dy = y - boneY;
			if(scale) {
				var length = lengths[i];
				if(length >= $CIK.$FAB) {
					var s = (Math.sqrt(dx * dx + dy * dy) / length - 1) * rotateMix + 1;
					result.$TD *= s;
					result.$_G *= s;
				}
			}
			boneX = x;
			boneY = y;
			if(rotate) {
				var a = result.$TD;
				var b = result.$6;
				var c = result.$_G;
				var d = result.$B$;
				var r = 0;
				var cos = 0;
				var sin = 0;
				if(tangents) {
					r = positions[p - 1];
				} else if(spaces[i + 1] < $CIK.$FAB) {
					r = positions[p + 2];
				} else {
					r = Math.atan2(dy,dx);
				}
				r -= Math.atan2(c,a);
				if(tip) {
					cos = Math.cos(r);
					sin = Math.sin(r);
					var length1 = result.$HU.$7;
					boneX = x + (length1 * (cos * a - sin * c) - dx) * rotateMix;
					boneY = y + (length1 * (sin * a + cos * c) - dy) * rotateMix;
				} else {
					r += offsetRotation;
				}
				if(r > 3.1415927) {
					r -= 6.2831854;
				} else if(r < -3.1415927) {
					r += 6.2831854;
				}
				r *= rotateMix;
				cos = Math.cos(r);
				sin = Math.sin(r);
				result.$TD = cos * a - sin * c;
				result.$6 = cos * b - sin * d;
				result.$_G = sin * a + cos * c;
				result.$B$ = sin * b + cos * d;
			}
			result.$_9 = false;
			++i;
			p += 3;
		}
	}
	,__class__: $CIK
};
var $CJK = function(name) {
	this.$0_ = 0;
	this.$z_ = 0;
	this.$Ce = 0;
	this.$4C = 0;
	this.$JAB = 0;
	this.$g_ = [];
	$CDK.call(this,name);
};
$hxClasses["$CJK"] = $CJK;
$CJK.__name__ = "$CJK";
$CJK.__super__ = $CDK;
$CJK.prototype = $extend($CDK.prototype,{
	__class__: $CJK
});
var $CQK = function(data) {
	this.$RC = 0;
	this.$QC = 0;
	this.$OQ = 1;
	this.$NQ = 1;
	this.$7b = 0;
	this.$nAB = [];
	this.$5S = [];
	if(data == null) {
		throw haxe_Exception.thrown(new $CwJ("data cannot be null."));
	}
	this.$HU = data;
	this.$g_ = [];
	var _g = 0;
	var _g1 = data.$g_;
	while(_g < _g1.length) {
		var boneData = _g1[_g];
		++_g;
		var bone = null;
		if(boneData.$gB == null) {
			bone = new $C_$J(boneData,this,null);
		} else {
			var parent = this.$g_[boneData.$gB.$eU];
			bone = new $C_$J(boneData,this,parent);
			parent.$hB.push(bone);
		}
		this.$g_.push(bone);
	}
	this.$jAB = [];
	this.$s5 = [];
	var _g = 0;
	var _g1 = data.$jAB;
	while(_g < _g1.length) {
		var slotData = _g1[_g];
		++_g;
		var slot = new $CYK(slotData,this.$g_[slotData.$UCB.$eU]);
		this.$jAB.push(slot);
		this.$s5.push(slot);
	}
	this.$kAB = [];
	var _g = 0;
	var _g1 = data.$kAB;
	while(_g < _g1.length) this.$kAB.push(new $CGK(_g1[_g++],this));
	this.$lAB = [];
	var _g = 0;
	var _g1 = data.$lAB;
	while(_g < _g1.length) this.$lAB.push(new $CaK(_g1[_g++],this));
	this.$mAB = [];
	var _g = 0;
	var _g1 = data.$mAB;
	while(_g < _g1.length) this.$mAB.push(new $CIK(_g1[_g++],this));
	this.$Jf = new $CvK(1,1,1,1);
	var cache = this.$5S;
	cache.splice(0,cache.length);
	var this1 = this.$nAB;
	this1.splice(0,this1.length);
	var boneCount = this.$g_.length;
	var bones = this.$g_;
	var i = 0;
	while(i < boneCount) {
		var result = bones[i];
		result.$D$ = result.$HU.$$$;
		result.$rI = !result.$D$;
		++i;
	}
	if(this.$oAB != null) {
		var skinBones = this.$oAB.$g_;
		var i = 0;
		var n = this.$oAB.$g_.length;
		while(i < n) {
			var bone = bones[skinBones[i].$eU];
			while(true) {
				bone.$D$ = false;
				bone.$rI = true;
				bone = bone.$gB;
				if(bone == null) {
					break;
				}
			}
			++i;
		}
	}
	var ikCount = this.$kAB.length;
	var transformCount = this.$lAB.length;
	var pathCount = this.$mAB.length;
	var ikConstraints = this.$kAB;
	var transformConstraints = this.$lAB;
	var pathConstraints = this.$mAB;
	var constraintCount = ikCount + transformCount + pathCount;
	var _gotoLabel_outer;
	while(true) {
		_gotoLabel_outer = 0;
		var i = 0;
		while(i < constraintCount) {
			var ii = 0;
			while(ii < ikCount) {
				var result = ikConstraints[ii];
				if(result.$HU.$R_ == i) {
					result.$rI = result.$_N.$rI && (!result.$HU.$$$ || this.$oAB != null && this.$oAB.$BCB.indexOf(result.$HU) != -1);
					if(result.$rI) {
						var target = result.$_N;
						if(!target.$D$) {
							var parent = target.$gB;
							if(parent != null) {
								if(!parent.$D$) {
									var parent1 = parent.$gB;
									if(parent1 != null) {
										this.$vAB(parent1);
									}
									parent.$D$ = true;
									this.$5S.push(parent);
								}
							}
							target.$D$ = true;
							this.$5S.push(target);
						}
						var constrained = result.$g_;
						var parent2 = constrained.length > 0 ? constrained[0] : null;
						if(!parent2.$D$) {
							var parent3 = parent2.$gB;
							if(parent3 != null) {
								if(!parent3.$D$) {
									var parent4 = parent3.$gB;
									if(parent4 != null) {
										this.$vAB(parent4);
									}
									parent3.$D$ = true;
									this.$5S.push(parent3);
								}
							}
							parent2.$D$ = true;
							this.$5S.push(parent2);
						}
						if(constrained.length > 1) {
							var child = constrained.length == 0 ? null : constrained[constrained.length - 1];
							if(this.$5S.indexOf(child) == -1) {
								this.$nAB.push(child);
							}
						}
						this.$5S.push(result);
						var bones1 = parent2.$hB;
						var i1 = 0;
						var n = bones1.length;
						while(i1 < n) {
							var bone = bones1[i1];
							if(!bone.$rI) {
								++i1;
								continue;
							}
							if(bone.$D$) {
								var bones2 = bone.$hB;
								var i2 = 0;
								var n1 = bones2.length;
								while(i2 < n1) {
									var bone1 = bones2[i2];
									if(!bone1.$rI) {
										++i2;
										continue;
									}
									if(bone1.$D$) {
										this.$wAB(bone1.$hB);
									}
									bone1.$D$ = false;
									++i2;
								}
							}
							bone.$D$ = false;
							++i1;
						}
						(constrained.length == 0 ? null : constrained[constrained.length - 1]).$D$ = true;
					}
					++ii;
					_gotoLabel_outer = 2;
					break;
				}
				++ii;
			}
			if(_gotoLabel_outer == 2) {
				_gotoLabel_outer = 0;
				++i;
				continue;
			}
			if(_gotoLabel_outer >= 1) {
				break;
			}
			var ii1 = 0;
			while(ii1 < transformCount) {
				var result1 = transformConstraints[ii1];
				if(result1.$HU.$R_ == i) {
					result1.$rI = result1.$_N.$rI && (!result1.$HU.$$$ || this.$oAB != null && this.$oAB.$BCB.indexOf(result1.$HU) != -1);
					if(result1.$rI) {
						var bone2 = result1.$_N;
						if(!bone2.$D$) {
							var parent5 = bone2.$gB;
							if(parent5 != null) {
								if(!parent5.$D$) {
									var parent6 = parent5.$gB;
									if(parent6 != null) {
										this.$vAB(parent6);
									}
									parent5.$D$ = true;
									this.$5S.push(parent5);
								}
							}
							bone2.$D$ = true;
							this.$5S.push(bone2);
						}
						var constrained1 = result1.$g_;
						var boneCount1 = constrained1.length;
						if(result1.$HU.$qCB) {
							var i3 = 0;
							while(i3 < boneCount1) {
								var child1 = constrained1[i3];
								var bone3 = child1.$gB;
								if(!bone3.$D$) {
									var parent7 = bone3.$gB;
									if(parent7 != null) {
										if(!parent7.$D$) {
											var parent8 = parent7.$gB;
											if(parent8 != null) {
												this.$vAB(parent8);
											}
											parent7.$D$ = true;
											this.$5S.push(parent7);
										}
									}
									bone3.$D$ = true;
									this.$5S.push(bone3);
								}
								if(this.$5S.indexOf(child1) == -1) {
									this.$nAB.push(child1);
								}
								++i3;
							}
						} else {
							var i4 = 0;
							while(i4 < boneCount1) {
								var bone4 = constrained1[i4];
								if(!bone4.$D$) {
									var parent9 = bone4.$gB;
									if(parent9 != null) {
										if(!parent9.$D$) {
											var parent10 = parent9.$gB;
											if(parent10 != null) {
												this.$vAB(parent10);
											}
											parent9.$D$ = true;
											this.$5S.push(parent9);
										}
									}
									bone4.$D$ = true;
									this.$5S.push(bone4);
								}
								++i4;
							}
						}
						this.$5S.push(result1);
						var i5 = 0;
						while(i5 < boneCount1) {
							var bones3 = constrained1[i5].$hB;
							var i6 = 0;
							var n2 = bones3.length;
							while(i6 < n2) {
								var bone5 = bones3[i6];
								if(!bone5.$rI) {
									++i6;
									continue;
								}
								if(bone5.$D$) {
									var bones4 = bone5.$hB;
									var i7 = 0;
									var n3 = bones4.length;
									while(i7 < n3) {
										var bone6 = bones4[i7];
										if(!bone6.$rI) {
											++i7;
											continue;
										}
										if(bone6.$D$) {
											this.$wAB(bone6.$hB);
										}
										bone6.$D$ = false;
										++i7;
									}
								}
								bone5.$D$ = false;
								++i6;
							}
							++i5;
						}
						var i8 = 0;
						while(i8 < boneCount1) {
							constrained1[i8].$D$ = true;
							++i8;
						}
					}
					++ii1;
					_gotoLabel_outer = 2;
					break;
				}
				++ii1;
			}
			if(_gotoLabel_outer == 2) {
				_gotoLabel_outer = 0;
				++i;
				continue;
			}
			if(_gotoLabel_outer >= 1) {
				break;
			}
			var ii2 = 0;
			while(ii2 < pathCount) {
				var result2 = pathConstraints[ii2];
				if(result2.$HU.$R_ == i) {
					result2.$rI = result2.$_N.$LCB.$rI && (!result2.$HU.$$$ || this.$oAB != null && this.$oAB.$BCB.indexOf(result2.$HU) != -1);
					if(result2.$rI) {
						var slot = result2.$_N;
						var slotIndex = slot.$HU.$eU;
						var slotBone = slot.$LCB;
						if(this.$oAB != null) {
							var _g = 0;
							var _g1 = $C_$K.$1R(this.$oAB.$ACB);
							while(_g < _g1.length) {
								var entry = _g1[_g];
								++_g;
								if(entry.$H6 == slotIndex) {
									var attachment = entry.$f2;
									if(((attachment) instanceof $ClK)) {
										var pathBones = attachment.$g_;
										if(pathBones == null) {
											if(!slotBone.$D$) {
												var parent11 = slotBone.$gB;
												if(parent11 != null) {
													if(!parent11.$D$) {
														var parent12 = parent11.$gB;
														if(parent12 != null) {
															this.$vAB(parent12);
														}
														parent11.$D$ = true;
														this.$5S.push(parent11);
													}
												}
												slotBone.$D$ = true;
												this.$5S.push(slotBone);
											}
										} else {
											var bones5 = this.$g_;
											var i9 = 0;
											var n4 = pathBones.length;
											while(i9 < n4) {
												var nn = pathBones[i9++];
												nn += i9;
												while(i9 < nn) {
													var bone7 = bones5[pathBones[i9++]];
													if(!bone7.$D$) {
														var parent13 = bone7.$gB;
														if(parent13 != null) {
															if(!parent13.$D$) {
																var parent14 = parent13.$gB;
																if(parent14 != null) {
																	this.$vAB(parent14);
																}
																parent13.$D$ = true;
																this.$5S.push(parent13);
															}
														}
														bone7.$D$ = true;
														this.$5S.push(bone7);
													}
												}
											}
										}
									}
								}
							}
						}
						if(this.$HU.$eBB != null && this.$HU.$eBB != this.$oAB) {
							var _g2 = 0;
							var _g3 = $C_$K.$1R(this.$HU.$eBB.$ACB);
							while(_g2 < _g3.length) {
								var entry1 = _g3[_g2];
								++_g2;
								if(entry1.$H6 == slotIndex) {
									var attachment1 = entry1.$f2;
									if(((attachment1) instanceof $ClK)) {
										var pathBones1 = attachment1.$g_;
										if(pathBones1 == null) {
											if(!slotBone.$D$) {
												var parent15 = slotBone.$gB;
												if(parent15 != null) {
													if(!parent15.$D$) {
														var parent16 = parent15.$gB;
														if(parent16 != null) {
															this.$vAB(parent16);
														}
														parent15.$D$ = true;
														this.$5S.push(parent15);
													}
												}
												slotBone.$D$ = true;
												this.$5S.push(slotBone);
											}
										} else {
											var bones6 = this.$g_;
											var i10 = 0;
											var n5 = pathBones1.length;
											while(i10 < n5) {
												var nn1 = pathBones1[i10++];
												nn1 += i10;
												while(i10 < nn1) {
													var bone8 = bones6[pathBones1[i10++]];
													if(!bone8.$D$) {
														var parent17 = bone8.$gB;
														if(parent17 != null) {
															if(!parent17.$D$) {
																var parent18 = parent17.$gB;
																if(parent18 != null) {
																	this.$vAB(parent18);
																}
																parent17.$D$ = true;
																this.$5S.push(parent17);
															}
														}
														bone8.$D$ = true;
														this.$5S.push(bone8);
													}
												}
											}
										}
									}
								}
							}
						}
						var attachment2 = slot.$f2;
						if(((attachment2) instanceof $ClK)) {
							if(((attachment2) instanceof $ClK)) {
								var pathBones2 = attachment2.$g_;
								if(pathBones2 == null) {
									if(!slotBone.$D$) {
										var parent19 = slotBone.$gB;
										if(parent19 != null) {
											if(!parent19.$D$) {
												var parent20 = parent19.$gB;
												if(parent20 != null) {
													this.$vAB(parent20);
												}
												parent19.$D$ = true;
												this.$5S.push(parent19);
											}
										}
										slotBone.$D$ = true;
										this.$5S.push(slotBone);
									}
								} else {
									var bones7 = this.$g_;
									var i11 = 0;
									var n6 = pathBones2.length;
									while(i11 < n6) {
										var nn2 = pathBones2[i11++];
										nn2 += i11;
										while(i11 < nn2) {
											var bone9 = bones7[pathBones2[i11++]];
											if(!bone9.$D$) {
												var parent21 = bone9.$gB;
												if(parent21 != null) {
													if(!parent21.$D$) {
														var parent22 = parent21.$gB;
														if(parent22 != null) {
															this.$vAB(parent22);
														}
														parent21.$D$ = true;
														this.$5S.push(parent21);
													}
												}
												bone9.$D$ = true;
												this.$5S.push(bone9);
											}
										}
									}
								}
							}
						}
						var constrained2 = result2.$g_;
						var boneCount2 = constrained2.length;
						var i12 = 0;
						while(i12 < boneCount2) {
							var bone10 = constrained2[i12];
							if(!bone10.$D$) {
								var parent23 = bone10.$gB;
								if(parent23 != null) {
									if(!parent23.$D$) {
										var parent24 = parent23.$gB;
										if(parent24 != null) {
											this.$vAB(parent24);
										}
										parent23.$D$ = true;
										this.$5S.push(parent23);
									}
								}
								bone10.$D$ = true;
								this.$5S.push(bone10);
							}
							++i12;
						}
						this.$5S.push(result2);
						var i13 = 0;
						while(i13 < boneCount2) {
							var bones8 = constrained2[i13].$hB;
							var i14 = 0;
							var n7 = bones8.length;
							while(i14 < n7) {
								var bone11 = bones8[i14];
								if(!bone11.$rI) {
									++i14;
									continue;
								}
								if(bone11.$D$) {
									var bones9 = bone11.$hB;
									var i15 = 0;
									var n8 = bones9.length;
									while(i15 < n8) {
										var bone12 = bones9[i15];
										if(!bone12.$rI) {
											++i15;
											continue;
										}
										if(bone12.$D$) {
											this.$wAB(bone12.$hB);
										}
										bone12.$D$ = false;
										++i15;
									}
								}
								bone11.$D$ = false;
								++i14;
							}
							++i13;
						}
						var i16 = 0;
						while(i16 < boneCount2) {
							constrained2[i16].$D$ = true;
							++i16;
						}
					}
					++ii2;
					_gotoLabel_outer = 2;
					break;
				}
				++ii2;
			}
			if(_gotoLabel_outer == 2) {
				_gotoLabel_outer = 0;
				++i;
				continue;
			}
			if(_gotoLabel_outer >= 1) {
				break;
			}
			++i;
		}
		if(_gotoLabel_outer == 0) {
			break;
		}
	}
	var i = 0;
	while(i < boneCount) {
		var result = bones[i];
		if(!result.$D$) {
			var parent = result.$gB;
			if(parent != null) {
				if(!parent.$D$) {
					var parent1 = parent.$gB;
					if(parent1 != null) {
						this.$vAB(parent1);
					}
					parent.$D$ = true;
					this.$5S.push(parent);
				}
			}
			result.$D$ = true;
			this.$5S.push(result);
		}
		++i;
	}
};
$hxClasses["$CQK"] = $CQK;
$CQK.__name__ = "$CQK";
$CQK.prototype = {
	$vAB: function(bone) {
		if(bone.$D$) {
			return;
		}
		var parent = bone.$gB;
		if(parent != null) {
			this.$vAB(parent);
		}
		bone.$D$ = true;
		this.$5S.push(bone);
	}
	,$wAB: function(bones) {
		var i = 0;
		var n = bones.length;
		while(i < n) {
			var bone = bones[i];
			if(!bone.$rI) {
				++i;
				continue;
			}
			if(bone.$D$) {
				this.$wAB(bone.$hB);
			}
			bone.$D$ = false;
			++i;
		}
	}
	,$n_: function() {
		return this.$g_;
	}
	,$2AB: function(boneName) {
		if(boneName == null) {
			throw haxe_Exception.thrown(new $CwJ("boneName cannot be null."));
		}
		var bones = this.$g_;
		var i = 0;
		var n = bones.length;
		while(i < n) {
			var bone = bones[i];
			if(bone.$HU.$CP == boneName) {
				return bone;
			}
			++i;
		}
		return null;
	}
	,$4AB: function(slotName) {
		if(slotName == null) {
			throw haxe_Exception.thrown(new $CwJ("slotName cannot be null."));
		}
		var slots = this.$jAB;
		var i = 0;
		var n = slots.length;
		while(i < n) {
			var slot = slots[i];
			if(slot.$HU.$CP == slotName) {
				return slot;
			}
			++i;
		}
		return null;
	}
	,$V6: function(slotIndex,attachmentName) {
		if(attachmentName == null) {
			throw haxe_Exception.thrown(new $CwJ("attachmentName cannot be null."));
		}
		if(this.$oAB != null) {
			var _this = this.$oAB;
			if(slotIndex < 0) {
				throw haxe_Exception.thrown(new $CwJ("slotIndex must be >= 0."));
			}
			var _this1 = _this.$CCB;
			if(attachmentName == null) {
				throw haxe_Exception.thrown(new $CwJ("name cannot be null."));
			}
			_this1.$H6 = slotIndex;
			_this1.$CP = attachmentName;
			var hash = 0;
			var chr;
			var x;
			if(attachmentName.length == 0) {
				x = 0;
			} else {
				var _g = 0;
				var _g1 = attachmentName.length;
				while(_g < _g1) {
					chr = HxOverrides.cca(attachmentName,_g++);
					hash = (hash << 5) - hash + chr;
				}
				x = hash;
			}
			_this1.$K3 = x + slotIndex * 37 | 0;
			var key = _this.$CCB;
			var entries = _this.$ACB.h[key.$K3];
			var result = null;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var entry = entries[_g++];
					var _this = entry.$TC;
					var object = key;
					var tmp;
					if(object == null) {
						tmp = false;
					} else {
						var result1 = object;
						tmp = _this.$H6 != result1.$H6 ? false : _this.$CP != result1.$CP ? false : true;
					}
					if(tmp) {
						result = entry.$bT;
						break;
					}
				}
			}
			var entry = result;
			var attachment = entry != null ? entry.$f2 : null;
			if(attachment != null) {
				return attachment;
			}
		}
		if(this.$HU.$eBB != null) {
			var _this = this.$HU.$eBB;
			if(slotIndex < 0) {
				throw haxe_Exception.thrown(new $CwJ("slotIndex must be >= 0."));
			}
			var _this1 = _this.$CCB;
			if(attachmentName == null) {
				throw haxe_Exception.thrown(new $CwJ("name cannot be null."));
			}
			_this1.$H6 = slotIndex;
			_this1.$CP = attachmentName;
			var hash = 0;
			var chr;
			var x;
			if(attachmentName.length == 0) {
				x = 0;
			} else {
				var _g = 0;
				var _g1 = attachmentName.length;
				while(_g < _g1) {
					chr = HxOverrides.cca(attachmentName,_g++);
					hash = (hash << 5) - hash + chr;
				}
				x = hash;
			}
			_this1.$K3 = x + slotIndex * 37 | 0;
			var key = _this.$CCB;
			var entries = _this.$ACB.h[key.$K3];
			var result = null;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var entry = entries[_g++];
					var _this = entry.$TC;
					var object = key;
					var tmp;
					if(object == null) {
						tmp = false;
					} else {
						var result1 = object;
						tmp = _this.$H6 != result1.$H6 ? false : _this.$CP != result1.$CP ? false : true;
					}
					if(tmp) {
						result = entry.$bT;
						break;
					}
				}
			}
			var entry = result;
			if(entry != null) {
				return entry.$f2;
			} else {
				return null;
			}
		}
		return null;
	}
	,__class__: $CQK
};
var $CTK = function() {
	this.$mAB = [];
	this.$lAB = [];
	this.$kAB = [];
	this.$jAB = [];
	this.$g_ = [];
};
$hxClasses["$CTK"] = $CTK;
$CTK.__name__ = "$CTK";
$CTK.prototype = {
	__class__: $CTK
};
var $CWK = function(name) {
	this.$CCB = new $CXK(0,"",null);
	this.$BCB = [];
	this.$g_ = [];
	this.$ACB = new $CUC();
	if(name == null) {
		throw haxe_Exception.thrown(new $CwJ("name cannot be null."));
	}
	this.$CP = name;
};
$hxClasses["$CWK"] = $CWK;
$CWK.__name__ = "$CWK";
$CWK.prototype = {
	__class__: $CWK
};
var $CXK = function(slotIndex,name,attachment) {
	this.$K3 = 0;
	this.$H6 = 0;
	if(name == null) {
		throw haxe_Exception.thrown(new $CwJ("name cannot be null."));
	}
	this.$H6 = slotIndex;
	this.$CP = name;
	var hash = 0;
	var chr;
	var x;
	if(name.length == 0) {
		x = 0;
	} else {
		var _g = 0;
		var _g1 = name.length;
		while(_g < _g1) {
			chr = HxOverrides.cca(name,_g++);
			hash = (hash << 5) - hash + chr;
		}
		x = hash;
	}
	this.$K3 = x + slotIndex * 37 | 0;
	this.$f2 = attachment;
};
$hxClasses["$CXK"] = $CXK;
$CXK.__name__ = "$CXK";
$CXK.prototype = {
	__class__: $CXK
};
var $CYK = function(data,bone) {
	this.$q5 = [];
	this.$NCB = 0;
	this.$MCB = null;
	this.$Jf = new $CvK();
	if(data == null) {
		throw haxe_Exception.thrown(new $CwJ("data cannot be null."));
	}
	if(bone == null) {
		throw haxe_Exception.thrown(new $CwJ("bone cannot be null."));
	}
	this.$HU = data;
	this.$LCB = bone;
	this.$MCB = data.$MCB == null ? null : new $CvK();
	var _this = this.$Jf;
	var color = this.$HU.$Jf;
	_this.$C = color.$C;
	_this.$JEB = color.$JEB;
	_this.$6 = color.$6;
	_this.$TD = color.$TD;
	if(this.$MCB != null) {
		var _this = this.$MCB;
		var color = this.$HU.$MCB;
		_this.$C = color.$C;
		_this.$JEB = color.$JEB;
		_this.$6 = color.$6;
		_this.$TD = color.$TD;
	}
	if(this.$HU.$VCB == null) {
		var attachment = null;
		if(this.$f2 != attachment) {
			this.$f2 = attachment;
			this.$NCB = this.$LCB.$j2.$7b;
			var this1 = this.$q5;
			this1.splice(0,this1.length);
		}
	} else {
		this.$f2 = null;
		var attachment = this.$LCB.$j2.$V6(this.$HU.$eU,this.$HU.$VCB);
		if(this.$f2 != attachment) {
			this.$f2 = attachment;
			this.$NCB = this.$LCB.$j2.$7b;
			var this1 = this.$q5;
			this1.splice(0,this1.length);
		}
	}
};
$hxClasses["$CYK"] = $CYK;
$CYK.__name__ = "$CYK";
$CYK.prototype = {
	__class__: $CYK
};
var $CZK = function(index,name,boneData) {
	this.$Jf = new $CvK(1,1,1,1);
	this.$eU = 0;
	if(index < 0) {
		throw haxe_Exception.thrown(new $CwJ("index must be >= 0."));
	}
	if(name == null) {
		throw haxe_Exception.thrown(new $CwJ("name cannot be null."));
	}
	if(boneData == null) {
		throw haxe_Exception.thrown(new $CwJ("boneData cannot be null."));
	}
	this.$eU = index;
	this.$CP = name;
	this.$UCB = boneData;
};
$hxClasses["$CZK"] = $CZK;
$CZK.__name__ = "$CZK";
$CZK.prototype = {
	__class__: $CZK
};
var $CaK = function(data,skeleton) {
	this.$dCB = new $C7K();
	this.$rI = false;
	this.$cCB = 0;
	this.$bCB = 0;
	this.$0_ = 0;
	this.$z_ = 0;
	if(data == null) {
		throw haxe_Exception.thrown(new $CwJ("data cannot be null."));
	}
	if(skeleton == null) {
		throw haxe_Exception.thrown(new $CwJ("skeleton cannot be null."));
	}
	this.$HU = data;
	this.$z_ = data.$z_;
	this.$0_ = data.$0_;
	this.$bCB = data.$bCB;
	this.$cCB = data.$cCB;
	this.$g_ = [];
	var _g = 0;
	var _g1 = data.$g_;
	while(_g < _g1.length) this.$g_.push(skeleton.$2AB(_g1[_g++].$CP));
	this.$_N = skeleton.$2AB(data.$_N.$CP);
};
$hxClasses["$CaK"] = $CaK;
$CaK.__name__ = "$CaK";
$CaK.__interfaces__ = [$C$J];
$CaK.prototype = {
	update: function() {
		if(this.$HU.$qCB) {
			if(this.$HU.$pCB) {
				var rotateMix = this.$z_;
				var translateMix = this.$0_;
				var scaleMix = this.$bCB;
				var shearMix = this.$cCB;
				var target = this.$_N;
				if(!target.$_9) {
					target.$_9 = true;
					var parent = target.$gB;
					if(parent == null) {
						target.$49 = target.$A$;
						target.$59 = target.$C$;
						target.$69 = Math.atan2(target.$_G,target.$TD) * $CNL.$XFB;
						target.$79 = Math.sqrt(target.$TD * target.$TD + target.$_G * target.$_G);
						target.$89 = Math.sqrt(target.$6 * target.$6 + target.$B$ * target.$B$);
						target.$99 = 0;
						target.$$9 = Math.atan2(target.$TD * target.$6 + target.$_G * target.$B$,target.$TD * target.$B$ - target.$6 * target.$_G) * $CNL.$XFB;
					} else {
						var pa = parent.$TD;
						var pb = parent.$6;
						var pc = parent.$_G;
						var pd = parent.$B$;
						var pid = 1 / (pa * pd - pb * pc);
						var dx = target.$A$ - parent.$A$;
						var dy = target.$C$ - parent.$C$;
						target.$49 = dx * pd * pid - dy * pb * pid;
						target.$59 = dy * pa * pid - dx * pc * pid;
						var ia = pid * pd;
						var id = pid * pa;
						var ib = pid * pb;
						var ic = pid * pc;
						var ra = ia * target.$TD - ib * target.$_G;
						var rb = ia * target.$6 - ib * target.$B$;
						var rc = id * target.$_G - ic * target.$TD;
						var rd = id * target.$B$ - ic * target.$6;
						target.$99 = 0;
						target.$79 = Math.sqrt(ra * ra + rc * rc);
						if(target.$79 > 0.0001) {
							var det = ra * rd - rb * rc;
							target.$89 = det / target.$79;
							target.$$9 = Math.atan2(ra * rb + rc * rd,det) * $CNL.$XFB;
							target.$69 = Math.atan2(rc,ra) * $CNL.$XFB;
						} else {
							target.$79 = 0;
							target.$89 = Math.sqrt(rb * rb + rd * rd);
							target.$$9 = 0;
							target.$69 = 90 - Math.atan2(rd,rb) * $CNL.$XFB;
						}
					}
				}
				var bones = this.$g_;
				var i = 0;
				var n = bones.length;
				while(i < n) {
					var bone = bones[i];
					if(!bone.$_9) {
						bone.$_9 = true;
						var parent = bone.$gB;
						if(parent == null) {
							bone.$49 = bone.$A$;
							bone.$59 = bone.$C$;
							bone.$69 = Math.atan2(bone.$_G,bone.$TD) * $CNL.$XFB;
							bone.$79 = Math.sqrt(bone.$TD * bone.$TD + bone.$_G * bone.$_G);
							bone.$89 = Math.sqrt(bone.$6 * bone.$6 + bone.$B$ * bone.$B$);
							bone.$99 = 0;
							bone.$$9 = Math.atan2(bone.$TD * bone.$6 + bone.$_G * bone.$B$,bone.$TD * bone.$B$ - bone.$6 * bone.$_G) * $CNL.$XFB;
						} else {
							var pa = parent.$TD;
							var pb = parent.$6;
							var pc = parent.$_G;
							var pd = parent.$B$;
							var pid = 1 / (pa * pd - pb * pc);
							var dx = bone.$A$ - parent.$A$;
							var dy = bone.$C$ - parent.$C$;
							bone.$49 = dx * pd * pid - dy * pb * pid;
							bone.$59 = dy * pa * pid - dx * pc * pid;
							var ia = pid * pd;
							var id = pid * pa;
							var ib = pid * pb;
							var ic = pid * pc;
							var ra = ia * bone.$TD - ib * bone.$_G;
							var rb = ia * bone.$6 - ib * bone.$B$;
							var rc = id * bone.$_G - ic * bone.$TD;
							var rd = id * bone.$B$ - ic * bone.$6;
							bone.$99 = 0;
							bone.$79 = Math.sqrt(ra * ra + rc * rc);
							if(bone.$79 > 0.0001) {
								var det = ra * rd - rb * rc;
								bone.$89 = det / bone.$79;
								bone.$$9 = Math.atan2(ra * rb + rc * rd,det) * $CNL.$XFB;
								bone.$69 = Math.atan2(rc,ra) * $CNL.$XFB;
							} else {
								bone.$79 = 0;
								bone.$89 = Math.sqrt(rb * rb + rd * rd);
								bone.$$9 = 0;
								bone.$69 = 90 - Math.atan2(rd,rb) * $CNL.$XFB;
							}
						}
					}
					var rotation = bone.$69;
					if(rotateMix != 0) {
						rotation += (target.$69 + this.$HU.$JAB) * rotateMix;
					}
					var x = bone.$49;
					var y = bone.$59;
					if(translateMix != 0) {
						x += (target.$49 + this.$HU.$De) * translateMix;
						y += (target.$59 + this.$HU.$Ee) * translateMix;
					}
					var scaleX = bone.$79;
					var scaleY = bone.$89;
					if(scaleMix != 0) {
						scaleX *= (target.$79 - 1 + this.$HU.$mCB) * scaleMix + 1;
						scaleY *= (target.$89 - 1 + this.$HU.$nCB) * scaleMix + 1;
					}
					var shearY = bone.$$9;
					if(shearMix != 0) {
						shearY += (target.$$9 + this.$HU.$oCB) * shearMix;
					}
					bone.$F$(x,y,rotation,scaleX,scaleY,bone.$99,shearY);
					++i;
				}
			} else {
				var rotateMix = this.$z_;
				var translateMix = this.$0_;
				var scaleMix = this.$bCB;
				var shearMix = this.$cCB;
				var target = this.$_N;
				if(!target.$_9) {
					target.$_9 = true;
					var parent = target.$gB;
					if(parent == null) {
						target.$49 = target.$A$;
						target.$59 = target.$C$;
						target.$69 = Math.atan2(target.$_G,target.$TD) * $CNL.$XFB;
						target.$79 = Math.sqrt(target.$TD * target.$TD + target.$_G * target.$_G);
						target.$89 = Math.sqrt(target.$6 * target.$6 + target.$B$ * target.$B$);
						target.$99 = 0;
						target.$$9 = Math.atan2(target.$TD * target.$6 + target.$_G * target.$B$,target.$TD * target.$B$ - target.$6 * target.$_G) * $CNL.$XFB;
					} else {
						var pa = parent.$TD;
						var pb = parent.$6;
						var pc = parent.$_G;
						var pd = parent.$B$;
						var pid = 1 / (pa * pd - pb * pc);
						var dx = target.$A$ - parent.$A$;
						var dy = target.$C$ - parent.$C$;
						target.$49 = dx * pd * pid - dy * pb * pid;
						target.$59 = dy * pa * pid - dx * pc * pid;
						var ia = pid * pd;
						var id = pid * pa;
						var ib = pid * pb;
						var ic = pid * pc;
						var ra = ia * target.$TD - ib * target.$_G;
						var rb = ia * target.$6 - ib * target.$B$;
						var rc = id * target.$_G - ic * target.$TD;
						var rd = id * target.$B$ - ic * target.$6;
						target.$99 = 0;
						target.$79 = Math.sqrt(ra * ra + rc * rc);
						if(target.$79 > 0.0001) {
							var det = ra * rd - rb * rc;
							target.$89 = det / target.$79;
							target.$$9 = Math.atan2(ra * rb + rc * rd,det) * $CNL.$XFB;
							target.$69 = Math.atan2(rc,ra) * $CNL.$XFB;
						} else {
							target.$79 = 0;
							target.$89 = Math.sqrt(rb * rb + rd * rd);
							target.$$9 = 0;
							target.$69 = 90 - Math.atan2(rd,rb) * $CNL.$XFB;
						}
					}
				}
				var bones = this.$g_;
				var i = 0;
				var n = bones.length;
				while(i < n) {
					var bone = bones[i];
					if(!bone.$_9) {
						bone.$_9 = true;
						var parent = bone.$gB;
						if(parent == null) {
							bone.$49 = bone.$A$;
							bone.$59 = bone.$C$;
							bone.$69 = Math.atan2(bone.$_G,bone.$TD) * $CNL.$XFB;
							bone.$79 = Math.sqrt(bone.$TD * bone.$TD + bone.$_G * bone.$_G);
							bone.$89 = Math.sqrt(bone.$6 * bone.$6 + bone.$B$ * bone.$B$);
							bone.$99 = 0;
							bone.$$9 = Math.atan2(bone.$TD * bone.$6 + bone.$_G * bone.$B$,bone.$TD * bone.$B$ - bone.$6 * bone.$_G) * $CNL.$XFB;
						} else {
							var pa = parent.$TD;
							var pb = parent.$6;
							var pc = parent.$_G;
							var pd = parent.$B$;
							var pid = 1 / (pa * pd - pb * pc);
							var dx = bone.$A$ - parent.$A$;
							var dy = bone.$C$ - parent.$C$;
							bone.$49 = dx * pd * pid - dy * pb * pid;
							bone.$59 = dy * pa * pid - dx * pc * pid;
							var ia = pid * pd;
							var id = pid * pa;
							var ib = pid * pb;
							var ic = pid * pc;
							var ra = ia * bone.$TD - ib * bone.$_G;
							var rb = ia * bone.$6 - ib * bone.$B$;
							var rc = id * bone.$_G - ic * bone.$TD;
							var rd = id * bone.$B$ - ic * bone.$6;
							bone.$99 = 0;
							bone.$79 = Math.sqrt(ra * ra + rc * rc);
							if(bone.$79 > 0.0001) {
								var det = ra * rd - rb * rc;
								bone.$89 = det / bone.$79;
								bone.$$9 = Math.atan2(ra * rb + rc * rd,det) * $CNL.$XFB;
								bone.$69 = Math.atan2(rc,ra) * $CNL.$XFB;
							} else {
								bone.$79 = 0;
								bone.$89 = Math.sqrt(rb * rb + rd * rd);
								bone.$$9 = 0;
								bone.$69 = 90 - Math.atan2(rd,rb) * $CNL.$XFB;
							}
						}
					}
					var rotation = bone.$69;
					if(rotateMix != 0) {
						var r = target.$69 - rotation + this.$HU.$JAB;
						r -= (16384 - (16384.499999999996 - r / 360 | 0)) * 360;
						rotation += r * rotateMix;
					}
					var x = bone.$49;
					var y = bone.$59;
					if(translateMix != 0) {
						x += (target.$49 - x + this.$HU.$De) * translateMix;
						y += (target.$59 - y + this.$HU.$Ee) * translateMix;
					}
					var scaleX = bone.$79;
					var scaleY = bone.$89;
					if(scaleMix != 0) {
						if(scaleX != 0) {
							scaleX = (scaleX + (target.$79 - scaleX + this.$HU.$mCB) * scaleMix) / scaleX;
						}
						if(scaleY != 0) {
							scaleY = (scaleY + (target.$89 - scaleY + this.$HU.$nCB) * scaleMix) / scaleY;
						}
					}
					var shearY = bone.$$9;
					if(shearMix != 0) {
						var r1 = target.$$9 - shearY + this.$HU.$oCB;
						r1 -= (16384 - (16384.499999999996 - r1 / 360 | 0)) * 360;
						shearY += r1 * shearMix;
					}
					bone.$F$(x,y,rotation,scaleX,scaleY,bone.$99,shearY);
					++i;
				}
			}
		} else if(this.$HU.$pCB) {
			var rotateMix = this.$z_;
			var translateMix = this.$0_;
			var scaleMix = this.$bCB;
			var shearMix = this.$cCB;
			var target = this.$_N;
			var ta = target.$TD;
			var tb = target.$6;
			var tc = target.$_G;
			var td = target.$B$;
			var degRadReflect = ta * td - tb * tc > 0 ? $CNL.$WFB : -$CNL.$WFB;
			var offsetRotation = this.$HU.$JAB * degRadReflect;
			var offsetShearY = this.$HU.$oCB * degRadReflect;
			var bones = this.$g_;
			var i = 0;
			var n = bones.length;
			while(i < n) {
				var bone = bones[i];
				var modified = false;
				if(rotateMix != 0) {
					var a = bone.$TD;
					var b = bone.$6;
					var c = bone.$_G;
					var d = bone.$B$;
					var r = Math.atan2(tc,ta) + offsetRotation;
					if(r > 3.1415927) {
						r -= 6.2831854;
					} else if(r < -3.1415927) {
						r += 6.2831854;
					}
					r *= rotateMix;
					var cos = Math.cos(r);
					var sin = Math.sin(r);
					bone.$TD = cos * a - sin * c;
					bone.$6 = cos * b - sin * d;
					bone.$_G = sin * a + cos * c;
					bone.$B$ = sin * b + cos * d;
					modified = true;
				}
				if(translateMix != 0) {
					var temp = this.$dCB;
					temp.$QC = this.$HU.$De;
					temp.$RC = this.$HU.$Ee;
					if(temp == null) {
						throw haxe_Exception.thrown(new $CwJ("local cannot be null."));
					}
					var x = temp.$QC;
					var y = temp.$RC;
					temp.$QC = x * target.$TD + y * target.$6 + target.$A$;
					temp.$RC = x * target.$_G + y * target.$B$ + target.$C$;
					bone.$A$ += temp.$QC * translateMix;
					bone.$C$ += temp.$RC * translateMix;
					modified = true;
				}
				if(scaleMix > 0) {
					var s = (Math.sqrt(ta * ta + tc * tc) - 1 + this.$HU.$mCB) * scaleMix + 1;
					bone.$TD *= s;
					bone.$_G *= s;
					s = (Math.sqrt(tb * tb + td * td) - 1 + this.$HU.$nCB) * scaleMix + 1;
					bone.$6 *= s;
					bone.$B$ *= s;
					modified = true;
				}
				if(shearMix > 0) {
					var r1 = Math.atan2(td,tb) - Math.atan2(tc,ta);
					if(r1 > 3.1415927) {
						r1 -= 6.2831854;
					} else if(r1 < -3.1415927) {
						r1 += 6.2831854;
					}
					var b1 = bone.$6;
					var d1 = bone.$B$;
					r1 = Math.atan2(d1,b1) + (r1 - 1.57079635 + offsetShearY) * shearMix;
					var s1 = Math.sqrt(b1 * b1 + d1 * d1);
					bone.$6 = Math.cos(r1) * s1;
					bone.$B$ = Math.sin(r1) * s1;
					modified = true;
				}
				if(modified) {
					bone.$_9 = false;
				}
				++i;
			}
		} else {
			var rotateMix = this.$z_;
			var translateMix = this.$0_;
			var scaleMix = this.$bCB;
			var shearMix = this.$cCB;
			var target = this.$_N;
			var ta = target.$TD;
			var tb = target.$6;
			var tc = target.$_G;
			var td = target.$B$;
			var degRadReflect = ta * td - tb * tc > 0 ? $CNL.$WFB : -$CNL.$WFB;
			var offsetRotation = this.$HU.$JAB * degRadReflect;
			var offsetShearY = this.$HU.$oCB * degRadReflect;
			var bones = this.$g_;
			var i = 0;
			var n = bones.length;
			while(i < n) {
				var bone = bones[i];
				var modified = false;
				if(rotateMix != 0) {
					var a = bone.$TD;
					var b = bone.$6;
					var c = bone.$_G;
					var d = bone.$B$;
					var r = Math.atan2(tc,ta) - Math.atan2(c,a) + offsetRotation;
					if(r > 3.1415927) {
						r -= 6.2831854;
					} else if(r < -3.1415927) {
						r += 6.2831854;
					}
					r *= rotateMix;
					var cos = Math.cos(r);
					var sin = Math.sin(r);
					bone.$TD = cos * a - sin * c;
					bone.$6 = cos * b - sin * d;
					bone.$_G = sin * a + cos * c;
					bone.$B$ = sin * b + cos * d;
					modified = true;
				}
				if(translateMix != 0) {
					var temp = this.$dCB;
					temp.$QC = this.$HU.$De;
					temp.$RC = this.$HU.$Ee;
					if(temp == null) {
						throw haxe_Exception.thrown(new $CwJ("local cannot be null."));
					}
					var x = temp.$QC;
					var y = temp.$RC;
					temp.$QC = x * target.$TD + y * target.$6 + target.$A$;
					temp.$RC = x * target.$_G + y * target.$B$ + target.$C$;
					bone.$A$ += (temp.$QC - bone.$A$) * translateMix;
					bone.$C$ += (temp.$RC - bone.$C$) * translateMix;
					modified = true;
				}
				if(scaleMix > 0) {
					var s = Math.sqrt(bone.$TD * bone.$TD + bone.$_G * bone.$_G);
					if(s != 0) {
						s = (s + (Math.sqrt(ta * ta + tc * tc) - s + this.$HU.$mCB) * scaleMix) / s;
					}
					bone.$TD *= s;
					bone.$_G *= s;
					s = Math.sqrt(bone.$6 * bone.$6 + bone.$B$ * bone.$B$);
					if(s != 0) {
						s = (s + (Math.sqrt(tb * tb + td * td) - s + this.$HU.$nCB) * scaleMix) / s;
					}
					bone.$6 *= s;
					bone.$B$ *= s;
					modified = true;
				}
				if(shearMix > 0) {
					var b1 = bone.$6;
					var d1 = bone.$B$;
					var by = Math.atan2(d1,b1);
					var r1 = Math.atan2(td,tb) - Math.atan2(tc,ta) - (by - Math.atan2(bone.$_G,bone.$TD));
					if(r1 > 3.1415927) {
						r1 -= 6.2831854;
					} else if(r1 < -3.1415927) {
						r1 += 6.2831854;
					}
					r1 = by + (r1 + offsetShearY) * shearMix;
					var s1 = Math.sqrt(b1 * b1 + d1 * d1);
					bone.$6 = Math.cos(r1) * s1;
					bone.$B$ = Math.sin(r1) * s1;
					modified = true;
				}
				if(modified) {
					bone.$_9 = false;
				}
				++i;
			}
		}
	}
	,__class__: $CaK
};
var $CbK = function(name) {
	this.$qCB = false;
	this.$pCB = false;
	this.$oCB = 0;
	this.$nCB = 0;
	this.$mCB = 0;
	this.$Ee = 0;
	this.$De = 0;
	this.$JAB = 0;
	this.$cCB = 0;
	this.$bCB = 0;
	this.$0_ = 0;
	this.$z_ = 0;
	this.$g_ = [];
	$CDK.call(this,name);
};
$hxClasses["$CbK"] = $CbK;
$CbK.__name__ = "$CbK";
$CbK.__super__ = $CDK;
$CbK.prototype = $extend($CDK.prototype,{
	__class__: $CbK
});
var $CeK = function(name) {
	if(name == null) {
		throw haxe_Exception.thrown(new $CwJ("name cannot be null."));
	}
	this.$CP = name;
};
$hxClasses["$CeK"] = $CeK;
$CeK.__name__ = "$CeK";
$CeK.prototype = {
	toString: function() {
		return this.$CP;
	}
	,__class__: $CeK
};
var $ChK = function(name) {
	this.$MDB = 0;
	$CeK.call(this,name);
};
$hxClasses["$ChK"] = $ChK;
$ChK.__name__ = "$ChK";
$ChK.__super__ = $CeK;
$ChK.prototype = $extend($CeK.prototype,{
	__class__: $ChK
});
var $CkK = function(name) {
	this.$Jf = new $CvK(1,1,1,1);
	this.$cDB = null;
	$ChK.call(this,name);
};
$hxClasses["$CkK"] = $CkK;
$CkK.__name__ = "$CkK";
$CkK.__super__ = $ChK;
$CkK.prototype = $extend($ChK.prototype,{
	$gDB: function() {
		if(this.$3CB == null) {
			throw haxe_Exception.thrown(new $CpK("Region has not been set: " + $CG.$1(this)));
		}
		return this.$3CB;
	}
	,__class__: $CkK
});
var $ClK = function(name) {
	this.$yDB = false;
	this.$xDB = false;
	$ChK.call(this,name);
};
$hxClasses["$ClK"] = $ClK;
$ClK.__name__ = "$ClK";
$ClK.__super__ = $ChK;
$ClK.prototype = $extend($ChK.prototype,{
	__class__: $ClK
});
var $CnK = function(name) {
	this.$Jf = new $CvK(1,1,1,1);
	this.$JP = 0;
	this.$IP = 0;
	this.$FP = 0;
	this.$OQ = 1;
	this.$NQ = 1;
	this.$RC = 0;
	this.$QC = 0;
	$CeK.call(this,name);
};
$hxClasses["$CnK"] = $CnK;
$CnK.__name__ = "$CnK";
$CnK.__super__ = $CeK;
$CnK.prototype = $extend($CeK.prototype,{
	__class__: $CnK
});
var $CoK = function(message) {
	if(message == null) {
		message = "";
	}
	$CvJ.call(this,message);
	this.$CP = "ArrayIndexOutOfBoundsException";
};
$hxClasses["$CoK"] = $CoK;
$CoK.__name__ = "$CoK";
$CoK.__super__ = $CvJ;
$CoK.prototype = $extend($CvJ.prototype,{
	__class__: $CoK
});
var $CpK = function(message) {
	if(message == null) {
		message = "";
	}
	$CvJ.call(this,message);
	this.$CP = "IllegalStateException";
};
$hxClasses["$CpK"] = $CpK;
$CpK.__name__ = "$CpK";
$CpK.__super__ = $CvJ;
$CpK.prototype = $extend($CvJ.prototype,{
	__class__: $CpK
});
var $CvK = function(r,g,b,a) {
	if(a == null) {
		a = 0;
	}
	if(b == null) {
		b = 0;
	}
	if(g == null) {
		g = 0;
	}
	if(r == null) {
		r = 0;
	}
	this.$C = r;
	this.$JEB = g;
	this.$6 = b;
	this.$TD = a;
};
$hxClasses["$CvK"] = $CvK;
$CvK.__name__ = "$CvK";
$CvK.prototype = {
	__class__: $CvK
};
var $CzK = function() {
};
$hxClasses["$CzK"] = $CzK;
$CzK.__name__ = "$CzK";
$CzK.prototype = {
	__class__: $CzK
};
var $C0K = function() {
};
$hxClasses["$C0K"] = $C0K;
$C0K.__name__ = "$C0K";
$C0K.prototype = {
	__class__: $C0K
};
var $C1K = function() {
	this.$JFB = 0;
	this.$JP = 0;
	this.$IP = 0;
	this.$RC = 0;
	this.$QC = 0;
	$C0K.call(this);
};
$hxClasses["$C1K"] = $C1K;
$C1K.__name__ = "$C1K";
$C1K.__super__ = $C0K;
$C1K.prototype = $extend($C0K.prototype,{
	__class__: $C1K
});
var $C7K = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.$RC = 0;
	this.$QC = 0;
	this.$QC = x;
	this.$RC = y;
};
$hxClasses["$C7K"] = $C7K;
$C7K.__name__ = "$C7K";
$C7K.prototype = {
	__class__: $C7K
};
var $C$K = {};
$C$K.$v = function(src,srcPos,dest,destPos,length) {
	var val;
	var srcIndex = srcPos;
	var destIndex = destPos;
	var end = length + srcPos;
	while(srcIndex < end) {
		val = src[srcIndex];
		dest[destIndex] = val;
		++srcIndex;
		++destIndex;
	}
};
var $C_$K = {};
$C_$K.$1R = function(this1) {
	var keys = [];
	var entryList = this1.iterator();
	while(entryList.hasNext()) {
		var entryList1 = entryList.next();
		var _g = 0;
		var _g1 = entryList1.length;
		while(_g < _g1) keys.push(entryList1[_g++].$TC);
	}
	return keys;
};
var $CAL = function(key,value) {
	this.$TC = key;
	this.$bT = value;
};
$hxClasses["$CAL"] = $CAL;
$CAL.__name__ = "$CAL";
$CAL.prototype = {
	__class__: $CAL
};
var $CNL = function() { };
$hxClasses["$CNL"] = $CNL;
$CNL.__name__ = "$CNL";
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
$CaC.$c = 0;
js_Boot.__toStr = ({ }).toString;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = $CAE.$RZ;
}
$CL.$WB = 0;
$CL.$XB = 1;
$CL.$YB = 2;
$CL.$ZB = 3;
$CL.$aB = 4;
$CL.$bB = 5;
$CL.$cB = 6;
$CR.$lC = $CR.$kC();
$CR.$mC = $CR.$kC();
$CR.$nC = $CR.$kC();
$CR.$oC = [];
$CR.$pC = [];
$CR.$qC = new $CO();
$CR.$rC = new $CO();
$CR.$sC = new $CO();
$CR.$tC = new $CO();
$CR.$uC = new $CO();
$CR.$vC = new $CO();
$CR.$wC = new $CO();
$CR.$xC = new $CO();
$CV.$ZD = new $CT();
$CV.$aD = [];
$CV.$bD = [];
$Cc.$HE = 0;
$Cq.$7E = 0;
$Cq.$8E = 0;
$Cq.$9E = 0;
$Cq.$$E = 0;
$Cq.$_E = 0;
$Cq.$AF = new $Cm();
$Cq.$BF = new $CW();
$Cq.$CF = new $Co();
$Cq.$DF = new $Co();
$Cq.$EF = new $Ck();
$Cq.$FF = new $CX();
$C3.$aI = new $Co();
$C6.$yI = new $C6();
$C8.$5I = new $C8();
$CCB.$1J = new $C7();
$CEB.$mK = new $CDB();
$CEB.$oK = new $C1();
$CEB.$pK = new $C1();
$CEB.$qK = new $CDB();
$CEB.$rK = [];
$CFB.$IL = new $Cn();
$CNB.$wL = new $Cr();
$CNB.$xL = new $CMB();
kit_creator_CreatorObject.__creator = { spawned : $CuB.CBool, onStarted : $CuB.CString, onUpdated : $CuB.CString, onStopped : $CuB.CString};
ez_Actor.$8O = 5;
ez_Actor.__creator = { pointerEnabled : $CuB.CBool, onPointerDown : $CuB.CString, onPointerIn : $CuB.CString, onPointerOut : $CuB.CString, onPointerUp : $CuB.CString, physicsEnabled : $CuB.CBool, density : $CuB.CFloat, fixedRotation : $CuB.CBool, gravityScale : $CuB.CFloat, friction : $CuB.CFloat, restitution : $CuB.CFloat, sensor : $CuB.CBool, collisionGroup : $CuB.CArray($CuB.CString), collidesWith : $CuB.CArray($CuB.CString), onBeginContact : $CuB.CString, onEndContact : $CuB.CString, physicsType : $CuB.CEnum(ez_PhysicsType), chromaKeyEnabled : $CuB.CBool};
kit_creator_CreatorAction.__creator = { target : $CuB.CClass($CwB)};
ez_Delay.__creator = { duration : $CuB.CFloat};
ez_RunAction.__creator = { name : $CuB.CString};
ez_VectorGraphics.$8O = 5;
ez_VectorGraphics.__creator = { fillColor : $CuB.CInt, strokeColor : $CuB.CInt, strokeWidth : $CuB.CInt};
$C6B.$RR = new $C5B();
$C6B.$SR = new $C4B();
$C6B.$TR = new $C3B();
ez_display_AlphaTo.__creator = { to : $CuB.CFloat, duration : $CuB.CFloat, ease : $CuB.CEnum(ez_TweenEase)};
ez_display_MoveBy.__creator = { x : $CuB.CFloat, y : $CuB.CFloat, duration : $CuB.CFloat, ease : $CuB.CEnum(ez_TweenEase)};
ez_display_MoveTo.__creator = { x : $CuB.CFloat, y : $CuB.CFloat, duration : $CuB.CFloat, ease : $CuB.CEnum(ez_TweenEase)};
ez_display_PlayParticles.__creator = { amount : $CuB.CInt, particleSystem : $CuB.CString, offsetX : $CuB.CFloat, offsetY : $CuB.CFloat};
ez_display_RotateBy.__creator = { by : $CuB.CFloat, duration : $CuB.CFloat, ease : $CuB.CEnum(ez_TweenEase)};
ez_display_ScaleTo.__creator = { x : $CuB.CFloat, y : $CuB.CFloat, duration : $CuB.CFloat, ease : $CuB.CEnum(ez_TweenEase)};
ez_property_PropertyAction.__creator = { property : $CuB.CString, location : $CuB.CEnum(ez_property_PropertyLocation)};
ez_property_AddToProperty.__creator = { value : $CuB.CFloat};
ez_property_IfProperty.__creator = { property : $CuB.CString, operator : $CuB.CEnum(ez_property_IfOperator), type : $CuB.CEnum(ez_property_PropertyType), value : $CuB.CString};
ez_property_SetProperty.__creator = { type : $CuB.CEnum(ez_property_PropertyType), value : $CuB.CString};
ez_scene_SceneAction.__creator = { transition : $CuB.CEnum(ez_scene_SceneTransition), duration : $CuB.CFloat};
ez_scene_ChangeScene.__creator = { scene : $CuB.CString, onLoadError : $CuB.CString, loadingScene : $CuB.CString, disposeUnusedAssets : $CuB.CBool};
$C_$C.$jV = (function($this) {
	var $r;
	var h = new $CcC();
	h.h["lt"] = "<";
	h.h["gt"] = ">";
	h.h["amp"] = "&";
	h.h["quot"] = "\"";
	h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
$CRE.$pa = new $CQE();
$CUE.$0 = new $CUE();
$CXE.$db = new $CWE(null,null);
$CcE.$cT = new $CRE();
$CcE.$5b = new $CaE();
$CcE.$6b = new $CZE();
$CcE.$cP = new $CVE(false);
$CcE.$8b = new $CbE(1);
$CcE.$Gc = $CUE.$0;
$CnE.$Md = true;
kit_creator_Camera.__creator = { following : $CuB.CClass($CRE), zoom : $CuB.CClass($CbE), active : $CuB.CBool, offsetX : $CuB.CFloat, offsetY : $CuB.CFloat};
$C3E.$de = new $C2E();
kit_creator_ui_Widget.$de = new $C2E();
kit_creator_ui_Widget.__creator = { pointerEnabled : $CuB.CBool, onPointerDown : $CuB.CString, onPointerIn : $CuB.CString, onPointerOut : $CuB.CString, onPointerUp : $CuB.CString, onClick : $CuB.CString, dockX : $CuB.CEnum(kit_creator_ui_DockX), dockY : $CuB.CEnum(kit_creator_ui_DockY)};
kit_creator_ui_Button.$8O = 5;
kit_creator_ui_Button.__creator = { pressDistance : $CuB.CFloat};
kit_creator_ui_Image.$8O = 5;
kit_creator_ui_Text.$8O = 5;
kit_creator_ui_Text.__creator = { font : $CuB.CString, systemFont : $CuB.CString, text : $CuB.CString, fontSize : $CuB.CFloat, bold : $CuB.CBool, italic : $CuB.CBool, color : $CuB.CInt, strokeColor : $CuB.CInt, strokeWidth : $CuB.CFloat, lineSpacing : $CuB.CFloat, textAlign : $CuB.CEnum(kit_display_TextAlign)};
$CdF.$bf = new $CcF(10);
$ClG.$vl = new $C1F();
$CnG.$vl = new $C2F();
$CpG.$vl = new $C3F();
$CpG.$1l = false;
$CvG.__meta__ = { obj : { injected : [{ maxHeight : 1390, fullscreen : false, scenes : { HUD_bottom : ["mainassets"], HUD_top : ["mainassets"], EndCard : ["mainassets"], CorrectAnswerTextAnim : ["mainassets"], StarAnim : ["mainassets"], Home : ["mainassets"], Instructions : ["mainassets"], LevelCleared : ["mainassets"]}, assets : { mainassets : [{ name : "CorrectAnswerTextAnim.symbol__.js", bytes : 1780},{ name : "EndCard.scene__.js", bytes : 5611},{ name : "HUD_bottom.symbol__.js", bytes : 5500},{ name : "HUD_top.symbol__.js", bytes : 6334},{ name : "Home.scene__.js", bytes : 11790},{ name : "Instructions.symbol__.js", bytes : 2814},{ name : "LevelCleared.symbol__.js", bytes : 4863},{ name : "StarAnim.symbol__.js", bytes : 1946},{ name : "_2DKit/atlas.json__.js", bytes : 1836},{ name : "fonts/peevedpenguins-regular.woff__.js", bytes : 20800},{ name : "particles/sparkle.pex__.js", bytes : 1365},{ name : "particles/stars-blurry02-yellow/stars-blurry02-yellow.pex__.js", bytes : 1990},{ name : "_2DKit/texture0.png", bytes : 394786}]}, id : "com.2dkit.match3", maxWidth : 744, scaleMode : 1, height : 1136, orientation : "any", build : "cismbhbvl5drwb", width : 640}]}};
$ChH.$Sp = 0;
$ChH.$Tp = 0;
$C1H.$8p = ["webkit","moz","ms"];
$C1H.$ch = (function($this) {
	var $r;
	var ua = $global.navigator.userAgent;
	$r = new $CB("(iPhone|iPod|iPad)","").$D(ua) ? true : $global.navigator.platform == "MacIntel" && $global.navigator.standalone != null ? true : false;
	return $r;
}(this));
$C1H.$9p = new $CB("\\b(Trident|Edge)\\b","").$D($global.navigator.userAgent);
$C1H.$$p = (function($this) {
	var $r;
	var ua = $global.navigator.userAgent;
	$r = new $CB("\\bMacintosh\\b","").$D(ua) && new $CB("\\bSafari/","").$D(ua) ? new $CB("\\bVersion/","").$D(ua) : false;
	return $r;
}(this));
$C1H.$_p = $global.navigator.userAgent.indexOf("2DKSim") >= 0;
$CAI.$wq = new $CwG().$Em(1000000).$Gm(function(_,audioBuffer) {
	return audioBuffer.numberOfChannels * audioBuffer.length;
});
$CDI.$5q = true;
$CjI.$SR = new $C4B();
$CQJ.$s3 = false;
$CQJ.$63 = false;
$CQJ.$_3 = true;
$CQJ.$A4 = false;
$CQJ.$B4 = 8;
$CQJ.$C4 = 10;
$CQJ.$D4 = 10;
$CQJ.$E4 = 60;
$CQJ.$F4 = 0.3;
$CQJ.$H4 = false;
project_Match3Object.$8O = 5;
project_Match3Object.__creator = { levelCount : $CuB.CInt, onGameOver : $CuB.CString, onMatch : $CuB.CString, numGems : $CuB.CInt, columns : $CuB.CInt, rows : $CuB.CInt, tileSize : $CuB.CInt};
project_MoveToHintTile.__creator = { boardObject : $CuB.CClass($CwB), duration : $CuB.CFloat, ease : $CuB.CEnum(ez_TweenEase)};
project_MoveToMatchTile.__creator = { boardObject : $CuB.CClass($CwB), duration : $CuB.CFloat, ease : $CuB.CEnum(ez_TweenEase)};
project_PlayParticlesAtMatchTile.__creator = { amount : $CuB.CInt, particleSystem : $CuB.CString, boardObject : $CuB.CClass($CwB), duration : $CuB.CFloat, ease : $CuB.CEnum(ez_TweenEase)};
$CIK.__meta__ = { fields : { update : { SuppressWarnings : ["null"]}}};
$CIK.$FAB = 0.00001;
$CNL.$yFB = 57.2957786666616613;
$CNL.$XFB = $CNL.$yFB;
$CNL.$zFB = 0.0174532927777777784;
$CNL.$WFB = $CNL.$zFB;
$CuG.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
